(self["webpackChunksparkworks_console"] = self["webpackChunksparkworks_console"] || []).push([["default-node_modules_aws-amplify_api_lib-esm_API_js-src_app_shared_api_config_ts"],{

/***/ 44651:
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-amplify/api-graphql/lib-esm/GraphQLAPI.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "graphqlOperation": function() { return /* binding */ graphqlOperation; },
/* harmony export */   "GraphQLAPIClass": function() { return /* binding */ GraphQLAPIClass; },
/* harmony export */   "GraphQLAPI": function() { return /* binding */ GraphQLAPI; }
/* harmony export */ });
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ 59532);
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ 91555);
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! graphql */ 60451);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-amplify/core */ 75001);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aws-amplify/core */ 92432);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @aws-amplify/core */ 24219);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @aws-amplify/core */ 94758);
/* harmony import */ var _aws_amplify_pubsub__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @aws-amplify/pubsub */ 2294);
/* harmony import */ var _aws_amplify_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-amplify/auth */ 77391);
/* harmony import */ var _aws_amplify_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/cache */ 68010);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ 77513);
/* harmony import */ var _aws_amplify_api_rest__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-amplify/api-rest */ 44657);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var __read = undefined && undefined.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};
/*
 * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */









var USER_AGENT_HEADER = 'x-amz-user-agent';
var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.ConsoleLogger('GraphQLAPI');
var graphqlOperation = function graphqlOperation(query, variables, authToken) {
  if (variables === void 0) {
    variables = {};
  }

  return {
    query: query,
    variables: variables,
    authToken: authToken
  };
};
/**
 * Export Cloud Logic APIs
 */

var GraphQLAPIClass = function () {
  /**
   * Initialize GraphQL API with AWS configuration
   * @param {Object} options - Configuration object for API
   */
  function GraphQLAPIClass(options) {
    this._api = null;
    this.Auth = _aws_amplify_auth__WEBPACK_IMPORTED_MODULE_2__.default;
    this.Cache = _aws_amplify_cache__WEBPACK_IMPORTED_MODULE_0__.default;
    this.Credentials = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.Credentials;
    this._options = options;
    logger.debug('API Options', this._options);
  }

  GraphQLAPIClass.prototype.getModuleName = function () {
    return 'GraphQLAPI';
  };
  /**
   * Configure API
   * @param {Object} config - Configuration of the API
   * @return {Object} - The current configuration
   */


  GraphQLAPIClass.prototype.configure = function (options) {
    var _a = options || {},
        _b = _a.API,
        API = _b === void 0 ? {} : _b,
        otherOptions = __rest(_a, ["API"]);

    var opt = __assign(__assign({}, otherOptions), API);

    logger.debug('configure GraphQL API', {
      opt: opt
    });

    if (opt['aws_project_region']) {
      opt = Object.assign({}, opt, {
        region: opt['aws_project_region'],
        header: {}
      });
    }

    if (typeof opt.graphql_headers !== 'undefined' && typeof opt.graphql_headers !== 'function') {
      logger.warn('graphql_headers should be a function');
      opt.graphql_headers = undefined;
    }

    this._options = Object.assign({}, this._options, opt);
    this.createInstance();
    return this._options;
  };
  /**
   * Create an instance of API for the library
   * @return - A promise of true if Success
   */


  GraphQLAPIClass.prototype.createInstance = function () {
    logger.debug('create Rest instance');

    if (this._options) {
      this._api = new _aws_amplify_api_rest__WEBPACK_IMPORTED_MODULE_4__.RestClient(this._options); // Share instance Credentials with client for SSR

      this._api.Credentials = this.Credentials;
      return true;
    } else {
      return Promise.reject('API not configured');
    }
  };

  GraphQLAPIClass.prototype._headerBasedAuth = function (defaultAuthenticationType, additionalHeaders) {
    if (additionalHeaders === void 0) {
      additionalHeaders = {};
    }

    return __awaiter(this, void 0, void 0, function () {
      var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, token, federatedInfo, currentUser, e_1, session, e_2;

      return __generator(this, function (_c) {
        switch (_c.label) {
          case 0:
            _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;
            authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';
            headers = {};
            _b = authenticationType;

            switch (_b) {
              case 'API_KEY':
                return [3
                /*break*/
                , 1];

              case 'AWS_IAM':
                return [3
                /*break*/
                , 2];

              case 'OPENID_CONNECT':
                return [3
                /*break*/
                , 4];

              case 'AMAZON_COGNITO_USER_POOLS':
                return [3
                /*break*/
                , 11];

              case 'AWS_LAMBDA':
                return [3
                /*break*/
                , 15];
            }

            return [3
            /*break*/
            , 16];

          case 1:
            if (!apiKey) {
              throw new Error(_types__WEBPACK_IMPORTED_MODULE_5__.GraphQLAuthError.NO_API_KEY);
            }

            headers = {
              Authorization: null,
              'X-Api-Key': apiKey
            };
            return [3
            /*break*/
            , 17];

          case 2:
            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 3:
            credentialsOK = _c.sent();

            if (!credentialsOK) {
              throw new Error(_types__WEBPACK_IMPORTED_MODULE_5__.GraphQLAuthError.NO_CREDENTIALS);
            }

            return [3
            /*break*/
            , 17];

          case 4:
            _c.trys.push([4, 9,, 10]);

            token = void 0;
            return [4
            /*yield*/
            , _aws_amplify_cache__WEBPACK_IMPORTED_MODULE_0__.default.getItem('federatedInfo')];

          case 5:
            federatedInfo = _c.sent();
            if (!federatedInfo) return [3
            /*break*/
            , 6];
            token = federatedInfo.token;
            return [3
            /*break*/
            , 8];

          case 6:
            return [4
            /*yield*/
            , _aws_amplify_auth__WEBPACK_IMPORTED_MODULE_2__.default.currentAuthenticatedUser()];

          case 7:
            currentUser = _c.sent();

            if (currentUser) {
              token = currentUser.token;
            }

            _c.label = 8;

          case 8:
            if (!token) {
              throw new Error(_types__WEBPACK_IMPORTED_MODULE_5__.GraphQLAuthError.NO_FEDERATED_JWT);
            }

            headers = {
              Authorization: token
            };
            return [3
            /*break*/
            , 10];

          case 9:
            e_1 = _c.sent();
            throw new Error(_types__WEBPACK_IMPORTED_MODULE_5__.GraphQLAuthError.NO_CURRENT_USER);

          case 10:
            return [3
            /*break*/
            , 17];

          case 11:
            _c.trys.push([11, 13,, 14]);

            return [4
            /*yield*/
            , this.Auth.currentSession()];

          case 12:
            session = _c.sent();
            headers = {
              Authorization: session.getAccessToken().getJwtToken()
            };
            return [3
            /*break*/
            , 14];

          case 13:
            e_2 = _c.sent();
            throw new Error(_types__WEBPACK_IMPORTED_MODULE_5__.GraphQLAuthError.NO_CURRENT_USER);

          case 14:
            return [3
            /*break*/
            , 17];

          case 15:
            if (!additionalHeaders.Authorization) {
              throw new Error(_types__WEBPACK_IMPORTED_MODULE_5__.GraphQLAuthError.NO_AUTH_TOKEN);
            }

            headers = {
              Authorization: additionalHeaders.Authorization
            };
            return [3
            /*break*/
            , 17];

          case 16:
            headers = {
              Authorization: null
            };
            return [3
            /*break*/
            , 17];

          case 17:
            return [2
            /*return*/
            , headers];
        }
      });
    });
  };
  /**
   * to get the operation type
   * @param operation
   */


  GraphQLAPIClass.prototype.getGraphqlOperationType = function (operation) {
    var doc = (0,graphql__WEBPACK_IMPORTED_MODULE_6__.parse)(operation);
    var definitions = doc.definitions;

    var _a = __read(definitions, 1),
        operationType = _a[0].operation;

    return operationType;
  };
  /**
   * Executes a GraphQL operation
   *
   * @param options - GraphQL Options
   * @param [additionalHeaders] - headers to merge in after any `graphql_headers` set in the config
   * @returns An Observable if the query is a subscription query, else a promise of the graphql result.
   */


  GraphQLAPIClass.prototype.graphql = function (_a, additionalHeaders) {
    var paramQuery = _a.query,
        _b = _a.variables,
        variables = _b === void 0 ? {} : _b,
        authMode = _a.authMode,
        authToken = _a.authToken;
    var query = typeof paramQuery === 'string' ? (0,graphql__WEBPACK_IMPORTED_MODULE_6__.parse)(paramQuery) : (0,graphql__WEBPACK_IMPORTED_MODULE_6__.parse)((0,graphql__WEBPACK_IMPORTED_MODULE_7__.print)(paramQuery));

    var _c = __read(query.definitions.filter(function (def) {
      return def.kind === 'OperationDefinition';
    }), 1),
        _d = _c[0],
        operationDef = _d === void 0 ? {} : _d;

    var operationType = operationDef.operation;
    var headers = additionalHeaders || {}; // if an authorization header is set, have the explicit authToken take precedence

    if (authToken) {
      headers.Authorization = authToken;
    }

    switch (operationType) {
      case 'query':
      case 'mutation':
        var cancellableToken = this._api.getCancellableToken();

        var initParams = {
          cancellableToken: cancellableToken
        };

        var responsePromise = this._graphql({
          query: query,
          variables: variables,
          authMode: authMode
        }, headers, initParams);

        this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);

        return responsePromise;

      case 'subscription':
        return this._graphqlSubscribe({
          query: query,
          variables: variables,
          authMode: authMode
        }, headers);

      default:
        throw new Error("invalid operation type: " + operationType);
    }
  };

  GraphQLAPIClass.prototype._graphql = function (_a, additionalHeaders, initParams) {
    var query = _a.query,
        variables = _a.variables,
        authMode = _a.authMode;

    if (additionalHeaders === void 0) {
      additionalHeaders = {};
    }

    if (initParams === void 0) {
      initParams = {};
    }

    return __awaiter(this, void 0, void 0, function () {
      var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, _h, _j, body, init, endpoint, error, response, err_1, errors;

      var _k;

      return __generator(this, function (_l) {
        switch (_l.label) {
          case 0:
            if (!!this._api) return [3
            /*break*/
            , 2];
            return [4
            /*yield*/
            , this.createInstance()];

          case 1:
            _l.sent();

            _l.label = 2;

          case 2:
            _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () {
              return {};
            } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;
            _d = [{}];
            _e = !customGraphqlEndpoint;
            if (!_e) return [3
            /*break*/
            , 4];
            return [4
            /*yield*/
            , this._headerBasedAuth(authMode, additionalHeaders)];

          case 3:
            _e = _l.sent();
            _l.label = 4;

          case 4:
            _f = [__assign.apply(void 0, _d.concat([_e]))];
            _g = customGraphqlEndpoint;
            if (!_g) return [3
            /*break*/
            , 8];
            if (!customEndpointRegion) return [3
            /*break*/
            , 6];
            return [4
            /*yield*/
            , this._headerBasedAuth(authMode, additionalHeaders)];

          case 5:
            _h = _l.sent();
            return [3
            /*break*/
            , 7];

          case 6:
            _h = {
              Authorization: null
            };
            _l.label = 7;

          case 7:
            _g = _h;
            _l.label = 8;

          case 8:
            _j = [__assign.apply(void 0, _f.concat([_g]))];
            return [4
            /*yield*/
            , graphql_headers({
              query: query,
              variables: variables
            })];

          case 9:
            headers = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), additionalHeaders]), !customGraphqlEndpoint && (_k = {}, _k[USER_AGENT_HEADER] = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_8__.Constants.userAgent, _k)]);
            body = {
              query: (0,graphql__WEBPACK_IMPORTED_MODULE_7__.print)(query),
              variables: variables
            };
            init = Object.assign({
              headers: headers,
              body: body,
              signerServiceInfo: {
                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',
                region: !customGraphqlEndpoint ? region : customEndpointRegion
              }
            }, initParams);
            endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;

            if (!endpoint) {
              error = new graphql__WEBPACK_IMPORTED_MODULE_9__.GraphQLError('No graphql endpoint provided.');
              throw {
                data: {},
                errors: [error]
              };
            }

            _l.label = 10;

          case 10:
            _l.trys.push([10, 12,, 13]);

            return [4
            /*yield*/
            , this._api.post(endpoint, init)];

          case 11:
            response = _l.sent();
            return [3
            /*break*/
            , 13];

          case 12:
            err_1 = _l.sent(); // If the exception is because user intentionally
            // cancelled the request, do not modify the exception
            // so that clients can identify the exception correctly.

            if (this._api.isCancel(err_1)) {
              throw err_1;
            }

            response = {
              data: {},
              errors: [new graphql__WEBPACK_IMPORTED_MODULE_9__.GraphQLError(err_1.message, null, null, null, null, err_1)]
            };
            return [3
            /*break*/
            , 13];

          case 13:
            errors = response.errors;

            if (errors && errors.length) {
              throw response;
            }

            return [2
            /*return*/
            , response];
        }
      });
    });
  };
  /**
   * Checks to see if an error thrown is from an api request cancellation
   * @param {any} error - Any error
   * @return {boolean} - A boolean indicating if the error was from an api request cancellation
   */


  GraphQLAPIClass.prototype.isCancel = function (error) {
    return this._api.isCancel(error);
  };
  /**
   * Cancels an inflight request. Only applicable for graphql queries and mutations
   * @param {any} request - request to cancel
   * @return {boolean} - A boolean indicating if the request was cancelled
   */


  GraphQLAPIClass.prototype.cancel = function (request, message) {
    return this._api.cancel(request, message);
  };

  GraphQLAPIClass.prototype._graphqlSubscribe = function (_a, additionalHeaders) {
    var query = _a.query,
        variables = _a.variables,
        defaultAuthenticationType = _a.authMode,
        authToken = _a.authToken;

    if (additionalHeaders === void 0) {
      additionalHeaders = {};
    }

    var _b = this._options,
        region = _b.aws_appsync_region,
        appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint,
        aws_appsync_authenticationType = _b.aws_appsync_authenticationType,
        apiKey = _b.aws_appsync_apiKey,
        _c = _b.graphql_headers,
        graphql_headers = _c === void 0 ? function () {
      return {};
    } : _c;
    var authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';

    if (_aws_amplify_pubsub__WEBPACK_IMPORTED_MODULE_10__.default && typeof _aws_amplify_pubsub__WEBPACK_IMPORTED_MODULE_10__.default.subscribe === 'function') {
      return _aws_amplify_pubsub__WEBPACK_IMPORTED_MODULE_10__.default.subscribe('', {
        provider: _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__.INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,
        appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,
        authenticationType: authenticationType,
        apiKey: apiKey,
        query: (0,graphql__WEBPACK_IMPORTED_MODULE_7__.print)(query),
        region: region,
        variables: variables,
        graphql_headers: graphql_headers,
        additionalHeaders: additionalHeaders,
        authToken: authToken
      });
    } else {
      logger.debug('No pubsub module applied for subscription');
      throw new Error('No pubsub module applied for subscription');
    }
  };
  /**
   * @private
   */


  GraphQLAPIClass.prototype._ensureCredentials = function () {
    var _this = this;

    return this.Credentials.get().then(function (credentials) {
      if (!credentials) return false;

      var cred = _this.Credentials.shear(credentials);

      logger.debug('set credentials for api', cred);
      return true;
    }).catch(function (err) {
      logger.warn('ensure credentials error', err);
      return false;
    });
  };

  return GraphQLAPIClass;
}();


var GraphQLAPI = new GraphQLAPIClass(null);
_aws_amplify_core__WEBPACK_IMPORTED_MODULE_12__.Amplify.register(GraphQLAPI);

/***/ }),

/***/ 77513:
/*!**********************************************************************!*\
  !*** ./node_modules/@aws-amplify/api-graphql/lib-esm/types/index.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GRAPHQL_AUTH_MODE": function() { return /* binding */ GRAPHQL_AUTH_MODE; },
/* harmony export */   "GraphQLAuthError": function() { return /* binding */ GraphQLAuthError; }
/* harmony export */ });
var GRAPHQL_AUTH_MODE;

(function (GRAPHQL_AUTH_MODE) {
  GRAPHQL_AUTH_MODE["API_KEY"] = "API_KEY";
  GRAPHQL_AUTH_MODE["AWS_IAM"] = "AWS_IAM";
  GRAPHQL_AUTH_MODE["OPENID_CONNECT"] = "OPENID_CONNECT";
  GRAPHQL_AUTH_MODE["AMAZON_COGNITO_USER_POOLS"] = "AMAZON_COGNITO_USER_POOLS";
  GRAPHQL_AUTH_MODE["AWS_LAMBDA"] = "AWS_LAMBDA";
})(GRAPHQL_AUTH_MODE || (GRAPHQL_AUTH_MODE = {}));

var GraphQLAuthError;

(function (GraphQLAuthError) {
  GraphQLAuthError["NO_API_KEY"] = "No api-key configured";
  GraphQLAuthError["NO_CURRENT_USER"] = "No current user";
  GraphQLAuthError["NO_CREDENTIALS"] = "No credentials";
  GraphQLAuthError["NO_FEDERATED_JWT"] = "No federated jwt";
  GraphQLAuthError["NO_AUTH_TOKEN"] = "No auth token specified";
})(GraphQLAuthError || (GraphQLAuthError = {}));

/***/ }),

/***/ 2492:
/*!***************************************************************!*\
  !*** ./node_modules/@aws-amplify/api-rest/lib-esm/RestAPI.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RestAPIClass": function() { return /* binding */ RestAPIClass; },
/* harmony export */   "RestAPI": function() { return /* binding */ RestAPI; }
/* harmony export */ });
/* harmony import */ var _RestClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RestClient */ 44657);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-amplify/core */ 75001);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-amplify/core */ 94758);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
/*
 * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */




var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('RestAPI');
/**
 * Export Cloud Logic APIs
 */

var RestAPIClass = function () {
  /**
   * Initialize Rest API with AWS configuration
   * @param {Object} options - Configuration object for API
   */
  function RestAPIClass(options) {
    this._api = null;
    this.Credentials = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.Credentials;
    this._options = options;
    logger.debug('API Options', this._options);
  }

  RestAPIClass.prototype.getModuleName = function () {
    return 'RestAPI';
  };
  /**
   * Configure API part with aws configurations
   * @param {Object} config - Configuration of the API
   * @return {Object} - The current configuration
   */


  RestAPIClass.prototype.configure = function (options) {
    var _a = options || {},
        _b = _a.API,
        API = _b === void 0 ? {} : _b,
        otherOptions = __rest(_a, ["API"]);

    var opt = __assign(__assign({}, otherOptions), API);

    logger.debug('configure Rest API', {
      opt: opt
    });

    if (opt['aws_project_region']) {
      if (opt['aws_cloud_logic_custom']) {
        var custom = opt['aws_cloud_logic_custom'];
        opt.endpoints = typeof custom === 'string' ? JSON.parse(custom) : custom;
      }

      opt = Object.assign({}, opt, {
        region: opt['aws_project_region'],
        header: {}
      });
    }

    if (Array.isArray(opt.endpoints)) {
      // Check if endpoints has custom_headers and validate if is a function
      opt.endpoints.forEach(function (endpoint) {
        if (typeof endpoint.custom_header !== 'undefined' && typeof endpoint.custom_header !== 'function') {
          logger.warn('Rest API ' + endpoint.name + ', custom_header should be a function');
          endpoint.custom_header = undefined;
        }
      });
    } else if (this._options && Array.isArray(this._options.endpoints)) {
      opt.endpoints = this._options.endpoints;
    } else {
      opt.endpoints = [];
    }

    this._options = Object.assign({}, this._options, opt);
    this.createInstance();
    return this._options;
  };
  /**
   * Create an instance of API for the library
   * @return - A promise of true if Success
   */


  RestAPIClass.prototype.createInstance = function () {
    logger.debug('create Rest API instance');
    this._api = new _RestClient__WEBPACK_IMPORTED_MODULE_2__.RestClient(this._options); // Share Amplify instance with client for SSR

    this._api.Credentials = this.Credentials;
    return true;
  };
  /**
   * Make a GET request
   * @param {string} apiName - The api name of the request
   * @param {string} path - The path of the request
   * @param {json} [init] - Request extra params
   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.
   */


  RestAPIClass.prototype.get = function (apiName, path, init) {
    try {
      var apiInfo = this.getEndpointInfo(apiName, path);

      var cancellableToken = this._api.getCancellableToken();

      var initParams = Object.assign({}, init);
      initParams.cancellableToken = cancellableToken;

      var responsePromise = this._api.get(apiInfo, initParams);

      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);

      return responsePromise;
    } catch (err) {
      return Promise.reject(err.message);
    }
  };
  /**
   * Make a POST request
   * @param {string} apiName - The api name of the request
   * @param {string} path - The path of the request
   * @param {json} [init] - Request extra params
   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.
   */


  RestAPIClass.prototype.post = function (apiName, path, init) {
    try {
      var apiInfo = this.getEndpointInfo(apiName, path);

      var cancellableToken = this._api.getCancellableToken();

      var initParams = Object.assign({}, init);
      initParams.cancellableToken = cancellableToken;

      var responsePromise = this._api.post(apiInfo, initParams);

      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);

      return responsePromise;
    } catch (err) {
      return Promise.reject(err.message);
    }
  };
  /**
   * Make a PUT request
   * @param {string} apiName - The api name of the request
   * @param {string} path - The path of the request
   * @param {json} [init] - Request extra params
   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.
   */


  RestAPIClass.prototype.put = function (apiName, path, init) {
    try {
      var apiInfo = this.getEndpointInfo(apiName, path);

      var cancellableToken = this._api.getCancellableToken();

      var initParams = Object.assign({}, init);
      initParams.cancellableToken = cancellableToken;

      var responsePromise = this._api.put(apiInfo, initParams);

      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);

      return responsePromise;
    } catch (err) {
      return Promise.reject(err.message);
    }
  };
  /**
   * Make a PATCH request
   * @param {string} apiName - The api name of the request
   * @param {string} path - The path of the request
   * @param {json} [init] - Request extra params
   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.
   */


  RestAPIClass.prototype.patch = function (apiName, path, init) {
    try {
      var apiInfo = this.getEndpointInfo(apiName, path);

      var cancellableToken = this._api.getCancellableToken();

      var initParams = Object.assign({}, init);
      initParams.cancellableToken = cancellableToken;

      var responsePromise = this._api.patch(apiInfo, initParams);

      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);

      return responsePromise;
    } catch (err) {
      return Promise.reject(err.message);
    }
  };
  /**
   * Make a DEL request
   * @param {string} apiName - The api name of the request
   * @param {string} path - The path of the request
   * @param {json} [init] - Request extra params
   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.
   */


  RestAPIClass.prototype.del = function (apiName, path, init) {
    try {
      var apiInfo = this.getEndpointInfo(apiName, path);

      var cancellableToken = this._api.getCancellableToken();

      var initParams = Object.assign({}, init);
      initParams.cancellableToken = cancellableToken;

      var responsePromise = this._api.del(apiInfo, initParams);

      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);

      return responsePromise;
    } catch (err) {
      return Promise.reject(err.message);
    }
  };
  /**
   * Make a HEAD request
   * @param {string} apiName - The api name of the request
   * @param {string} path - The path of the request
   * @param {json} [init] - Request extra params
   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.
   */


  RestAPIClass.prototype.head = function (apiName, path, init) {
    try {
      var apiInfo = this.getEndpointInfo(apiName, path);

      var cancellableToken = this._api.getCancellableToken();

      var initParams = Object.assign({}, init);
      initParams.cancellableToken = cancellableToken;

      var responsePromise = this._api.head(apiInfo, initParams);

      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);

      return responsePromise;
    } catch (err) {
      return Promise.reject(err.message);
    }
  };
  /**
   * Checks to see if an error thrown is from an api request cancellation
   * @param {any} error - Any error
   * @return {boolean} - A boolean indicating if the error was from an api request cancellation
   */


  RestAPIClass.prototype.isCancel = function (error) {
    return this._api.isCancel(error);
  };
  /**
   * Cancels an inflight request
   * @param {any} request - request to cancel
   * @return {boolean} - A boolean indicating if the request was cancelled
   */


  RestAPIClass.prototype.cancel = function (request, message) {
    return this._api.cancel(request, message);
  };
  /**
   * Getting endpoint for API
   * @param {string} apiName - The name of the api
   * @return {string} - The endpoint of the api
   */


  RestAPIClass.prototype.endpoint = function (apiName) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , this._api.endpoint(apiName)];
      });
    });
  };
  /**
   * Getting endpoint info for API
   * @param {string} apiName - The name of the api
   * @param {string} path - The path of the api that is going to accessed
   * @return {ApiInfo} - The endpoint information for that api-name
   */


  RestAPIClass.prototype.getEndpointInfo = function (apiName, path) {
    var cloud_logic_array = this._options.endpoints;

    if (!Array.isArray(cloud_logic_array)) {
      throw new Error("API category not configured");
    }

    var apiConfig = cloud_logic_array.find(function (api) {
      return api.name === apiName;
    });

    if (!apiConfig) {
      throw new Error("API " + apiName + " does not exist");
    }

    var response = {
      endpoint: apiConfig.endpoint + path
    };

    if (typeof apiConfig.region === 'string') {
      response.region = apiConfig.region;
    } else if (typeof this._options.region === 'string') {
      response.region = this._options.region;
    }

    if (typeof apiConfig.service === 'string') {
      response.service = apiConfig.service || 'execute-api';
    } else {
      response.service = 'execute-api';
    }

    if (typeof apiConfig.custom_header === 'function') {
      response.custom_header = apiConfig.custom_header;
    } else {
      response.custom_header = undefined;
    }

    return response;
  };

  return RestAPIClass;
}();


var RestAPI = new RestAPIClass(null);
_aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.Amplify.register(RestAPI);

/***/ }),

/***/ 44657:
/*!******************************************************************!*\
  !*** ./node_modules/@aws-amplify/api-rest/lib-esm/RestClient.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RestClient": function() { return /* binding */ RestClient; }
/* harmony export */ });
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-amplify/core */ 75001);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-amplify/core */ 99433);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-amplify/core */ 74538);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-amplify/core */ 5824);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ 61172);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! url */ 55627);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};




var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__.ConsoleLogger('RestClient');
/**
* HTTP Client for REST requests. Send and receive JSON data.
* Sign request with AWS credentials if available
* Usage:
<pre>
const restClient = new RestClient();
restClient.get('...')
    .then(function(data) {
        console.log(data);
    })
    .catch(err => console.log(err));
</pre>
*/

var RestClient = function () {
  /**
   * @param {RestClientOptions} [options] - Instance options
   */
  function RestClient(options) {
    this._region = 'us-east-1'; // this will be updated by endpoint function

    this._service = 'execute-api'; // this can be updated by endpoint function

    this._custom_header = undefined; // this can be updated by endpoint function

    /**
     * This weak map provides functionality to let clients cancel
     * in-flight axios requests. https://github.com/axios/axios#cancellation
     *
     * 1. For every axios request, a unique cancel token is generated and added in the request.
     * 2. Promise for fulfilling the request is then mapped to that unique cancel token.
     * 3. The promise is returned to the client.
     * 4. Clients can either wait for the promise to fulfill or call `API.cancel(promise)` to cancel the request.
     * 5. If `API.cancel(promise)` is called, then the corresponding cancel token is retrieved from the map below.
     * 6. Promise returned to the client will be in rejected state with the error provided during cancel.
     * 7. Clients can check if the error is because of cancelling by calling `API.isCancel(error)`.
     *
     * For more details, see https://github.com/aws-amplify/amplify-js/pull/3769#issuecomment-552660025
     */

    this._cancelTokenMap = null;
    this.Credentials = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.Credentials;
    this._options = options;
    logger.debug('API Options', this._options);

    if (this._cancelTokenMap == null) {
      this._cancelTokenMap = new WeakMap();
    }
  }
  /**
  * Update AWS credentials
  * @param {AWSCredentials} credentials - AWS credentials
  *
  updateCredentials(credentials: AWSCredentials) {
      this.options.credentials = credentials;
  }
  */

  /**
   * Basic HTTP request. Customizable
   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information
   * @param {string} method - Request HTTP method
   * @param {json} [init] - Request extra params
   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.
   */


  RestClient.prototype.ajax = function (urlOrApiInfo, method, init) {
    return __awaiter(this, void 0, void 0, function () {
      var parsed_url, url, region, service, custom_header, params, libraryHeaders, userAgent, initParams, isAllResponse, custom_header_obj, _a, _b, search, parsedUrl;

      var _this = this;

      return __generator(this, function (_c) {
        switch (_c.label) {
          case 0:
            logger.debug(method, urlOrApiInfo);
            region = 'us-east-1';
            service = 'execute-api';
            custom_header = undefined;

            if (typeof urlOrApiInfo === 'string') {
              parsed_url = this._parseUrl(urlOrApiInfo);
              url = urlOrApiInfo;
            } else {
              url = urlOrApiInfo.endpoint, custom_header = urlOrApiInfo.custom_header, region = urlOrApiInfo.region, service = urlOrApiInfo.service;
              parsed_url = this._parseUrl(urlOrApiInfo.endpoint);
            }

            params = {
              method: method,
              url: url,
              host: parsed_url.host,
              path: parsed_url.path,
              headers: {},
              data: null,
              responseType: 'json',
              timeout: 0,
              cancelToken: null
            };
            libraryHeaders = {};

            if (_aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__.Platform.isReactNative) {
              userAgent = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__.Platform.userAgent || 'aws-amplify/0.1.x';
              libraryHeaders = {
                'User-Agent': userAgent
              };
            }

            initParams = Object.assign({}, init);
            isAllResponse = initParams.response;

            if (initParams.body) {
              if (typeof FormData === 'function' && initParams.body instanceof FormData) {
                libraryHeaders['Content-Type'] = 'multipart/form-data';
                params.data = initParams.body;
              } else {
                libraryHeaders['Content-Type'] = 'application/json; charset=UTF-8';
                params.data = JSON.stringify(initParams.body);
              }
            }

            if (initParams.responseType) {
              params.responseType = initParams.responseType;
            }

            if (initParams.withCredentials) {
              params['withCredentials'] = initParams.withCredentials;
            }

            if (initParams.timeout) {
              params.timeout = initParams.timeout;
            }

            if (initParams.cancellableToken) {
              params.cancelToken = initParams.cancellableToken.token;
            }

            params['signerServiceInfo'] = initParams.signerServiceInfo;
            if (!(typeof custom_header === 'function')) return [3
            /*break*/
            , 2];
            return [4
            /*yield*/
            , custom_header()];

          case 1:
            _a = _c.sent();
            return [3
            /*break*/
            , 3];

          case 2:
            _a = undefined;
            _c.label = 3;

          case 3:
            custom_header_obj = _a;
            params.headers = __assign(__assign(__assign({}, libraryHeaders), custom_header_obj), initParams.headers);
            _b = (0,url__WEBPACK_IMPORTED_MODULE_1__.parse)(url, true, true), search = _b.search, parsedUrl = __rest(_b, ["search"]);
            params.url = (0,url__WEBPACK_IMPORTED_MODULE_1__.format)(__assign(__assign({}, parsedUrl), {
              query: __assign(__assign({}, parsedUrl.query), initParams.queryStringParameters || {})
            })); // Do not sign the request if client has added 'Authorization' header,
            // which means custom authorizer.

            if (typeof params.headers['Authorization'] !== 'undefined') {
              params.headers = Object.keys(params.headers).reduce(function (acc, k) {
                if (params.headers[k]) {
                  acc[k] = params.headers[k];
                }

                return acc; // tslint:disable-next-line:align
              }, {});
              return [2
              /*return*/
              , this._request(params, isAllResponse)];
            } // Signing the request in case there credentials are available


            return [2
            /*return*/
            , this.Credentials.get().then(function (credentials) {
              return _this._signed(__assign({}, params), credentials, isAllResponse, {
                region: region,
                service: service
              }).catch(function (error) {
                if (_aws_amplify_core__WEBPACK_IMPORTED_MODULE_5__.DateUtils.isClockSkewError(error)) {
                  var headers = error.response.headers;
                  var dateHeader = headers && (headers.date || headers.Date);
                  var responseDate = new Date(dateHeader);
                  var requestDate = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_5__.DateUtils.getDateFromHeaderString(params.headers['x-amz-date']); // Compare local clock to the server clock

                  if (_aws_amplify_core__WEBPACK_IMPORTED_MODULE_5__.DateUtils.isClockSkewed(responseDate)) {
                    _aws_amplify_core__WEBPACK_IMPORTED_MODULE_5__.DateUtils.setClockOffset(responseDate.getTime() - requestDate.getTime());
                    return _this.ajax(urlOrApiInfo, method, init);
                  }
                }

                throw error;
              });
            }, function (err) {
              logger.debug('No credentials available, the request will be unsigned');
              return _this._request(params, isAllResponse);
            })];
        }
      });
    });
  };
  /**
   * GET HTTP request
   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information
   * @param {JSON} init - Request extra params
   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.
   */


  RestClient.prototype.get = function (urlOrApiInfo, init) {
    return this.ajax(urlOrApiInfo, 'GET', init);
  };
  /**
   * PUT HTTP request
   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information
   * @param {json} init - Request extra params
   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.
   */


  RestClient.prototype.put = function (urlOrApiInfo, init) {
    return this.ajax(urlOrApiInfo, 'PUT', init);
  };
  /**
   * PATCH HTTP request
   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information
   * @param {json} init - Request extra params
   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.
   */


  RestClient.prototype.patch = function (urlOrApiInfo, init) {
    return this.ajax(urlOrApiInfo, 'PATCH', init);
  };
  /**
   * POST HTTP request
   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information
   * @param {json} init - Request extra params
   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.
   */


  RestClient.prototype.post = function (urlOrApiInfo, init) {
    return this.ajax(urlOrApiInfo, 'POST', init);
  };
  /**
   * DELETE HTTP request
   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information
   * @param {json} init - Request extra params
   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.
   */


  RestClient.prototype.del = function (urlOrApiInfo, init) {
    return this.ajax(urlOrApiInfo, 'DELETE', init);
  };
  /**
   * HEAD HTTP request
   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information
   * @param {json} init - Request extra params
   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.
   */


  RestClient.prototype.head = function (urlOrApiInfo, init) {
    return this.ajax(urlOrApiInfo, 'HEAD', init);
  };
  /**
   * Cancel an inflight API request
   * @param {Promise<any>} request - The request promise to cancel
   * @param {string} [message] - A message to include in the cancelation exception
   */


  RestClient.prototype.cancel = function (request, message) {
    var source = this._cancelTokenMap.get(request);

    if (source) {
      source.cancel(message);
    }

    return true;
  };
  /**
   * Checks to see if an error thrown is from an api request cancellation
   * @param {any} error - Any error
   * @return {boolean} - A boolean indicating if the error was from an api request cancellation
   */


  RestClient.prototype.isCancel = function (error) {
    return axios__WEBPACK_IMPORTED_MODULE_0___default().isCancel(error);
  };
  /**
   * Retrieves a new and unique cancel token which can be
   * provided in an axios request to be cancelled later.
   */


  RestClient.prototype.getCancellableToken = function () {
    return axios__WEBPACK_IMPORTED_MODULE_0___default().CancelToken.source();
  };
  /**
   * Updates the weakmap with a response promise and its
   * cancel token such that the cancel token can be easily
   * retrieved (and used for cancelling the request)
   */


  RestClient.prototype.updateRequestToBeCancellable = function (promise, cancelTokenSource) {
    this._cancelTokenMap.set(promise, cancelTokenSource);
  };
  /**
   * Getting endpoint for API
   * @param {string} apiName - The name of the api
   * @return {string} - The endpoint of the api
   */


  RestClient.prototype.endpoint = function (apiName) {
    var _this = this;

    var cloud_logic_array = this._options.endpoints;
    var response = '';

    if (!Array.isArray(cloud_logic_array)) {
      return response;
    }

    cloud_logic_array.forEach(function (v) {
      if (v.name === apiName) {
        response = v.endpoint;

        if (typeof v.region === 'string') {
          _this._region = v.region;
        } else if (typeof _this._options.region === 'string') {
          _this._region = _this._options.region;
        }

        if (typeof v.service === 'string') {
          _this._service = v.service || 'execute-api';
        } else {
          _this._service = 'execute-api';
        }

        if (typeof v.custom_header === 'function') {
          _this._custom_header = v.custom_header;
        } else {
          _this._custom_header = undefined;
        }
      }
    });
    return response;
  };
  /** private methods **/


  RestClient.prototype._signed = function (params, credentials, isAllResponse, _a) {
    var service = _a.service,
        region = _a.region;

    var signerServiceInfoParams = params.signerServiceInfo,
        otherParams = __rest(params, ["signerServiceInfo"]);

    var endpoint_region = region || this._region || this._options.region;
    var endpoint_service = service || this._service || this._options.service;
    var creds = {
      secret_key: credentials.secretAccessKey,
      access_key: credentials.accessKeyId,
      session_token: credentials.sessionToken
    };
    var endpointInfo = {
      region: endpoint_region,
      service: endpoint_service
    };
    var signerServiceInfo = Object.assign(endpointInfo, signerServiceInfoParams);
    var signed_params = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__.Signer.sign(otherParams, creds, signerServiceInfo);

    if (signed_params.data) {
      signed_params.body = signed_params.data;
    }

    logger.debug('Signed Request: ', signed_params);
    delete signed_params.headers['host'];
    return axios__WEBPACK_IMPORTED_MODULE_0___default()(signed_params).then(function (response) {
      return isAllResponse ? response : response.data;
    }).catch(function (error) {
      logger.debug(error);
      throw error;
    });
  };

  RestClient.prototype._request = function (params, isAllResponse) {
    if (isAllResponse === void 0) {
      isAllResponse = false;
    }

    return axios__WEBPACK_IMPORTED_MODULE_0___default()(params).then(function (response) {
      return isAllResponse ? response : response.data;
    }).catch(function (error) {
      logger.debug(error);
      throw error;
    });
  };

  RestClient.prototype._parseUrl = function (url) {
    var parts = url.split('/');
    return {
      host: parts[2],
      path: '/' + parts.slice(3).join('/')
    };
  };

  return RestClient;
}();



/***/ }),

/***/ 93258:
/*!******************************************************!*\
  !*** ./node_modules/@aws-amplify/api/lib-esm/API.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "APIClass": function() { return /* binding */ APIClass; },
/* harmony export */   "API": function() { return /* binding */ API; }
/* harmony export */ });
/* harmony import */ var _aws_amplify_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-amplify/auth */ 22108);
/* harmony import */ var _aws_amplify_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/cache */ 68010);
/* harmony import */ var _aws_amplify_api_rest__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-amplify/api-rest */ 2492);
/* harmony import */ var _aws_amplify_api_graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-amplify/api-graphql */ 44651);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-amplify/core */ 75001);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-amplify/core */ 94758);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};
/*
 * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */







var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.ConsoleLogger('API');
/**
 * @deprecated
 * Use RestApi or GraphQLAPI to reduce your application bundle size
 * Export Cloud Logic APIs
 */

var APIClass = function () {
  /**
   * Initialize API with AWS configuration
   * @param {Object} options - Configuration object for API
   */
  function APIClass(options) {
    this.Auth = _aws_amplify_auth__WEBPACK_IMPORTED_MODULE_2__.Auth;
    this.Cache = _aws_amplify_cache__WEBPACK_IMPORTED_MODULE_0__.default;
    this.Credentials = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.Credentials;
    this._options = options;
    this._restApi = new _aws_amplify_api_rest__WEBPACK_IMPORTED_MODULE_4__.RestAPIClass(options);
    this._graphqlApi = new _aws_amplify_api_graphql__WEBPACK_IMPORTED_MODULE_5__.GraphQLAPIClass(options);
    logger.debug('API Options', this._options);
  }

  APIClass.prototype.getModuleName = function () {
    return 'API';
  };
  /**
   * Configure API part with aws configurations
   * @param {Object} config - Configuration of the API
   * @return {Object} - The current configuration
   */


  APIClass.prototype.configure = function (options) {
    this._options = Object.assign({}, this._options, options); // Share Amplify instance with client for SSR

    this._restApi.Credentials = this.Credentials;
    this._graphqlApi.Auth = this.Auth;
    this._graphqlApi.Cache = this.Cache;
    this._graphqlApi.Credentials = this.Credentials;

    var restAPIConfig = this._restApi.configure(this._options);

    var graphQLAPIConfig = this._graphqlApi.configure(this._options);

    return __assign(__assign({}, restAPIConfig), graphQLAPIConfig);
  };
  /**
   * Make a GET request
   * @param apiName - The api name of the request
   * @param path - The path of the request
   * @param [init] - Request extra params
   * @return A promise that resolves to an object with response status and JSON data, if successful.
   */


  APIClass.prototype.get = function (apiName, path, init) {
    return this._restApi.get(apiName, path, init);
  };
  /**
   * Make a POST request
   * @param apiName - The api name of the request
   * @param path - The path of the request
   * @param [init] - Request extra params
   * @return A promise that resolves to an object with response status and JSON data, if successful.
   */


  APIClass.prototype.post = function (apiName, path, init) {
    return this._restApi.post(apiName, path, init);
  };
  /**
   * Make a PUT request
   * @param apiName - The api name of the request
   * @param path - The path of the request
   * @param [init] - Request extra params
   * @return A promise that resolves to an object with response status and JSON data, if successful.
   */


  APIClass.prototype.put = function (apiName, path, init) {
    return this._restApi.put(apiName, path, init);
  };
  /**
   * Make a PATCH request
   * @param apiName - The api name of the request
   * @param path - The path of the request
   * @param [init] - Request extra params
   * @return A promise that resolves to an object with response status and JSON data, if successful.
   */


  APIClass.prototype.patch = function (apiName, path, init) {
    return this._restApi.patch(apiName, path, init);
  };
  /**
   * Make a DEL request
   * @param apiName - The api name of the request
   * @param path - The path of the request
   * @param [init] - Request extra params
   * @return A promise that resolves to an object with response status and JSON data, if successful.
   */


  APIClass.prototype.del = function (apiName, path, init) {
    return this._restApi.del(apiName, path, init);
  };
  /**
   * Make a HEAD request
   * @param apiName - The api name of the request
   * @param path - The path of the request
   * @param [init] - Request extra params
   * @return A promise that resolves to an object with response status and JSON data, if successful.
   */


  APIClass.prototype.head = function (apiName, path, init) {
    return this._restApi.head(apiName, path, init);
  };
  /**
   * Checks to see if an error thrown is from an api request cancellation
   * @param error - Any error
   * @return If the error was from an api request cancellation
   */


  APIClass.prototype.isCancel = function (error) {
    return this._restApi.isCancel(error);
  };
  /**
   * Cancels an inflight request
   * @param request - request to cancel
   * @param [message] - custom error message
   * @return If the request was cancelled
   */


  APIClass.prototype.cancel = function (request, message) {
    return this._restApi.cancel(request, message);
  };
  /**
   * Getting endpoint for API
   * @param apiName - The name of the api
   * @return The endpoint of the api
   */


  APIClass.prototype.endpoint = function (apiName) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , this._restApi.endpoint(apiName)];
      });
    });
  };
  /**
   * to get the operation type
   * @param operation
   */


  APIClass.prototype.getGraphqlOperationType = function (operation) {
    return this._graphqlApi.getGraphqlOperationType(operation);
  };

  APIClass.prototype.graphql = function (options, additionalHeaders) {
    return this._graphqlApi.graphql(options, additionalHeaders);
  };

  return APIClass;
}();


var API = new APIClass(null);
_aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__.Amplify.register(API);

/***/ }),

/***/ 99674:
/*!************************************************************************!*\
  !*** ./node_modules/@aws-amplify/cache/lib-esm/BrowserStorageCache.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BrowserStorageCacheClass": function() { return /* binding */ BrowserStorageCacheClass; },
/* harmony export */   "BrowserStorageCache": function() { return /* binding */ BrowserStorageCache; }
/* harmony export */ });
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils */ 93091);
/* harmony import */ var _StorageCache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./StorageCache */ 60954);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();




var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('Cache');
/**
 * Customized storage based on the SessionStorage or LocalStorage with LRU implemented
 */

var BrowserStorageCacheClass = function (_super) {
  __extends(BrowserStorageCacheClass, _super);
  /**
   * initialize the cache
   * @param config - the configuration of the cache
   */


  function BrowserStorageCacheClass(config) {
    var _this = this;

    var cacheConfig = config ? Object.assign({}, _Utils__WEBPACK_IMPORTED_MODULE_1__.defaultConfig, config) : _Utils__WEBPACK_IMPORTED_MODULE_1__.defaultConfig;
    _this = _super.call(this, cacheConfig) || this;
    _this.config.storage = cacheConfig.storage;
    _this.getItem = _this.getItem.bind(_this);
    _this.setItem = _this.setItem.bind(_this);
    _this.removeItem = _this.removeItem.bind(_this);
    return _this;
  }
  /**
   * decrease current size of the cache
   *
   * @private
   * @param amount - the amount of the cache size which needs to be decreased
   */


  BrowserStorageCacheClass.prototype._decreaseCurSizeInBytes = function (amount) {
    var curSize = this.getCacheCurSize();
    this.config.storage.setItem(this.cacheCurSizeKey, (curSize - amount).toString());
  };
  /**
   * increase current size of the cache
   *
   * @private
   * @param amount - the amount of the cache szie which need to be increased
   */


  BrowserStorageCacheClass.prototype._increaseCurSizeInBytes = function (amount) {
    var curSize = this.getCacheCurSize();
    this.config.storage.setItem(this.cacheCurSizeKey, (curSize + amount).toString());
  };
  /**
   * update the visited time if item has been visited
   *
   * @private
   * @param item - the item which need to be refreshed
   * @param prefixedKey - the key of the item
   *
   * @return the refreshed item
   */


  BrowserStorageCacheClass.prototype._refreshItem = function (item, prefixedKey) {
    item.visitedTime = (0,_Utils__WEBPACK_IMPORTED_MODULE_1__.getCurrTime)();
    this.config.storage.setItem(prefixedKey, JSON.stringify(item));
    return item;
  };
  /**
   * check wether item is expired
   *
   * @private
   * @param key - the key of the item
   *
   * @return true if the item is expired.
   */


  BrowserStorageCacheClass.prototype._isExpired = function (key) {
    var text = this.config.storage.getItem(key);
    var item = JSON.parse(text);

    if ((0,_Utils__WEBPACK_IMPORTED_MODULE_1__.getCurrTime)() >= item.expires) {
      return true;
    }

    return false;
  };
  /**
   * delete item from cache
   *
   * @private
   * @param prefixedKey - the key of the item
   * @param size - optional, the byte size of the item
   */


  BrowserStorageCacheClass.prototype._removeItem = function (prefixedKey, size) {
    var itemSize = size ? size : JSON.parse(this.config.storage.getItem(prefixedKey)).byteSize;

    this._decreaseCurSizeInBytes(itemSize); // remove the cache item


    this.config.storage.removeItem(prefixedKey);
  };
  /**
   * put item into cache
   *
   * @private
   * @param prefixedKey - the key of the item
   * @param itemData - the value of the item
   * @param itemSizeInBytes - the byte size of the item
   */


  BrowserStorageCacheClass.prototype._setItem = function (prefixedKey, item) {
    // update the cache size
    this._increaseCurSizeInBytes(item.byteSize);

    try {
      this.config.storage.setItem(prefixedKey, JSON.stringify(item));
    } catch (setItemErr) {
      // if failed, we need to rollback the cache size
      this._decreaseCurSizeInBytes(item.byteSize);

      logger.error("Failed to set item " + setItemErr);
    }
  };
  /**
   * total space needed when poping out items
   *
   * @private
   * @param itemSize
   *
   * @return total space needed
   */


  BrowserStorageCacheClass.prototype._sizeToPop = function (itemSize) {
    var spaceItemNeed = this.getCacheCurSize() + itemSize - this.config.capacityInBytes;
    var cacheThresholdSpace = (1 - this.config.warningThreshold) * this.config.capacityInBytes;
    return spaceItemNeed > cacheThresholdSpace ? spaceItemNeed : cacheThresholdSpace;
  };
  /**
   * see whether cache is full
   *
   * @private
   * @param itemSize
   *
   * @return true if cache is full
   */


  BrowserStorageCacheClass.prototype._isCacheFull = function (itemSize) {
    return itemSize + this.getCacheCurSize() > this.config.capacityInBytes;
  };
  /**
   * scan the storage and find out all the keys owned by this cache
   * also clean the expired keys while scanning
   *
   * @private
   *
   * @return array of keys
   */


  BrowserStorageCacheClass.prototype._findValidKeys = function () {
    var keys = [];
    var keyInCache = []; // get all keys in Storage

    for (var i = 0; i < this.config.storage.length; i += 1) {
      keyInCache.push(this.config.storage.key(i));
    } // find those items which belong to our cache and also clean those expired items


    for (var i = 0; i < keyInCache.length; i += 1) {
      var key = keyInCache[i];

      if (key.indexOf(this.config.keyPrefix) === 0 && key !== this.cacheCurSizeKey) {
        if (this._isExpired(key)) {
          this._removeItem(key);
        } else {
          keys.push(key);
        }
      }
    }

    return keys;
  };
  /**
   * get all the items we have, sort them by their priority,
   * if priority is same, sort them by their last visited time
   * pop out items from the low priority (5 is the lowest)
   *
   * @private
   * @param keys - all the keys in this cache
   * @param sizeToPop - the total size of the items which needed to be poped out
   */


  BrowserStorageCacheClass.prototype._popOutItems = function (keys, sizeToPop) {
    var items = [];
    var remainedSize = sizeToPop; // get the items from Storage

    for (var i = 0; i < keys.length; i += 1) {
      var val = this.config.storage.getItem(keys[i]);

      if (val != null) {
        var item = JSON.parse(val);
        items.push(item);
      }
    } // first compare priority
    // then compare visited time


    items.sort(function (a, b) {
      if (a.priority > b.priority) {
        return -1;
      } else if (a.priority < b.priority) {
        return 1;
      } else {
        if (a.visitedTime < b.visitedTime) {
          return -1;
        } else return 1;
      }
    });

    for (var i = 0; i < items.length; i += 1) {
      // pop out items until we have enough room for new item
      this._removeItem(items[i].key, items[i].byteSize);

      remainedSize -= items[i].byteSize;

      if (remainedSize <= 0) {
        return;
      }
    }
  };
  /**
   * Set item into cache. You can put number, string, boolean or object.
   * The cache will first check whether has the same key.
   * If it has, it will delete the old item and then put the new item in
   * The cache will pop out items if it is full
   * You can specify the cache item options. The cache will abort and output a warning:
   * If the key is invalid
   * If the size of the item exceeds itemMaxSize.
   * If the value is undefined
   * If incorrect cache item configuration
   * If error happened with browser storage
   *
   * @param key - the key of the item
   * @param value - the value of the item
   * @param {Object} [options] - optional, the specified meta-data
   */


  BrowserStorageCacheClass.prototype.setItem = function (key, value, options) {
    logger.log("Set item: key is " + key + ", value is " + value + " with options: " + options);
    var prefixedKey = this.config.keyPrefix + key; // invalid keys

    if (prefixedKey === this.config.keyPrefix || prefixedKey === this.cacheCurSizeKey) {
      logger.warn("Invalid key: should not be empty or 'CurSize'");
      return;
    }

    if (typeof value === 'undefined') {
      logger.warn("The value of item should not be undefined!");
      return;
    }

    var cacheItemOptions = {
      priority: options && options.priority !== undefined ? options.priority : this.config.defaultPriority,
      expires: options && options.expires !== undefined ? options.expires : this.config.defaultTTL + (0,_Utils__WEBPACK_IMPORTED_MODULE_1__.getCurrTime)()
    };

    if (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {
      logger.warn("Invalid parameter: priority due to out or range. It should be within 1 and 5.");
      return;
    }

    var item = this.fillCacheItem(prefixedKey, value, cacheItemOptions); // check wether this item is too big;

    if (item.byteSize > this.config.itemMaxSize) {
      logger.warn("Item with key: " + key + " you are trying to put into is too big!");
      return;
    }

    try {
      // first look into the storage, if it exists, delete it.
      var val = this.config.storage.getItem(prefixedKey);

      if (val) {
        this._removeItem(prefixedKey, JSON.parse(val).byteSize);
      } // check whether the cache is full


      if (this._isCacheFull(item.byteSize)) {
        var validKeys = this._findValidKeys(); // check again and then pop out items


        if (this._isCacheFull(item.byteSize)) {
          var sizeToPop = this._sizeToPop(item.byteSize);

          this._popOutItems(validKeys, sizeToPop);
        }
      } // put item in the cache
      // may failed due to storage full


      this._setItem(prefixedKey, item);
    } catch (e) {
      logger.warn("setItem failed! " + e);
    }
  };
  /**
   * Get item from cache. It will return null if item doesn’t exist or it has been expired.
   * If you specified callback function in the options,
   * then the function will be executed if no such item in the cache
   * and finally put the return value into cache.
   * Please make sure the callback function will return the value you want to put into the cache.
   * The cache will abort output a warning:
   * If the key is invalid
   * If error happened with browser storage
   *
   * @param key - the key of the item
   * @param {Object} [options] - the options of callback function
   *
   * @return - return the value of the item
   */


  BrowserStorageCacheClass.prototype.getItem = function (key, options) {
    logger.log("Get item: key is " + key + " with options " + options);
    var ret = null;
    var prefixedKey = this.config.keyPrefix + key;

    if (prefixedKey === this.config.keyPrefix || prefixedKey === this.cacheCurSizeKey) {
      logger.warn("Invalid key: should not be empty or 'CurSize'");
      return null;
    }

    try {
      ret = this.config.storage.getItem(prefixedKey);

      if (ret != null) {
        if (this._isExpired(prefixedKey)) {
          // if expired, remove that item and return null
          this._removeItem(prefixedKey, JSON.parse(ret).byteSize);

          ret = null;
        } else {
          // if not expired, great, return the value and refresh it
          var item = JSON.parse(ret);
          item = this._refreshItem(item, prefixedKey);
          return item.data;
        }
      }

      if (options && options.callback !== undefined) {
        var val = options.callback();

        if (val !== null) {
          this.setItem(key, val, options);
        }

        return val;
      }

      return null;
    } catch (e) {
      logger.warn("getItem failed! " + e);
      return null;
    }
  };
  /**
   * remove item from the cache
   * The cache will abort output a warning:
   * If error happened with browser storage
   * @param key - the key of the item
   */


  BrowserStorageCacheClass.prototype.removeItem = function (key) {
    logger.log("Remove item: key is " + key);
    var prefixedKey = this.config.keyPrefix + key;

    if (prefixedKey === this.config.keyPrefix || prefixedKey === this.cacheCurSizeKey) {
      return;
    }

    try {
      var val = this.config.storage.getItem(prefixedKey);

      if (val) {
        this._removeItem(prefixedKey, JSON.parse(val).byteSize);
      }
    } catch (e) {
      logger.warn("removeItem failed! " + e);
    }
  };
  /**
   * clear the entire cache
   * The cache will abort output a warning:
   * If error happened with browser storage
   */


  BrowserStorageCacheClass.prototype.clear = function () {
    logger.log("Clear Cache");
    var keysToRemove = [];

    for (var i = 0; i < this.config.storage.length; i += 1) {
      var key = this.config.storage.key(i);

      if (key.indexOf(this.config.keyPrefix) === 0) {
        keysToRemove.push(key);
      }
    }

    try {
      for (var i = 0; i < keysToRemove.length; i += 1) {
        this.config.storage.removeItem(keysToRemove[i]);
      }
    } catch (e) {
      logger.warn("clear failed! " + e);
    }
  };
  /**
   * Return all the keys in the cache.
   *
   * @return - all keys in the cache
   */


  BrowserStorageCacheClass.prototype.getAllKeys = function () {
    var keys = [];

    for (var i = 0; i < this.config.storage.length; i += 1) {
      var key = this.config.storage.key(i);

      if (key.indexOf(this.config.keyPrefix) === 0 && key !== this.cacheCurSizeKey) {
        keys.push(key.substring(this.config.keyPrefix.length));
      }
    }

    return keys;
  };
  /**
   * return the current size of the cache
   *
   * @return - current size of the cache
   */


  BrowserStorageCacheClass.prototype.getCacheCurSize = function () {
    var ret = this.config.storage.getItem(this.cacheCurSizeKey);

    if (!ret) {
      this.config.storage.setItem(this.cacheCurSizeKey, '0');
      ret = '0';
    }

    return Number(ret);
  };
  /**
   * Return a new instance of cache with customized configuration.
   * @param config - the customized configuration
   *
   * @return - new instance of Cache
   */


  BrowserStorageCacheClass.prototype.createInstance = function (config) {
    if (!config.keyPrefix || config.keyPrefix === _Utils__WEBPACK_IMPORTED_MODULE_1__.defaultConfig.keyPrefix) {
      logger.error('invalid keyPrefix, setting keyPrefix with timeStamp');
      config.keyPrefix = _Utils__WEBPACK_IMPORTED_MODULE_1__.getCurrTime.toString();
    }

    return new BrowserStorageCacheClass(config);
  };

  return BrowserStorageCacheClass;
}(_StorageCache__WEBPACK_IMPORTED_MODULE_2__.StorageCache);


var BrowserStorageCache = new BrowserStorageCacheClass();
/**
 * @deprecated use named import
 */

/* harmony default export */ __webpack_exports__["default"] = (BrowserStorageCache);

/***/ }),

/***/ 23972:
/*!******************************************************************!*\
  !*** ./node_modules/@aws-amplify/cache/lib-esm/InMemoryCache.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InMemoryCacheClass": function() { return /* binding */ InMemoryCacheClass; },
/* harmony export */   "InMemoryCache": function() { return /* binding */ InMemoryCache; }
/* harmony export */ });
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils */ 93091);
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Utils */ 68085);
/* harmony import */ var _StorageCache__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StorageCache */ 60954);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __values = undefined && undefined.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};




var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('InMemoryCache');
/**
 * Customized in-memory cache with LRU implemented
 * @member cacheObj - object which store items
 * @member cacheList - list of keys in the cache with LRU
 * @member curSizeInBytes - current size of the cache
 * @member maxPriority - max of the priority
 * @member cacheSizeLimit - the limit of cache size
 */

var InMemoryCacheClass = function (_super) {
  __extends(InMemoryCacheClass, _super);
  /**
   * initialize the cache
   *
   * @param config - the configuration of the cache
   */


  function InMemoryCacheClass(config) {
    var _this = this;

    var cacheConfig = config ? Object.assign({}, _Utils__WEBPACK_IMPORTED_MODULE_1__.defaultConfig, config) : _Utils__WEBPACK_IMPORTED_MODULE_1__.defaultConfig;
    _this = _super.call(this, cacheConfig) || this;
    logger.debug('now we start!');
    _this.cacheList = [];
    _this.curSizeInBytes = 0;
    _this.maxPriority = 5;
    _this.getItem = _this.getItem.bind(_this);
    _this.setItem = _this.setItem.bind(_this);
    _this.removeItem = _this.removeItem.bind(_this); // initialize list for every priority

    for (var i = 0; i < _this.maxPriority; i += 1) {
      _this.cacheList[i] = new _Utils__WEBPACK_IMPORTED_MODULE_2__.default();
    }

    return _this;
  }
  /**
   * decrease current size of the cache
   *
   * @param amount - the amount of the cache size which needs to be decreased
   */


  InMemoryCacheClass.prototype._decreaseCurSizeInBytes = function (amount) {
    this.curSizeInBytes -= amount;
  };
  /**
   * increase current size of the cache
   *
   * @param amount - the amount of the cache szie which need to be increased
   */


  InMemoryCacheClass.prototype._increaseCurSizeInBytes = function (amount) {
    this.curSizeInBytes += amount;
  };
  /**
   * check whether item is expired
   *
   * @param key - the key of the item
   *
   * @return true if the item is expired.
   */


  InMemoryCacheClass.prototype._isExpired = function (key) {
    var text = _Utils__WEBPACK_IMPORTED_MODULE_1__.CacheObject.getItem(key);
    var item = JSON.parse(text);

    if ((0,_Utils__WEBPACK_IMPORTED_MODULE_1__.getCurrTime)() >= item.expires) {
      return true;
    }

    return false;
  };
  /**
   * delete item from cache
   *
   * @param prefixedKey - the key of the item
   * @param listIdx - indicates which cache list the key belongs to
   */


  InMemoryCacheClass.prototype._removeItem = function (prefixedKey, listIdx) {
    // delete the key from the list
    this.cacheList[listIdx].removeItem(prefixedKey); // decrease the current size of the cache

    this._decreaseCurSizeInBytes(JSON.parse(_Utils__WEBPACK_IMPORTED_MODULE_1__.CacheObject.getItem(prefixedKey)).byteSize); // finally remove the item from memory


    _Utils__WEBPACK_IMPORTED_MODULE_1__.CacheObject.removeItem(prefixedKey);
  };
  /**
   * put item into cache
   *
   * @param prefixedKey - the key of the item
   * @param itemData - the value of the item
   * @param itemSizeInBytes - the byte size of the item
   * @param listIdx - indicates which cache list the key belongs to
   */


  InMemoryCacheClass.prototype._setItem = function (prefixedKey, item, listIdx) {
    // insert the key into the list
    this.cacheList[listIdx].insertItem(prefixedKey); // increase the current size of the cache

    this._increaseCurSizeInBytes(item.byteSize); // finally add the item into memory


    _Utils__WEBPACK_IMPORTED_MODULE_1__.CacheObject.setItem(prefixedKey, JSON.stringify(item));
  };
  /**
   * see whether cache is full
   *
   * @param itemSize
   *
   * @return true if cache is full
   */


  InMemoryCacheClass.prototype._isCacheFull = function (itemSize) {
    return this.curSizeInBytes + itemSize > this.config.capacityInBytes;
  };
  /**
   * check whether the cache contains the key
   *
   * @param key
   */


  InMemoryCacheClass.prototype.containsKey = function (key) {
    var prefixedKey = this.config.keyPrefix + key;

    for (var i = 0; i < this.maxPriority; i += 1) {
      if (this.cacheList[i].containsKey(prefixedKey)) {
        return i + 1;
      }
    }

    return -1;
  };
  /**
   * * Set item into cache. You can put number, string, boolean or object.
   * The cache will first check whether has the same key.
   * If it has, it will delete the old item and then put the new item in
   * The cache will pop out items if it is full
   * You can specify the cache item options. The cache will abort and output a warning:
   * If the key is invalid
   * If the size of the item exceeds itemMaxSize.
   * If the value is undefined
   * If incorrect cache item configuration
   * If error happened with browser storage
   *
   * @param key - the key of the item
   * @param value - the value of the item
   * @param options - optional, the specified meta-data
   *
   * @throws if the item is too big which exceeds the limit of single item size
   * @throws if the key is invalid
   */


  InMemoryCacheClass.prototype.setItem = function (key, value, options) {
    var prefixedKey = this.config.keyPrefix + key; // invalid keys

    if (prefixedKey === this.config.keyPrefix || prefixedKey === this.cacheCurSizeKey) {
      logger.warn("Invalid key: should not be empty or 'CurSize'");
      return;
    }

    if (typeof value === 'undefined') {
      logger.warn("The value of item should not be undefined!");
      return;
    }

    var cacheItemOptions = {
      priority: options && options.priority !== undefined ? options.priority : this.config.defaultPriority,
      expires: options && options.expires !== undefined ? options.expires : this.config.defaultTTL + (0,_Utils__WEBPACK_IMPORTED_MODULE_1__.getCurrTime)()
    };

    if (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {
      logger.warn("Invalid parameter: priority due to out or range. It should be within 1 and 5.");
      return;
    }

    var item = this.fillCacheItem(prefixedKey, value, cacheItemOptions); // check wether this item is too big;

    if (item.byteSize > this.config.itemMaxSize) {
      logger.warn("Item with key: " + key + " you are trying to put into is too big!");
      return;
    } // if key already in the cache, then delete it.


    var presentKeyPrio = this.containsKey(key);

    if (presentKeyPrio !== -1) {
      this._removeItem(prefixedKey, presentKeyPrio - 1);
    } // pop out items in the cache when cache is full based on LRU
    // first start from lowest priority cache list


    var cacheListIdx = this.maxPriority - 1;

    while (this._isCacheFull(item.byteSize) && cacheListIdx >= 0) {
      if (!this.cacheList[cacheListIdx].isEmpty()) {
        var popedItemKey = this.cacheList[cacheListIdx].getLastItem();

        this._removeItem(popedItemKey, cacheListIdx);
      } else {
        cacheListIdx -= 1;
      }
    }

    this._setItem(prefixedKey, item, Number(item.priority) - 1);
  };
  /**
   * Get item from cache. It will return null if item doesn’t exist or it has been expired.
   * If you specified callback function in the options,
   * then the function will be executed if no such item in the cache
   * and finally put the return value into cache.
   * Please make sure the callback function will return the value you want to put into the cache.
   * The cache will abort output a warning:
   * If the key is invalid
   *
   * @param key - the key of the item
   * @param options - the options of callback function
   */


  InMemoryCacheClass.prototype.getItem = function (key, options) {
    var ret = null;
    var prefixedKey = this.config.keyPrefix + key;

    if (prefixedKey === this.config.keyPrefix || prefixedKey === this.cacheCurSizeKey) {
      logger.warn("Invalid key: should not be empty or 'CurSize'");
      return null;
    } // check whether it's in the cachelist


    var presentKeyPrio = this.containsKey(key);

    if (presentKeyPrio !== -1) {
      if (this._isExpired(prefixedKey)) {
        // if expired, remove that item and return null
        this._removeItem(prefixedKey, presentKeyPrio - 1);
      } else {
        // if not expired, great, return the value and refresh it
        ret = _Utils__WEBPACK_IMPORTED_MODULE_1__.CacheObject.getItem(prefixedKey);
        var item = JSON.parse(ret);
        this.cacheList[item.priority - 1].refresh(prefixedKey);
        return item.data;
      }
    }

    if (options && options.callback !== undefined) {
      var val = options.callback();

      if (val !== null) {
        this.setItem(key, val, options);
      }

      return val;
    }

    return null;
  };
  /**
   * remove item from the cache
   *
   * @param key - the key of the item
   */


  InMemoryCacheClass.prototype.removeItem = function (key) {
    var prefixedKey = this.config.keyPrefix + key; // check if the key is in the cache

    var presentKeyPrio = this.containsKey(key);

    if (presentKeyPrio !== -1) {
      this._removeItem(prefixedKey, presentKeyPrio - 1);
    }
  };
  /**
   * clear the entire cache
   */


  InMemoryCacheClass.prototype.clear = function () {
    var e_1, _a;

    for (var i = 0; i < this.maxPriority; i += 1) {
      try {
        for (var _b = (e_1 = void 0, __values(this.cacheList[i].getKeys())), _c = _b.next(); !_c.done; _c = _b.next()) {
          var key = _c.value;

          this._removeItem(key, i);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_1) throw e_1.error;
        }
      }
    }
  };
  /**
   * Return all the keys in the cache.
   */


  InMemoryCacheClass.prototype.getAllKeys = function () {
    var e_2, _a;

    var keys = [];

    for (var i = 0; i < this.maxPriority; i += 1) {
      try {
        for (var _b = (e_2 = void 0, __values(this.cacheList[i].getKeys())), _c = _b.next(); !_c.done; _c = _b.next()) {
          var key = _c.value;
          keys.push(key.substring(this.config.keyPrefix.length));
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally {
          if (e_2) throw e_2.error;
        }
      }
    }

    return keys;
  };
  /**
   * return the current size of the cache
   *
   * @return the current size of the cache
   */


  InMemoryCacheClass.prototype.getCacheCurSize = function () {
    return this.curSizeInBytes;
  };
  /**
   * Return a new instance of cache with customized configuration.
   * @param config - the customized configuration
   */


  InMemoryCacheClass.prototype.createInstance = function (config) {
    return new InMemoryCacheClass(config);
  };

  return InMemoryCacheClass;
}(_StorageCache__WEBPACK_IMPORTED_MODULE_3__.StorageCache);


var InMemoryCache = new InMemoryCacheClass();
/**
 * @deprecated use named import
 */

/* harmony default export */ __webpack_exports__["default"] = (InMemoryCache);

/***/ }),

/***/ 60954:
/*!*****************************************************************!*\
  !*** ./node_modules/@aws-amplify/cache/lib-esm/StorageCache.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StorageCache": function() { return /* binding */ StorageCache; }
/* harmony export */ });
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils */ 93091);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */


var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('StorageCache');
/**
 * Initialization of the cache
 *
 */

var StorageCache = function () {
  /**
   * Initialize the cache
   * @param config - the configuration of the cache
   */
  function StorageCache(config) {
    this.config = Object.assign({}, config);
    this.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';
    this.checkConfig();
  }

  StorageCache.prototype.getModuleName = function () {
    return 'Cache';
  };

  StorageCache.prototype.checkConfig = function () {
    // check configuration
    if (!(0,_Utils__WEBPACK_IMPORTED_MODULE_1__.isInteger)(this.config.capacityInBytes)) {
      logger.error('Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.');
      this.config.capacityInBytes = _Utils__WEBPACK_IMPORTED_MODULE_1__.defaultConfig.capacityInBytes;
    }

    if (!(0,_Utils__WEBPACK_IMPORTED_MODULE_1__.isInteger)(this.config.itemMaxSize)) {
      logger.error('Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.');
      this.config.itemMaxSize = _Utils__WEBPACK_IMPORTED_MODULE_1__.defaultConfig.itemMaxSize;
    }

    if (!(0,_Utils__WEBPACK_IMPORTED_MODULE_1__.isInteger)(this.config.defaultTTL)) {
      logger.error('Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.');
      this.config.defaultTTL = _Utils__WEBPACK_IMPORTED_MODULE_1__.defaultConfig.defaultTTL;
    }

    if (!(0,_Utils__WEBPACK_IMPORTED_MODULE_1__.isInteger)(this.config.defaultPriority)) {
      logger.error('Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.');
      this.config.defaultPriority = _Utils__WEBPACK_IMPORTED_MODULE_1__.defaultConfig.defaultPriority;
    }

    if (this.config.itemMaxSize > this.config.capacityInBytes) {
      logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');
      this.config.itemMaxSize = _Utils__WEBPACK_IMPORTED_MODULE_1__.defaultConfig.itemMaxSize;
    }

    if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {
      logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');
      this.config.defaultPriority = _Utils__WEBPACK_IMPORTED_MODULE_1__.defaultConfig.defaultPriority;
    }

    if (Number(this.config.warningThreshold) > 1 || Number(this.config.warningThreshold) < 0) {
      logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');
      this.config.warningThreshold = _Utils__WEBPACK_IMPORTED_MODULE_1__.defaultConfig.warningThreshold;
    } // set 5MB limit


    var cacheLimit = 5 * 1024 * 1024;

    if (this.config.capacityInBytes > cacheLimit) {
      logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');
      this.config.capacityInBytes = _Utils__WEBPACK_IMPORTED_MODULE_1__.defaultConfig.capacityInBytes;
    }
  };
  /**
   * produce a JSON object with meta-data and data value
   * @param value - the value of the item
   * @param options - optional, the specified meta-data
   *
   * @return - the item which has the meta-data and the value
   */


  StorageCache.prototype.fillCacheItem = function (key, value, options) {
    var ret = {
      key: key,
      data: value,
      timestamp: (0,_Utils__WEBPACK_IMPORTED_MODULE_1__.getCurrTime)(),
      visitedTime: (0,_Utils__WEBPACK_IMPORTED_MODULE_1__.getCurrTime)(),
      priority: options.priority,
      expires: options.expires,
      type: typeof value,
      byteSize: 0
    };
    ret.byteSize = (0,_Utils__WEBPACK_IMPORTED_MODULE_1__.getByteLength)(JSON.stringify(ret)); // for accurate size

    ret.byteSize = (0,_Utils__WEBPACK_IMPORTED_MODULE_1__.getByteLength)(JSON.stringify(ret));
    return ret;
  };
  /**
   * set cache with customized configuration
   * @param config - customized configuration
   *
   * @return - the current configuration
   */


  StorageCache.prototype.configure = function (config) {
    if (!config) {
      return this.config;
    }

    if (config.keyPrefix) {
      logger.warn("Don't try to configure keyPrefix!");
    }

    this.config = Object.assign({}, this.config, config, config.Cache);
    this.checkConfig();
    return this.config;
  };

  return StorageCache;
}();


/**
 * @deprecated use named import
 */

/* harmony default export */ __webpack_exports__["default"] = (StorageCache);

/***/ }),

/***/ 68085:
/*!********************************************************************!*\
  !*** ./node_modules/@aws-amplify/cache/lib-esm/Utils/CacheList.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __values = undefined && undefined.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var DoubleLinkedNode = function () {
  function DoubleLinkedNode(keyVal) {
    this.key = keyVal ? keyVal : '';
    this.prevNode = null;
    this.nextNode = null;
  }

  return DoubleLinkedNode;
}();
/**
 * double linked list plus a hash table inside
 * each key in the cache stored as a node in the list
 * recently visited node will be rotated to the head
 * so the Last Recently Visited node will be at the tail
 *
 * @member head - dummy head of the linked list
 * @member tail - dummy tail of the linked list
 * @member hashtable - the hashtable which maps cache key to list node
 * @member length - length of the list
 */


var CacheList = function () {
  /**
   * initialization
   */
  function CacheList() {
    this.head = new DoubleLinkedNode();
    this.tail = new DoubleLinkedNode();
    this.hashtable = {};
    this.length = 0;
    this.head.nextNode = this.tail;
    this.tail.prevNode = this.head;
  }
  /**
   * insert node to the head of the list
   *
   * @param node
   */


  CacheList.prototype.insertNodeToHead = function (node) {
    var tmp = this.head.nextNode;
    this.head.nextNode = node;
    node.nextNode = tmp;
    node.prevNode = this.head;
    tmp.prevNode = node;
    this.length = this.length + 1;
  };
  /**
   * remove node
   *
   * @param node
   */


  CacheList.prototype.removeNode = function (node) {
    node.prevNode.nextNode = node.nextNode;
    node.nextNode.prevNode = node.prevNode;
    node.prevNode = null;
    node.nextNode = null;
    this.length = this.length - 1;
  };
  /**
   * @return true if list is empty
   */


  CacheList.prototype.isEmpty = function () {
    return this.length === 0;
  };
  /**
   * refresh node so it is rotated to the head
   *
   * @param key - key of the node
   */


  CacheList.prototype.refresh = function (key) {
    var node = this.hashtable[key];
    this.removeNode(node);
    this.insertNodeToHead(node);
  };
  /**
   * insert new node to the head and add it in the hashtable
   *
   * @param key - the key of the node
   */


  CacheList.prototype.insertItem = function (key) {
    var node = new DoubleLinkedNode(key);
    this.hashtable[key] = node;
    this.insertNodeToHead(node);
  };
  /**
   * @return the LAST Recently Visited key
   */


  CacheList.prototype.getLastItem = function () {
    return this.tail.prevNode.key;
  };
  /**
   * remove the cache key from the list and hashtable
   * @param key - the key of the node
   */


  CacheList.prototype.removeItem = function (key) {
    var removedItem = this.hashtable[key];
    this.removeNode(removedItem);
    delete this.hashtable[key];
  };
  /**
   * @return length of the list
   */


  CacheList.prototype.getSize = function () {
    return this.length;
  };
  /**
   * @return true if the key is in the hashtable
   * @param key
   */


  CacheList.prototype.containsKey = function (key) {
    return key in this.hashtable;
  };
  /**
   * clean up the list and hashtable
   */


  CacheList.prototype.clearList = function () {
    var e_1, _a;

    try {
      for (var _b = __values(Object.keys(this.hashtable)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var key = _c.value;

        if (this.hashtable.hasOwnProperty(key)) {
          delete this.hashtable[key];
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    this.head.nextNode = this.tail;
    this.tail.prevNode = this.head;
    this.length = 0;
  };
  /**
   * @return all keys in the hashtable
   */


  CacheList.prototype.getKeys = function () {
    return Object.keys(this.hashtable);
  };
  /**
   * mainly for test
   *
   * @param key
   * @return true if key is the head node
   */


  CacheList.prototype.isHeadNode = function (key) {
    var node = this.hashtable[key];
    return node.prevNode === this.head;
  };
  /**
   * mainly for test
   *
   * @param key
   * @return true if key is the tail node
   */


  CacheList.prototype.isTailNode = function (key) {
    var node = this.hashtable[key];
    return node.nextNode === this.tail;
  };

  return CacheList;
}();

/* harmony default export */ __webpack_exports__["default"] = (CacheList);

/***/ }),

/***/ 93091:
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-amplify/cache/lib-esm/Utils/CacheUtils.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultConfig": function() { return /* binding */ defaultConfig; },
/* harmony export */   "getByteLength": function() { return /* binding */ getByteLength; },
/* harmony export */   "getCurrTime": function() { return /* binding */ getCurrTime; },
/* harmony export */   "isInteger": function() { return /* binding */ isInteger; },
/* harmony export */   "CacheObject": function() { return /* binding */ CacheObject; }
/* harmony export */ });
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 90710);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */

/**
 * Default cache config
 */

var defaultConfig = {
  keyPrefix: 'aws-amplify-cache',
  capacityInBytes: 1048576,
  itemMaxSize: 210000,
  defaultTTL: 259200000,
  defaultPriority: 5,
  warningThreshold: 0.8,
  // the storage helper will check if localStorage exists,
  // if not, will use a in-memory object instead
  storage: new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.StorageHelper().getStorage()
};
/**
 * return the byte size of the string
 * @param str
 */

function getByteLength(str) {
  var ret = 0;
  ret = str.length;

  for (var i = str.length; i >= 0; i -= 1) {
    var charCode = str.charCodeAt(i);

    if (charCode > 0x7f && charCode <= 0x7ff) {
      ret += 1;
    } else if (charCode > 0x7ff && charCode <= 0xffff) {
      ret += 2;
    } // trail surrogate


    if (charCode >= 0xdc00 && charCode <= 0xdfff) {
      i -= 1;
    }
  }

  return ret;
}
/**
 * get current time
 */

function getCurrTime() {
  var currTime = new Date();
  return currTime.getTime();
}
/**
 * check if passed value is an integer
 */

function isInteger(value) {
  if (Number.isInteger) {
    return Number.isInteger(value);
  }

  return _isInteger(value);
}

function _isInteger(value) {
  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;
}
/**
 * provide an object as the in-memory cache
 */


var store = {};

var CacheObject = function () {
  function CacheObject() {}

  CacheObject.clear = function () {
    store = {};
  };

  CacheObject.getItem = function (key) {
    return store[key] || null;
  };

  CacheObject.setItem = function (key, value) {
    store[key] = value;
  };

  CacheObject.removeItem = function (key) {
    delete store[key];
  };

  return CacheObject;
}();



/***/ }),

/***/ 68010:
/*!**********************************************************!*\
  !*** ./node_modules/@aws-amplify/cache/lib-esm/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BrowserStorageCache": function() { return /* reexport safe */ _BrowserStorageCache__WEBPACK_IMPORTED_MODULE_0__.BrowserStorageCache; },
/* harmony export */   "InMemoryCache": function() { return /* reexport safe */ _InMemoryCache__WEBPACK_IMPORTED_MODULE_1__.InMemoryCache; }
/* harmony export */ });
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-amplify/core */ 94758);
/* harmony import */ var _BrowserStorageCache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BrowserStorageCache */ 99674);
/* harmony import */ var _InMemoryCache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InMemoryCache */ 23972);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */




/**
 * @deprecated use named import
 */

/* harmony default export */ __webpack_exports__["default"] = (_BrowserStorageCache__WEBPACK_IMPORTED_MODULE_0__.BrowserStorageCache);
_aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__.Amplify.register(_BrowserStorageCache__WEBPACK_IMPORTED_MODULE_0__.BrowserStorageCache);

/***/ }),

/***/ 71351:
/*!************************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/ClientDevice/browser.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "clientInfo": function() { return /* binding */ clientInfo; },
/* harmony export */   "dimension": function() { return /* binding */ dimension; },
/* harmony export */   "browserType": function() { return /* binding */ browserType; }
/* harmony export */ });
/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Logger */ 75582);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */

var logger = new _Logger__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('ClientDevice_Browser');
function clientInfo() {
  if (typeof window === 'undefined') {
    return {};
  }

  return browserClientInfo();
}

function browserClientInfo() {
  if (typeof window === 'undefined') {
    logger.warn('No window object available to get browser client info');
    return {};
  }

  var nav = window.navigator;

  if (!nav) {
    logger.warn('No navigator object available to get browser client info');
    return {};
  }

  var platform = nav.platform,
      product = nav.product,
      vendor = nav.vendor,
      userAgent = nav.userAgent,
      language = nav.language;
  var type = browserType(userAgent);
  var timezone = browserTimezone();
  return {
    platform: platform,
    make: product || vendor,
    model: type.type,
    version: type.version,
    appVersion: [type.type, type.version].join('/'),
    language: language,
    timezone: timezone
  };
}

function dimension() {
  if (typeof window === 'undefined') {
    logger.warn('No window object available to get browser client info');
    return {
      width: 320,
      height: 320
    };
  }

  return {
    width: window.innerWidth,
    height: window.innerHeight
  };
}

function browserTimezone() {
  var tzMatch = /\(([A-Za-z\s].*)\)/.exec(new Date().toString());
  return tzMatch ? tzMatch[1] || '' : '';
}

function browserType(userAgent) {
  var operaMatch = /.+(Opera[\s[A-Z]*|OPR[\sA-Z]*)\/([0-9\.]+).*/i.exec(userAgent);

  if (operaMatch) {
    return {
      type: operaMatch[1],
      version: operaMatch[2]
    };
  }

  var ieMatch = /.+(Trident|Edge)\/([0-9\.]+).*/i.exec(userAgent);

  if (ieMatch) {
    return {
      type: ieMatch[1],
      version: ieMatch[2]
    };
  }

  var cfMatch = /.+(Chrome|Firefox|FxiOS)\/([0-9\.]+).*/i.exec(userAgent);

  if (cfMatch) {
    return {
      type: cfMatch[1],
      version: cfMatch[2]
    };
  }

  var sMatch = /.+(Safari)\/([0-9\.]+).*/i.exec(userAgent);

  if (sMatch) {
    return {
      type: sMatch[1],
      version: sMatch[2]
    };
  }

  var awkMatch = /.+(AppleWebKit)\/([0-9\.]+).*/i.exec(userAgent);

  if (awkMatch) {
    return {
      type: awkMatch[1],
      version: awkMatch[2]
    };
  }

  var anyMatch = /.*([A-Z]+)\/([0-9\.]+).*/i.exec(userAgent);

  if (anyMatch) {
    return {
      type: anyMatch[1],
      version: anyMatch[2]
    };
  }

  return {
    type: '',
    version: ''
  };
}

/***/ }),

/***/ 87982:
/*!**********************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/ClientDevice/index.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClientDevice": function() { return /* binding */ ClientDevice; }
/* harmony export */ });
/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./browser */ 71351);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */


var ClientDevice = function () {
  function ClientDevice() {}

  ClientDevice.clientInfo = function () {
    return (0,_browser__WEBPACK_IMPORTED_MODULE_0__.clientInfo)();
  };

  ClientDevice.dimension = function () {
    return (0,_browser__WEBPACK_IMPORTED_MODULE_0__.dimension)();
  };

  return ClientDevice;
}();


/**
 * @deprecated use named import
 */

/* harmony default export */ __webpack_exports__["default"] = (ClientDevice);

/***/ }),

/***/ 69844:
/*!**********************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Errors.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "missingConfig": function() { return /* binding */ missingConfig; },
/* harmony export */   "invalidParameter": function() { return /* binding */ invalidParameter; }
/* harmony export */ });
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
function missingConfig(name) {
  return new Error('Missing config value of ' + name);
}
function invalidParameter(name) {
  return new Error('Invalid parameter value of ' + name);
}

/***/ }),

/***/ 12551:
/*!***********************************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Providers/AWSCloudWatchProvider.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AWSCloudWatchProvider": function() { return /* binding */ AWSCloudWatchProvider; }
/* harmony export */ });
/* harmony import */ var _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/client-cloudwatch-logs */ 77346);
/* harmony import */ var _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/client-cloudwatch-logs */ 71033);
/* harmony import */ var _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/client-cloudwatch-logs */ 67190);
/* harmony import */ var _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-sdk/client-cloudwatch-logs */ 16268);
/* harmony import */ var _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/client-cloudwatch-logs */ 63808);
/* harmony import */ var _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aws-sdk/client-cloudwatch-logs */ 14647);
/* harmony import */ var _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @aws-sdk/client-cloudwatch-logs */ 51539);
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../.. */ 75001);
/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Logger */ 75582);
/* harmony import */ var _Platform__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Platform */ 99433);
/* harmony import */ var _Parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Parser */ 90118);
/* harmony import */ var _Util_Constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Util/Constants */ 15466);
/*
 * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __read = undefined && undefined.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spread = undefined && undefined.__spread || function () {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read(arguments[i]));
  }

  return ar;
};







var logger = new _Logger__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('AWSCloudWatch');

var AWSCloudWatchProvider = function () {
  function AWSCloudWatchProvider(config) {
    this.configure(config);
    this._dataTracker = {
      eventUploadInProgress: false,
      logEvents: []
    };
    this._currentLogBatch = [];

    this._initiateLogPushInterval();
  }

  AWSCloudWatchProvider.prototype.getProviderName = function () {
    return AWSCloudWatchProvider.PROVIDER_NAME;
  };

  AWSCloudWatchProvider.prototype.getCategoryName = function () {
    return AWSCloudWatchProvider.CATEGORY;
  };

  AWSCloudWatchProvider.prototype.getLogQueue = function () {
    return this._dataTracker.logEvents;
  };

  AWSCloudWatchProvider.prototype.configure = function (config) {
    if (!config) return this._config || {};
    var conf = Object.assign({}, this._config, (0,_Parser__WEBPACK_IMPORTED_MODULE_1__.parseMobileHubConfig)(config).Logging, config);
    this._config = conf;
    return this._config;
  };

  AWSCloudWatchProvider.prototype.createLogGroup = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var cmd, credentialsOK, client, output, error_1;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            logger.debug('creating new log group in CloudWatch - ', params.logGroupName);
            cmd = new _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_2__.CreateLogGroupCommand(params);
            _a.label = 1;

          case 1:
            _a.trys.push([1, 4,, 5]);

            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 2:
            credentialsOK = _a.sent();

            if (!credentialsOK) {
              throw new Error(_Util_Constants__WEBPACK_IMPORTED_MODULE_3__.NO_CREDS_ERROR_STRING);
            }

            client = this._initCloudWatchLogs();
            return [4
            /*yield*/
            , client.send(cmd)];

          case 3:
            output = _a.sent();
            return [2
            /*return*/
            , output];

          case 4:
            error_1 = _a.sent();
            logger.error("error creating log group - " + error_1);
            throw error_1;

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSCloudWatchProvider.prototype.getLogGroups = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var cmd, credentialsOK, client, output, error_2;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            logger.debug('getting list of log groups');
            cmd = new _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_4__.DescribeLogGroupsCommand(params);
            _a.label = 1;

          case 1:
            _a.trys.push([1, 4,, 5]);

            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 2:
            credentialsOK = _a.sent();

            if (!credentialsOK) {
              throw new Error(_Util_Constants__WEBPACK_IMPORTED_MODULE_3__.NO_CREDS_ERROR_STRING);
            }

            client = this._initCloudWatchLogs();
            return [4
            /*yield*/
            , client.send(cmd)];

          case 3:
            output = _a.sent();
            return [2
            /*return*/
            , output];

          case 4:
            error_2 = _a.sent();
            logger.error("error getting log group - " + error_2);
            throw error_2;

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSCloudWatchProvider.prototype.createLogStream = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var cmd, credentialsOK, client, output, error_3;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            logger.debug('creating new log stream in CloudWatch - ', params.logStreamName);
            cmd = new _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_5__.CreateLogStreamCommand(params);
            _a.label = 1;

          case 1:
            _a.trys.push([1, 4,, 5]);

            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 2:
            credentialsOK = _a.sent();

            if (!credentialsOK) {
              throw new Error(_Util_Constants__WEBPACK_IMPORTED_MODULE_3__.NO_CREDS_ERROR_STRING);
            }

            client = this._initCloudWatchLogs();
            return [4
            /*yield*/
            , client.send(cmd)];

          case 3:
            output = _a.sent();
            return [2
            /*return*/
            , output];

          case 4:
            error_3 = _a.sent();
            logger.error("error creating log stream - " + error_3);
            throw error_3;

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSCloudWatchProvider.prototype.getLogStreams = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var cmd, credentialsOK, client, output, error_4;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            logger.debug('getting list of log streams');
            cmd = new _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_6__.DescribeLogStreamsCommand(params);
            _a.label = 1;

          case 1:
            _a.trys.push([1, 4,, 5]);

            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 2:
            credentialsOK = _a.sent();

            if (!credentialsOK) {
              throw new Error(_Util_Constants__WEBPACK_IMPORTED_MODULE_3__.NO_CREDS_ERROR_STRING);
            }

            client = this._initCloudWatchLogs();
            return [4
            /*yield*/
            , client.send(cmd)];

          case 3:
            output = _a.sent();
            return [2
            /*return*/
            , output];

          case 4:
            error_4 = _a.sent();
            logger.error("error getting log stream - " + error_4);
            throw error_4;

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSCloudWatchProvider.prototype.getLogEvents = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var cmd, credentialsOK, client, output, error_5;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            logger.debug('getting log events from stream - ', params.logStreamName);
            cmd = new _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_7__.GetLogEventsCommand(params);
            _a.label = 1;

          case 1:
            _a.trys.push([1, 4,, 5]);

            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 2:
            credentialsOK = _a.sent();

            if (!credentialsOK) {
              throw new Error(_Util_Constants__WEBPACK_IMPORTED_MODULE_3__.NO_CREDS_ERROR_STRING);
            }

            client = this._initCloudWatchLogs();
            return [4
            /*yield*/
            , client.send(cmd)];

          case 3:
            output = _a.sent();
            return [2
            /*return*/
            , output];

          case 4:
            error_5 = _a.sent();
            logger.error("error getting log events - " + error_5);
            throw error_5;

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSCloudWatchProvider.prototype.pushLogs = function (logs) {
    logger.debug('pushing log events to Cloudwatch...');
    this._dataTracker.logEvents = __spread(this._dataTracker.logEvents, logs);
  };

  AWSCloudWatchProvider.prototype._validateLogGroupExistsAndCreate = function (logGroupName) {
    return __awaiter(this, void 0, void 0, function () {
      var credentialsOK, currGroups, foundGroups, err_1, errString;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (this._dataTracker.verifiedLogGroup) {
              return [2
              /*return*/
              , this._dataTracker.verifiedLogGroup];
            }

            _a.label = 1;

          case 1:
            _a.trys.push([1, 5,, 6]);

            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 2:
            credentialsOK = _a.sent();

            if (!credentialsOK) {
              throw new Error(_Util_Constants__WEBPACK_IMPORTED_MODULE_3__.NO_CREDS_ERROR_STRING);
            }

            return [4
            /*yield*/
            , this.getLogGroups({
              logGroupNamePrefix: logGroupName
            })];

          case 3:
            currGroups = _a.sent();

            if (!(typeof currGroups === 'string') && currGroups.logGroups) {
              foundGroups = currGroups.logGroups.filter(function (group) {
                return group.logGroupName === logGroupName;
              });

              if (foundGroups.length > 0) {
                this._dataTracker.verifiedLogGroup = foundGroups[0];
                return [2
                /*return*/
                , foundGroups[0]];
              }
            }
            /**
             * If we get to this point, it means that the specified log group does not exist
             * and we should create it.
             */


            return [4
            /*yield*/
            , this.createLogGroup({
              logGroupName: logGroupName
            })];

          case 4:
            /**
             * If we get to this point, it means that the specified log group does not exist
             * and we should create it.
             */
            _a.sent();

            return [2
            /*return*/
            , null];

          case 5:
            err_1 = _a.sent();
            errString = "failure during log group search: " + err_1;
            logger.error(errString);
            throw err_1;

          case 6:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSCloudWatchProvider.prototype._validateLogStreamExists = function (logGroupName, logStreamName) {
    return __awaiter(this, void 0, void 0, function () {
      var credentialsOK, currStreams, foundStreams, err_2, errString;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            _a.trys.push([0, 4,, 5]);

            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 1:
            credentialsOK = _a.sent();

            if (!credentialsOK) {
              throw new Error(_Util_Constants__WEBPACK_IMPORTED_MODULE_3__.NO_CREDS_ERROR_STRING);
            }

            return [4
            /*yield*/
            , this.getLogStreams({
              logGroupName: logGroupName,
              logStreamNamePrefix: logStreamName
            })];

          case 2:
            currStreams = _a.sent();

            if (currStreams.logStreams) {
              foundStreams = currStreams.logStreams.filter(function (stream) {
                return stream.logStreamName === logStreamName;
              });

              if (foundStreams.length > 0) {
                this._nextSequenceToken = foundStreams[0].uploadSequenceToken;
                return [2
                /*return*/
                , foundStreams[0]];
              }
            }
            /**
             * If we get to this point, it means that the specified stream does not
             * exist, and we should create it now.
             */


            return [4
            /*yield*/
            , this.createLogStream({
              logGroupName: logGroupName,
              logStreamName: logStreamName
            })];

          case 3:
            /**
             * If we get to this point, it means that the specified stream does not
             * exist, and we should create it now.
             */
            _a.sent();

            return [2
            /*return*/
            , null];

          case 4:
            err_2 = _a.sent();
            errString = "failure during log stream search: " + err_2;
            logger.error(errString);
            throw err_2;

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSCloudWatchProvider.prototype._sendLogEvents = function (params) {
    return __awaiter(this, void 0, void 0, function () {
      var credentialsOK, cmd, client, output, err_3, errString;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            _a.trys.push([0, 3,, 4]);

            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 1:
            credentialsOK = _a.sent();

            if (!credentialsOK) {
              throw new Error(_Util_Constants__WEBPACK_IMPORTED_MODULE_3__.NO_CREDS_ERROR_STRING);
            }

            logger.debug('sending log events to stream - ', params.logStreamName);
            cmd = new _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_8__.PutLogEventsCommand(params);
            client = this._initCloudWatchLogs();
            return [4
            /*yield*/
            , client.send(cmd)];

          case 2:
            output = _a.sent();
            return [2
            /*return*/
            , output];

          case 3:
            err_3 = _a.sent();
            errString = "failure during log push: " + err_3;
            logger.error(errString);
            return [3
            /*break*/
            , 4];

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSCloudWatchProvider.prototype._initCloudWatchLogs = function () {
    return new _aws_sdk_client_cloudwatch_logs__WEBPACK_IMPORTED_MODULE_9__.CloudWatchLogsClient({
      region: this._config.region,
      credentials: this._config.credentials,
      customUserAgent: (0,_Platform__WEBPACK_IMPORTED_MODULE_10__.getAmplifyUserAgent)(),
      endpoint: this._config.endpoint
    });
  };

  AWSCloudWatchProvider.prototype._ensureCredentials = function () {
    return __awaiter(this, void 0, void 0, function () {
      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , ___WEBPACK_IMPORTED_MODULE_11__.Credentials.get().then(function (credentials) {
              if (!credentials) return false;
              var cred = ___WEBPACK_IMPORTED_MODULE_11__.Credentials.shear(credentials);
              logger.debug('set credentials for logging', cred);
              _this._config.credentials = cred;
              return true;
            }).catch(function (error) {
              logger.warn('ensure credentials error', error);
              return false;
            })];

          case 1:
            return [2
            /*return*/
            , _a.sent()];
        }
      });
    });
  };

  AWSCloudWatchProvider.prototype._getNextSequenceToken = function () {
    return __awaiter(this, void 0, void 0, function () {
      var logStream, err_4;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (this._nextSequenceToken && this._nextSequenceToken.length > 0) {
              return [2
              /*return*/
              , this._nextSequenceToken];
            }

            _a.label = 1;

          case 1:
            _a.trys.push([1, 4,, 5]);

            return [4
            /*yield*/
            , this._validateLogGroupExistsAndCreate(this._config.logGroupName)];

          case 2:
            _a.sent();

            this._nextSequenceToken = undefined;
            return [4
            /*yield*/
            , this._validateLogStreamExists(this._config.logGroupName, this._config.logStreamName)];

          case 3:
            logStream = _a.sent();

            if (logStream) {
              this._nextSequenceToken = logStream.uploadSequenceToken;
            }

            return [2
            /*return*/
            , this._nextSequenceToken];

          case 4:
            err_4 = _a.sent();
            logger.error("failure while getting next sequence token: " + err_4);
            throw err_4;

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSCloudWatchProvider.prototype._safeUploadLogEvents = function () {
    return __awaiter(this, void 0, void 0, function () {
      var seqToken, logBatch, putLogsPayload, sendLogEventsResponse, err_5;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            _a.trys.push([0, 3,, 4]);

            return [4
            /*yield*/
            , this._getNextSequenceToken()];

          case 1:
            seqToken = _a.sent();
            logBatch = this._currentLogBatch.length === 0 ? this._getBufferedBatchOfLogs() : this._currentLogBatch;
            putLogsPayload = {
              logGroupName: this._config.logGroupName,
              logStreamName: this._config.logStreamName,
              logEvents: logBatch,
              sequenceToken: seqToken
            };
            this._dataTracker.eventUploadInProgress = true;
            return [4
            /*yield*/
            , this._sendLogEvents(putLogsPayload)];

          case 2:
            sendLogEventsResponse = _a.sent();
            this._nextSequenceToken = sendLogEventsResponse.nextSequenceToken;
            this._dataTracker.eventUploadInProgress = false;
            this._currentLogBatch = [];
            return [2
            /*return*/
            , sendLogEventsResponse];

          case 3:
            err_5 = _a.sent();
            logger.error("error during _safeUploadLogEvents: " + err_5);

            if (_Util_Constants__WEBPACK_IMPORTED_MODULE_3__.RETRY_ERROR_CODES.includes(err_5.name)) {
              this._getNewSequenceTokenAndSubmit({
                logEvents: this._currentLogBatch,
                logGroupName: this._config.logGroupName,
                logStreamName: this._config.logStreamName
              });
            } else {
              this._dataTracker.eventUploadInProgress = false;
              throw err_5;
            }

            return [3
            /*break*/
            , 4];

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSCloudWatchProvider.prototype._getBufferedBatchOfLogs = function () {
    /**
     * CloudWatch has restrictions on the size of the log events that get sent up.
     * We need to track both the size of each event and the total size of the batch
     * of logs.
     *
     * We also need to ensure that the logs in the batch are sorted in chronological order.
     * https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html
     */
    var currentEventIdx = 0;
    var totalByteSize = 0;

    while (currentEventIdx < this._dataTracker.logEvents.length) {
      var currentEvent = this._dataTracker.logEvents[currentEventIdx];
      var eventSize = currentEvent ? new TextEncoder().encode(currentEvent.message).length + _Util_Constants__WEBPACK_IMPORTED_MODULE_3__.AWS_CLOUDWATCH_BASE_BUFFER_SIZE : 0;

      if (eventSize > _Util_Constants__WEBPACK_IMPORTED_MODULE_3__.AWS_CLOUDWATCH_MAX_EVENT_SIZE) {
        var errString = "Log entry exceeds maximum size for CloudWatch logs. Log size: " + eventSize + ". Truncating log message.";
        logger.warn(errString);
        currentEvent.message = currentEvent.message.substring(0, eventSize);
      }

      if (totalByteSize + eventSize > _Util_Constants__WEBPACK_IMPORTED_MODULE_3__.AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE) break;
      totalByteSize += eventSize;
      currentEventIdx++;
    }

    this._currentLogBatch = this._dataTracker.logEvents.splice(0, currentEventIdx);
    return this._currentLogBatch;
  };

  AWSCloudWatchProvider.prototype._getNewSequenceTokenAndSubmit = function (payload) {
    return __awaiter(this, void 0, void 0, function () {
      var seqToken, sendLogEventsRepsonse, err_6;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            _a.trys.push([0, 3,, 4]);

            this._nextSequenceToken = undefined;
            this._dataTracker.eventUploadInProgress = true;
            return [4
            /*yield*/
            , this._getNextSequenceToken()];

          case 1:
            seqToken = _a.sent();
            payload.sequenceToken = seqToken;
            return [4
            /*yield*/
            , this._sendLogEvents(payload)];

          case 2:
            sendLogEventsRepsonse = _a.sent();
            this._dataTracker.eventUploadInProgress = false;
            this._currentLogBatch = [];
            return [2
            /*return*/
            , sendLogEventsRepsonse];

          case 3:
            err_6 = _a.sent();
            logger.error("error when retrying log submission with new sequence token: " + err_6);
            this._dataTracker.eventUploadInProgress = false;
            throw err_6;

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSCloudWatchProvider.prototype._initiateLogPushInterval = function () {
    var _this = this;

    if (this._timer) {
      clearInterval(this._timer);
    }

    this._timer = setInterval(function () {
      return __awaiter(_this, void 0, void 0, function () {
        var err_7;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              _a.trys.push([0, 3,, 4]);

              if (!this._getDocUploadPermissibility()) return [3
              /*break*/
              , 2];
              return [4
              /*yield*/
              , this._safeUploadLogEvents()];

            case 1:
              _a.sent();

              _a.label = 2;

            case 2:
              return [3
              /*break*/
              , 4];

            case 3:
              err_7 = _a.sent();
              logger.error("error when calling _safeUploadLogEvents in the timer interval - " + err_7);
              return [3
              /*break*/
              , 4];

            case 4:
              return [2
              /*return*/
              ];
          }
        });
      });
    }, 2000);
  };

  AWSCloudWatchProvider.prototype._getDocUploadPermissibility = function () {
    return (this._dataTracker.logEvents.length !== 0 || this._currentLogBatch.length !== 0) && !this._dataTracker.eventUploadInProgress;
  };

  AWSCloudWatchProvider.PROVIDER_NAME = _Util_Constants__WEBPACK_IMPORTED_MODULE_3__.AWS_CLOUDWATCH_PROVIDER_NAME;
  AWSCloudWatchProvider.CATEGORY = _Util_Constants__WEBPACK_IMPORTED_MODULE_3__.AWS_CLOUDWATCH_CATEGORY;
  return AWSCloudWatchProvider;
}();



/***/ }),

/***/ 88734:
/*!*******************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Providers/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AWSCloudWatchProvider": function() { return /* reexport safe */ _AWSCloudWatchProvider__WEBPACK_IMPORTED_MODULE_0__.AWSCloudWatchProvider; }
/* harmony export */ });
/* harmony import */ var _AWSCloudWatchProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AWSCloudWatchProvider */ 12551);


/***/ }),

/***/ 67231:
/*!**********************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/RNComponents/index.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Linking": function() { return /* binding */ Linking; },
/* harmony export */   "AppState": function() { return /* binding */ AppState; },
/* harmony export */   "AsyncStorage": function() { return /* binding */ AsyncStorage; }
/* harmony export */ });
/* harmony import */ var _JS__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../JS */ 56722);
/* harmony import */ var _StorageHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../StorageHelper */ 90710);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */


var Linking = {};
var AppState = {
  addEventListener: function addEventListener(action, handler) {
    return undefined;
  }
}; // if not in react native, just use local storage

var AsyncStorage = (0,_JS__WEBPACK_IMPORTED_MODULE_0__.browserOrNode)().isBrowser ? new _StorageHelper__WEBPACK_IMPORTED_MODULE_1__.StorageHelper().getStorage() : undefined;

/***/ }),

/***/ 47509:
/*!*******************************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/ServiceWorker/ServiceWorker.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ServiceWorkerClass": function() { return /* binding */ ServiceWorkerClass; }
/* harmony export */ });
/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Logger */ 75582);
/* harmony import */ var _JS__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../JS */ 56722);
/* harmony import */ var _Amplify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Amplify */ 94758);
/**
 * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */



/**
 * Provides a means to registering a service worker in the browser
 * and communicating with it via postMessage events.
 * https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/
 *
 * postMessage events are currently not supported in all browsers. See:
 * https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API
 *
 * At the minmum this class will register the service worker and listen
 * and attempt to dispatch messages on state change and record analytics
 * events based on the service worker lifecycle.
 */

var ServiceWorkerClass = function () {
  function ServiceWorkerClass() {
    // The AWS Amplify logger
    this._logger = new _Logger__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('ServiceWorker');
  }

  Object.defineProperty(ServiceWorkerClass.prototype, "serviceWorker", {
    /**
     * Get the currently active service worker
     */
    get: function get() {
      return this._serviceWorker;
    },
    enumerable: true,
    configurable: true
  });
  /**
   * Register the service-worker.js file in the browser
   * Make sure the service-worker.js is part of the build
   * for example with Angular, modify the angular-cli.json file
   * and add to "assets" array "service-worker.js"
   * @param {string} - (optional) Service worker file. Defaults to "/service-worker.js"
   * @param {string} - (optional) The service worker scope. Defaults to "/"
   *  - API Doc: https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register
   * @returns {Promise}
   *	- resolve(ServiceWorkerRegistration)
   *	- reject(Error)
   **/

  ServiceWorkerClass.prototype.register = function (filePath, scope) {
    var _this = this;

    if (filePath === void 0) {
      filePath = '/service-worker.js';
    }

    if (scope === void 0) {
      scope = '/';
    }

    this._logger.debug("registering " + filePath);

    this._logger.debug("registering service worker with scope " + scope);

    return new Promise(function (resolve, reject) {
      if (navigator && 'serviceWorker' in navigator) {
        navigator.serviceWorker.register(filePath, {
          scope: scope
        }).then(function (registration) {
          if (registration.installing) {
            _this._serviceWorker = registration.installing;
          } else if (registration.waiting) {
            _this._serviceWorker = registration.waiting;
          } else if (registration.active) {
            _this._serviceWorker = registration.active;
          }

          _this._registration = registration;

          _this._setupListeners();

          _this._logger.debug("Service Worker Registration Success: " + registration);

          return resolve(registration);
        }).catch(function (error) {
          _this._logger.debug("Service Worker Registration Failed " + error);

          return reject(error);
        });
      } else {
        return reject(new Error('Service Worker not available'));
      }
    });
  };
  /**
   * Enable web push notifications. If not subscribed, a new subscription will
   * be created and registered.
   * 	Test Push Server: https://web-push-codelab.glitch.me/
   * 	Push Server Libraries: https://github.com/web-push-libs/
   * 	API Doc: https://developers.google.com/web/fundamentals/codelabs/push-notifications/
   * @param publicKey
   * @returns {Promise}
   * 	- resolve(PushSubscription)
   *  - reject(Error)
   */


  ServiceWorkerClass.prototype.enablePush = function (publicKey) {
    var _this = this;

    if (!this._registration) throw new Error('Service Worker not registered');
    this._publicKey = publicKey;
    return new Promise(function (resolve, reject) {
      if ((0,_JS__WEBPACK_IMPORTED_MODULE_1__.browserOrNode)().isBrowser) {
        _this._registration.pushManager.getSubscription().then(function (subscription) {
          if (subscription) {
            _this._subscription = subscription;

            _this._logger.debug("User is subscribed to push: " + JSON.stringify(subscription));

            resolve(subscription);
          } else {
            _this._logger.debug("User is NOT subscribed to push");

            return _this._registration.pushManager.subscribe({
              userVisibleOnly: true,
              applicationServerKey: _this._urlB64ToUint8Array(publicKey)
            }).then(function (subscription) {
              _this._subscription = subscription;

              _this._logger.debug("User subscribed: " + JSON.stringify(subscription));

              resolve(subscription);
            }).catch(function (error) {
              _this._logger.error(error);
            });
          }
        });
      } else {
        return reject(new Error('Service Worker not available'));
      }
    });
  };
  /**
   * Convert a base64 encoded string to a Uint8 array for the push server key
   * @param base64String
   */


  ServiceWorkerClass.prototype._urlB64ToUint8Array = function (base64String) {
    var padding = '='.repeat((4 - base64String.length % 4) % 4);
    var base64 = (base64String + padding).replace(/\-/g, '+').replace(/_/g, '/');
    var rawData = window.atob(base64);
    var outputArray = new Uint8Array(rawData.length);

    for (var i = 0; i < rawData.length; ++i) {
      outputArray[i] = rawData.charCodeAt(i);
    }

    return outputArray;
  };
  /**
   * Send a message to the service worker. The service worker needs
   * to implement `self.addEventListener('message') to handle the
   * message. This ***currently*** does not work in Safari or IE.
   * @param {object | string} - An arbitrary JSON object or string message to send to the service worker
   *	- see: https://developer.mozilla.org/en-US/docs/Web/API/Transferable
   * @returns {Promise}
   **/


  ServiceWorkerClass.prototype.send = function (message) {
    if (this._serviceWorker) {
      this._serviceWorker.postMessage(typeof message === 'object' ? JSON.stringify(message) : message);
    }
  };
  /**
   * Listen for service worker state change and message events
   * https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker/state
   **/


  ServiceWorkerClass.prototype._setupListeners = function () {
    var _this = this;

    this._serviceWorker.addEventListener('statechange', function (event) {
      var currentState = _this._serviceWorker.state;

      _this._logger.debug("ServiceWorker statechange: " + currentState);

      if (_Amplify__WEBPACK_IMPORTED_MODULE_2__.Amplify.Analytics && typeof _Amplify__WEBPACK_IMPORTED_MODULE_2__.Amplify.Analytics.record === 'function') {
        _Amplify__WEBPACK_IMPORTED_MODULE_2__.Amplify.Analytics.record({
          name: 'ServiceWorker',
          attributes: {
            state: currentState
          }
        });
      }
    });

    this._serviceWorker.addEventListener('message', function (event) {
      _this._logger.debug("ServiceWorker message event: " + event);
    });
  };

  return ServiceWorkerClass;
}();


/**
 * @deprecated use named import
 */

/* harmony default export */ __webpack_exports__["default"] = (ServiceWorkerClass);

/***/ }),

/***/ 5824:
/*!**********************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Signer.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Signer": function() { return /* binding */ Signer; }
/* harmony export */ });
/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Logger */ 75582);
/* harmony import */ var _aws_crypto_sha256_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-crypto/sha256-js */ 50081);
/* harmony import */ var _aws_crypto_sha256_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_crypto_sha256_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/util-hex-encoding */ 57963);
/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! url */ 55627);
/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Util */ 74538);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};






var logger = new _Logger__WEBPACK_IMPORTED_MODULE_3__.ConsoleLogger('Signer');
var DEFAULT_ALGORITHM = 'AWS4-HMAC-SHA256';
var IOT_SERVICE_NAME = 'iotdevicegateway';

var encrypt = function encrypt(key, src) {
  var hash = new _aws_crypto_sha256_js__WEBPACK_IMPORTED_MODULE_0__.Sha256(key);
  hash.update(src);
  return hash.digestSync();
};

var hash = function hash(src) {
  var arg = src || '';
  var hash = new _aws_crypto_sha256_js__WEBPACK_IMPORTED_MODULE_0__.Sha256();
  hash.update(arg);
  return (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_1__.toHex)(hash.digestSync());
};
/**
 * @private
 * RFC 3986 compliant version of encodeURIComponent
 */


var escape_RFC3986 = function escape_RFC3986(component) {
  return component.replace(/[!'()*]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  });
};
/**
 * @private
 * Create canonical query string
 *
 */


var canonical_query = function canonical_query(query) {
  if (!query || query.length === 0) {
    return '';
  }

  return query.split('&').map(function (e) {
    var key_val = e.split('=');

    if (key_val.length === 1) {
      return e;
    } else {
      var reencoded_val = escape_RFC3986(key_val[1]);
      return key_val[0] + '=' + reencoded_val;
    }
  }).sort(function (a, b) {
    var key_a = a.split('=')[0];
    var key_b = b.split('=')[0];

    if (key_a === key_b) {
      return a < b ? -1 : 1;
    } else {
      return key_a < key_b ? -1 : 1;
    }
  }).join('&');
};
/**
* @private
* Create canonical headers
*
<pre>
CanonicalHeaders =
    CanonicalHeadersEntry0 + CanonicalHeadersEntry1 + ... + CanonicalHeadersEntryN
CanonicalHeadersEntry =
    Lowercase(HeaderName) + ':' + Trimall(HeaderValue) + '\n'
</pre>
*/


var canonical_headers = function canonical_headers(headers) {
  if (!headers || Object.keys(headers).length === 0) {
    return '';
  }

  return Object.keys(headers).map(function (key) {
    return {
      key: key.toLowerCase(),
      value: headers[key] ? headers[key].trim().replace(/\s+/g, ' ') : ''
    };
  }).sort(function (a, b) {
    return a.key < b.key ? -1 : 1;
  }).map(function (item) {
    return item.key + ':' + item.value;
  }).join('\n') + '\n';
};
/**
 * List of header keys included in the canonical headers.
 * @access private
 */


var signed_headers = function signed_headers(headers) {
  return Object.keys(headers).map(function (key) {
    return key.toLowerCase();
  }).sort().join(';');
};
/**
* @private
* Create canonical request
* Refer to
* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html|Create a Canonical Request}
*
<pre>
CanonicalRequest =
    HTTPRequestMethod + '\n' +
    CanonicalURI + '\n' +
    CanonicalQueryString + '\n' +
    CanonicalHeaders + '\n' +
    SignedHeaders + '\n' +
    HexEncode(Hash(RequestPayload))
</pre>
*/


var canonical_request = function canonical_request(request) {
  var url_info = (0,url__WEBPACK_IMPORTED_MODULE_2__.parse)(request.url);
  return [request.method || '/', encodeURIComponent(url_info.pathname).replace(/%2F/gi, '/'), canonical_query(url_info.query), canonical_headers(request.headers), signed_headers(request.headers), hash(request.data)].join('\n');
};

var parse_service_info = function parse_service_info(request) {
  var url_info = (0,url__WEBPACK_IMPORTED_MODULE_2__.parse)(request.url),
      host = url_info.host;
  var matched = host.match(/([^\.]+)\.(?:([^\.]*)\.)?amazonaws\.com$/);
  var parsed = (matched || []).slice(1, 3);

  if (parsed[1] === 'es') {
    // Elastic Search
    parsed = parsed.reverse();
  }

  return {
    service: request.service || parsed[0],
    region: request.region || parsed[1]
  };
};

var credential_scope = function credential_scope(d_str, region, service) {
  return [d_str, region, service, 'aws4_request'].join('/');
};
/**
* @private
* Create a string to sign
* Refer to
* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html|Create String to Sign}
*
<pre>
StringToSign =
    Algorithm + \n +
    RequestDateTime + \n +
    CredentialScope + \n +
    HashedCanonicalRequest
</pre>
*/


var string_to_sign = function string_to_sign(algorithm, canonical_request, dt_str, scope) {
  return [algorithm, dt_str, scope, hash(canonical_request)].join('\n');
};
/**
* @private
* Create signing key
* Refer to
* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html|Calculate Signature}
*
<pre>
kSecret = your secret access key
kDate = HMAC("AWS4" + kSecret, Date)
kRegion = HMAC(kDate, Region)
kService = HMAC(kRegion, Service)
kSigning = HMAC(kService, "aws4_request")
</pre>
*/


var get_signing_key = function get_signing_key(secret_key, d_str, service_info) {
  logger.debug(service_info);
  var k = 'AWS4' + secret_key,
      k_date = encrypt(k, d_str),
      k_region = encrypt(k_date, service_info.region),
      k_service = encrypt(k_region, service_info.service),
      k_signing = encrypt(k_service, 'aws4_request');
  return k_signing;
};

var get_signature = function get_signature(signing_key, str_to_sign) {
  return (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_1__.toHex)(encrypt(signing_key, str_to_sign));
};
/**
 * @private
 * Create authorization header
 * Refer to
 * {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html|Add the Signing Information}
 */


var get_authorization_header = function get_authorization_header(algorithm, access_key, scope, signed_headers, signature) {
  return [algorithm + ' ' + 'Credential=' + access_key + '/' + scope, 'SignedHeaders=' + signed_headers, 'Signature=' + signature].join(', ');
};

var Signer = function () {
  function Signer() {}
  /**
  * Sign a HTTP request, add 'Authorization' header to request param
  * @method sign
  * @memberof Signer
  * @static
  *
  * @param {object} request - HTTP request object
  <pre>
  request: {
      method: GET | POST | PUT ...
      url: ...,
      headers: {
          header1: ...
      },
      data: data
  }
  </pre>
  * @param {object} access_info - AWS access credential info
  <pre>
  access_info: {
      access_key: ...,
      secret_key: ...,
      session_token: ...
  }
  </pre>
  * @param {object} [service_info] - AWS service type and region, optional,
  *                                  if not provided then parse out from url
  <pre>
  service_info: {
      service: ...,
      region: ...
  }
  </pre>
  *
  * @returns {object} Signed HTTP request
  */


  Signer.sign = function (request, access_info, service_info) {
    if (service_info === void 0) {
      service_info = null;
    }

    request.headers = request.headers || {}; // datetime string and date string

    var dt = _Util__WEBPACK_IMPORTED_MODULE_4__.DateUtils.getDateWithClockOffset(),
        dt_str = dt.toISOString().replace(/[:\-]|\.\d{3}/g, ''),
        d_str = dt_str.substr(0, 8);
    var url_info = (0,url__WEBPACK_IMPORTED_MODULE_2__.parse)(request.url);
    request.headers['host'] = url_info.host;
    request.headers['x-amz-date'] = dt_str;

    if (access_info.session_token) {
      request.headers['X-Amz-Security-Token'] = access_info.session_token;
    } // Task 1: Create a Canonical Request


    var request_str = canonical_request(request);
    logger.debug(request_str); // Task 2: Create a String to Sign

    var serviceInfo = service_info || parse_service_info(request),
        scope = credential_scope(d_str, serviceInfo.region, serviceInfo.service),
        str_to_sign = string_to_sign(DEFAULT_ALGORITHM, request_str, dt_str, scope); // Task 3: Calculate the Signature

    var signing_key = get_signing_key(access_info.secret_key, d_str, serviceInfo),
        signature = get_signature(signing_key, str_to_sign); // Task 4: Adding the Signing information to the Request

    var authorization_header = get_authorization_header(DEFAULT_ALGORITHM, access_info.access_key, scope, signed_headers(request.headers), signature);
    request.headers['Authorization'] = authorization_header;
    return request;
  };

  Signer.signUrl = function (urlOrRequest, accessInfo, serviceInfo, expiration) {
    var urlToSign = typeof urlOrRequest === 'object' ? urlOrRequest.url : urlOrRequest;
    var method = typeof urlOrRequest === 'object' ? urlOrRequest.method : 'GET';
    var body = typeof urlOrRequest === 'object' ? urlOrRequest.body : undefined;
    var now = _Util__WEBPACK_IMPORTED_MODULE_4__.DateUtils.getDateWithClockOffset().toISOString().replace(/[:\-]|\.\d{3}/g, '');
    var today = now.substr(0, 8); // Intentionally discarding search

    var _a = (0,url__WEBPACK_IMPORTED_MODULE_2__.parse)(urlToSign, true, true),
        search = _a.search,
        parsedUrl = __rest(_a, ["search"]);

    var host = parsedUrl.host;
    var signedHeaders = {
      host: host
    };

    var _b = serviceInfo || parse_service_info({
      url: (0,url__WEBPACK_IMPORTED_MODULE_2__.format)(parsedUrl)
    }),
        region = _b.region,
        service = _b.service;

    var credentialScope = credential_scope(today, region, service); // IoT service does not allow the session token in the canonical request
    // https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html

    var sessionTokenRequired = accessInfo.session_token && service !== IOT_SERVICE_NAME;

    var queryParams = __assign(__assign(__assign({
      'X-Amz-Algorithm': DEFAULT_ALGORITHM,
      'X-Amz-Credential': [accessInfo.access_key, credentialScope].join('/'),
      'X-Amz-Date': now.substr(0, 16)
    }, sessionTokenRequired ? {
      'X-Amz-Security-Token': "" + accessInfo.session_token
    } : {}), expiration ? {
      'X-Amz-Expires': "" + expiration
    } : {}), {
      'X-Amz-SignedHeaders': Object.keys(signedHeaders).join(',')
    });

    var canonicalRequest = canonical_request({
      method: method,
      url: (0,url__WEBPACK_IMPORTED_MODULE_2__.format)(__assign(__assign({}, parsedUrl), {
        query: __assign(__assign({}, parsedUrl.query), queryParams)
      })),
      headers: signedHeaders,
      data: body
    });
    var stringToSign = string_to_sign(DEFAULT_ALGORITHM, canonicalRequest, now, credentialScope);
    var signing_key = get_signing_key(accessInfo.secret_key, today, {
      region: region,
      service: service
    });
    var signature = get_signature(signing_key, stringToSign);

    var additionalQueryParams = __assign({
      'X-Amz-Signature': signature
    }, accessInfo.session_token && {
      'X-Amz-Security-Token': accessInfo.session_token
    });

    var result = (0,url__WEBPACK_IMPORTED_MODULE_2__.format)({
      protocol: parsedUrl.protocol,
      slashes: true,
      hostname: parsedUrl.hostname,
      port: parsedUrl.port,
      pathname: parsedUrl.pathname,
      query: __assign(__assign(__assign({}, parsedUrl.query), queryParams), additionalQueryParams)
    });
    return result;
  };

  return Signer;
}();


/**
 * @deprecated use per-function import
 */

/* harmony default export */ __webpack_exports__["default"] = (Signer);

/***/ }),

/***/ 74538:
/*!******************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Util/DateUtils.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DateUtils": function() { return /* binding */ DateUtils; }
/* harmony export */ });
/**
 * Date & time utility functions to abstract the `aws-sdk` away from users.
 * (v2 => v3 modularization is a breaking change)
 *
 * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262
 */
var __read = undefined && undefined.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
}; // Comment - TODO: remove


var FIVE_MINUTES_IN_MS = 1000 * 60 * 5;
var DateUtils = {
  /**
   * Milliseconds to offset the date to compensate for clock skew between device & services
   */
  clockOffset: 0,
  getDateWithClockOffset: function getDateWithClockOffset() {
    if (DateUtils.clockOffset) {
      return new Date(new Date().getTime() + DateUtils.clockOffset);
    } else {
      return new Date();
    }
  },

  /**
   * @returns {number} Clock offset in milliseconds
   */
  getClockOffset: function getClockOffset() {
    return DateUtils.clockOffset;
  },
  getHeaderStringFromDate: function getHeaderStringFromDate(date) {
    if (date === void 0) {
      date = DateUtils.getDateWithClockOffset();
    }

    return date.toISOString().replace(/[:\-]|\.\d{3}/g, '');
  },
  getDateFromHeaderString: function getDateFromHeaderString(header) {
    var _a = __read(header.match(/^(\d{4})(\d{2})(\d{2})T(\d{2})(\d{2})(\d{2}).+/), 7),
        year = _a[1],
        month = _a[2],
        day = _a[3],
        hour = _a[4],
        minute = _a[5],
        second = _a[6];

    return new Date(Date.UTC(Number(year), Number(month) - 1, Number(day), Number(hour), Number(minute), Number(second)));
  },
  isClockSkewed: function isClockSkewed(serverDate) {
    // API gateway permits client calls that are off by no more than ±5 minutes
    return Math.abs(serverDate.getTime() - DateUtils.getDateWithClockOffset().getTime()) >= FIVE_MINUTES_IN_MS;
  },
  isClockSkewError: function isClockSkewError(error) {
    if (!error.response || !error.response.headers) {
      return false;
    }

    var headers = error.response.headers;
    return Boolean(['BadRequestException', 'InvalidSignatureException'].includes(headers['x-amzn-errortype']) && (headers.date || headers.Date));
  },

  /**
   * @param {number} offset Clock offset in milliseconds
   */
  setClockOffset: function setClockOffset(offset) {
    DateUtils.clockOffset = offset;
  }
};

/***/ }),

/***/ 54139:
/*!**************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Util/Mutex.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*!
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 Christian Speckner <cnspeckn@googlemail.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var Mutex = function () {
  function Mutex() {
    this._queue = [];
    this._pending = false;
  }

  Mutex.prototype.isLocked = function () {
    return this._pending;
  };

  Mutex.prototype.acquire = function () {
    var _this = this;

    var ticket = new Promise(function (resolve) {
      return _this._queue.push(resolve);
    });

    if (!this._pending) {
      this._dispatchNext();
    }

    return ticket;
  };

  Mutex.prototype.runExclusive = function (callback) {
    return this.acquire().then(function (release) {
      var result;

      try {
        result = callback();
      } catch (e) {
        release();
        throw e;
      }

      return Promise.resolve(result).then(function (x) {
        return release(), x;
      }, function (e) {
        release();
        throw e;
      });
    });
  };

  Mutex.prototype._dispatchNext = function () {
    if (this._queue.length > 0) {
      this._pending = true;

      this._queue.shift()(this._dispatchNext.bind(this));
    } else {
      this._pending = false;
    }
  };

  return Mutex;
}();

/* harmony default export */ __webpack_exports__["default"] = (Mutex);

/***/ }),

/***/ 72746:
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Util/Reachability.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 56722);
/* harmony import */ var zen_observable_ts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zen-observable-ts */ 78638);
var __values = undefined && undefined.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};




var ReachabilityNavigator = function () {
  function ReachabilityNavigator() {}

  ReachabilityNavigator.prototype.networkMonitor = function (netInfo) {
    if ((0,_aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.browserOrNode)().isNode) {
      return zen_observable_ts__WEBPACK_IMPORTED_MODULE_1__.default.from([{
        online: true
      }]);
    }

    var globalObj = (0,_aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.isWebWorker)() ? self : window;
    return new zen_observable_ts__WEBPACK_IMPORTED_MODULE_1__.default(function (observer) {
      observer.next({
        online: globalObj.navigator.onLine
      });

      var notifyOnline = function notifyOnline() {
        return observer.next({
          online: true
        });
      };

      var notifyOffline = function notifyOffline() {
        return observer.next({
          online: false
        });
      };

      globalObj.addEventListener('online', notifyOnline);
      globalObj.addEventListener('offline', notifyOffline);

      ReachabilityNavigator._observers.push(observer);

      return function () {
        globalObj.removeEventListener('online', notifyOnline);
        globalObj.removeEventListener('offline', notifyOffline);
        ReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(function (_observer) {
          return _observer !== observer;
        });
      };
    });
  }; // expose observers to simulate offline mode for integration testing


  ReachabilityNavigator._observerOverride = function (status) {
    var e_1, _a;

    var _loop_1 = function _loop_1(observer) {
      if (observer.closed) {
        ReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(function (_observer) {
          return _observer !== observer;
        });
        return "continue";
      }

      observer.next(status);
    };

    try {
      for (var _b = __values(ReachabilityNavigator._observers), _c = _b.next(); !_c.done; _c = _b.next()) {
        var observer = _c.value;

        _loop_1(observer);
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
  };

  ReachabilityNavigator._observers = [];
  return ReachabilityNavigator;
}();

/* harmony default export */ __webpack_exports__["default"] = (ReachabilityNavigator);

/***/ }),

/***/ 40250:
/*!**************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/Util/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NonRetryableError": function() { return /* reexport safe */ _Retry__WEBPACK_IMPORTED_MODULE_0__.NonRetryableError; },
/* harmony export */   "jitteredBackoff": function() { return /* reexport safe */ _Retry__WEBPACK_IMPORTED_MODULE_0__.jitteredBackoff; },
/* harmony export */   "jitteredExponentialRetry": function() { return /* reexport safe */ _Retry__WEBPACK_IMPORTED_MODULE_0__.jitteredExponentialRetry; },
/* harmony export */   "retry": function() { return /* reexport safe */ _Retry__WEBPACK_IMPORTED_MODULE_0__.retry; },
/* harmony export */   "Mutex": function() { return /* reexport safe */ _Mutex__WEBPACK_IMPORTED_MODULE_1__.default; },
/* harmony export */   "Reachability": function() { return /* reexport safe */ _Reachability__WEBPACK_IMPORTED_MODULE_2__.default; },
/* harmony export */   "DateUtils": function() { return /* reexport safe */ _DateUtils__WEBPACK_IMPORTED_MODULE_3__.DateUtils; },
/* harmony export */   "urlSafeDecode": function() { return /* reexport safe */ _StringUtils__WEBPACK_IMPORTED_MODULE_4__.urlSafeDecode; },
/* harmony export */   "urlSafeEncode": function() { return /* reexport safe */ _StringUtils__WEBPACK_IMPORTED_MODULE_4__.urlSafeEncode; },
/* harmony export */   "AWS_CLOUDWATCH_BASE_BUFFER_SIZE": function() { return /* reexport safe */ _Constants__WEBPACK_IMPORTED_MODULE_5__.AWS_CLOUDWATCH_BASE_BUFFER_SIZE; },
/* harmony export */   "AWS_CLOUDWATCH_CATEGORY": function() { return /* reexport safe */ _Constants__WEBPACK_IMPORTED_MODULE_5__.AWS_CLOUDWATCH_CATEGORY; },
/* harmony export */   "AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE": function() { return /* reexport safe */ _Constants__WEBPACK_IMPORTED_MODULE_5__.AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE; },
/* harmony export */   "AWS_CLOUDWATCH_MAX_EVENT_SIZE": function() { return /* reexport safe */ _Constants__WEBPACK_IMPORTED_MODULE_5__.AWS_CLOUDWATCH_MAX_EVENT_SIZE; },
/* harmony export */   "AWS_CLOUDWATCH_PROVIDER_NAME": function() { return /* reexport safe */ _Constants__WEBPACK_IMPORTED_MODULE_5__.AWS_CLOUDWATCH_PROVIDER_NAME; },
/* harmony export */   "NO_CREDS_ERROR_STRING": function() { return /* reexport safe */ _Constants__WEBPACK_IMPORTED_MODULE_5__.NO_CREDS_ERROR_STRING; },
/* harmony export */   "RETRY_ERROR_CODES": function() { return /* reexport safe */ _Constants__WEBPACK_IMPORTED_MODULE_5__.RETRY_ERROR_CODES; }
/* harmony export */ });
/* harmony import */ var _Retry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Retry */ 14212);
/* harmony import */ var _Mutex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Mutex */ 54139);
/* harmony import */ var _Reachability__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reachability */ 72746);
/* harmony import */ var _DateUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DateUtils */ 74538);
/* harmony import */ var _StringUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./StringUtils */ 27559);
/* harmony import */ var _Constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Constants */ 15466);







/***/ }),

/***/ 24219:
/*!*************************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/constants.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER": function() { return /* binding */ INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER; },
/* harmony export */   "INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER": function() { return /* binding */ INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER; },
/* harmony export */   "USER_AGENT_HEADER": function() { return /* binding */ USER_AGENT_HEADER; }
/* harmony export */ });
/*
 * Copyright 2018-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */

/**
 * This Symbol is used to reference an internal-only PubSub provider that
 * is used for AppSync/GraphQL subscriptions in the API category.
 */
var hasSymbol = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function';
var INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER = hasSymbol ? Symbol.for('INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER') : '@@INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER';
var INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER = hasSymbol ? Symbol.for('INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER') : '@@INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER';
var USER_AGENT_HEADER = 'x-amz-user-agent';

/***/ }),

/***/ 92432:
/*!*********************************************************!*\
  !*** ./node_modules/@aws-amplify/core/lib-esm/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AmplifyClass": function() { return /* reexport safe */ _Amplify__WEBPACK_IMPORTED_MODULE_0__.AmplifyClass; },
/* harmony export */   "ClientDevice": function() { return /* reexport safe */ _ClientDevice__WEBPACK_IMPORTED_MODULE_1__.ClientDevice; },
/* harmony export */   "ConsoleLogger": function() { return /* reexport safe */ _Logger__WEBPACK_IMPORTED_MODULE_2__.ConsoleLogger; },
/* harmony export */   "Logger": function() { return /* reexport safe */ _Logger__WEBPACK_IMPORTED_MODULE_2__.ConsoleLogger; },
/* harmony export */   "invalidParameter": function() { return /* reexport safe */ _Errors__WEBPACK_IMPORTED_MODULE_3__.invalidParameter; },
/* harmony export */   "missingConfig": function() { return /* reexport safe */ _Errors__WEBPACK_IMPORTED_MODULE_3__.missingConfig; },
/* harmony export */   "Hub": function() { return /* reexport safe */ _Hub__WEBPACK_IMPORTED_MODULE_4__.Hub; },
/* harmony export */   "I18n": function() { return /* reexport safe */ _I18n__WEBPACK_IMPORTED_MODULE_5__.I18n; },
/* harmony export */   "JS": function() { return /* reexport safe */ _JS__WEBPACK_IMPORTED_MODULE_6__.JS; },
/* harmony export */   "browserOrNode": function() { return /* reexport safe */ _JS__WEBPACK_IMPORTED_MODULE_6__.browserOrNode; },
/* harmony export */   "filenameToContentType": function() { return /* reexport safe */ _JS__WEBPACK_IMPORTED_MODULE_6__.filenameToContentType; },
/* harmony export */   "generateRandomString": function() { return /* reexport safe */ _JS__WEBPACK_IMPORTED_MODULE_6__.generateRandomString; },
/* harmony export */   "isEmpty": function() { return /* reexport safe */ _JS__WEBPACK_IMPORTED_MODULE_6__.isEmpty; },
/* harmony export */   "isStrictObject": function() { return /* reexport safe */ _JS__WEBPACK_IMPORTED_MODULE_6__.isStrictObject; },
/* harmony export */   "isTextFile": function() { return /* reexport safe */ _JS__WEBPACK_IMPORTED_MODULE_6__.isTextFile; },
/* harmony export */   "isWebWorker": function() { return /* reexport safe */ _JS__WEBPACK_IMPORTED_MODULE_6__.isWebWorker; },
/* harmony export */   "makeQuerablePromise": function() { return /* reexport safe */ _JS__WEBPACK_IMPORTED_MODULE_6__.makeQuerablePromise; },
/* harmony export */   "objectLessAttributes": function() { return /* reexport safe */ _JS__WEBPACK_IMPORTED_MODULE_6__.objectLessAttributes; },
/* harmony export */   "sortByField": function() { return /* reexport safe */ _JS__WEBPACK_IMPORTED_MODULE_6__.sortByField; },
/* harmony export */   "transferKeyToLowerCase": function() { return /* reexport safe */ _JS__WEBPACK_IMPORTED_MODULE_6__.transferKeyToLowerCase; },
/* harmony export */   "transferKeyToUpperCase": function() { return /* reexport safe */ _JS__WEBPACK_IMPORTED_MODULE_6__.transferKeyToUpperCase; },
/* harmony export */   "Signer": function() { return /* reexport safe */ _Signer__WEBPACK_IMPORTED_MODULE_7__.Signer; },
/* harmony export */   "Parser": function() { return /* reexport safe */ _Parser__WEBPACK_IMPORTED_MODULE_8__.Parser; },
/* harmony export */   "parseMobileHubConfig": function() { return /* reexport safe */ _Parser__WEBPACK_IMPORTED_MODULE_8__.parseMobileHubConfig; },
/* harmony export */   "AWSCloudWatchProvider": function() { return /* reexport safe */ _Providers__WEBPACK_IMPORTED_MODULE_9__.AWSCloudWatchProvider; },
/* harmony export */   "FacebookOAuth": function() { return /* reexport safe */ _OAuthHelper__WEBPACK_IMPORTED_MODULE_10__.FacebookOAuth; },
/* harmony export */   "GoogleOAuth": function() { return /* reexport safe */ _OAuthHelper__WEBPACK_IMPORTED_MODULE_10__.GoogleOAuth; },
/* harmony export */   "AppState": function() { return /* reexport safe */ _RNComponents__WEBPACK_IMPORTED_MODULE_11__.AppState; },
/* harmony export */   "AsyncStorage": function() { return /* reexport safe */ _RNComponents__WEBPACK_IMPORTED_MODULE_11__.AsyncStorage; },
/* harmony export */   "Linking": function() { return /* reexport safe */ _RNComponents__WEBPACK_IMPORTED_MODULE_11__.Linking; },
/* harmony export */   "Credentials": function() { return /* reexport safe */ _Credentials__WEBPACK_IMPORTED_MODULE_12__.Credentials; },
/* harmony export */   "CredentialsClass": function() { return /* reexport safe */ _Credentials__WEBPACK_IMPORTED_MODULE_12__.CredentialsClass; },
/* harmony export */   "ServiceWorker": function() { return /* reexport safe */ _ServiceWorker__WEBPACK_IMPORTED_MODULE_13__.ServiceWorkerClass; },
/* harmony export */   "StorageHelper": function() { return /* reexport safe */ _StorageHelper__WEBPACK_IMPORTED_MODULE_14__.StorageHelper; },
/* harmony export */   "MemoryStorage": function() { return /* reexport safe */ _StorageHelper__WEBPACK_IMPORTED_MODULE_14__.MemoryStorage; },
/* harmony export */   "UniversalStorage": function() { return /* reexport safe */ _UniversalStorage__WEBPACK_IMPORTED_MODULE_15__.UniversalStorage; },
/* harmony export */   "Platform": function() { return /* reexport safe */ _Platform__WEBPACK_IMPORTED_MODULE_16__.Platform; },
/* harmony export */   "getAmplifyUserAgent": function() { return /* reexport safe */ _Platform__WEBPACK_IMPORTED_MODULE_16__.getAmplifyUserAgent; },
/* harmony export */   "INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER": function() { return /* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_17__.INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER; },
/* harmony export */   "INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER": function() { return /* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_17__.INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER; },
/* harmony export */   "USER_AGENT_HEADER": function() { return /* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_17__.USER_AGENT_HEADER; },
/* harmony export */   "Constants": function() { return /* binding */ Constants; },
/* harmony export */   "AWS_CLOUDWATCH_BASE_BUFFER_SIZE": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.AWS_CLOUDWATCH_BASE_BUFFER_SIZE; },
/* harmony export */   "AWS_CLOUDWATCH_CATEGORY": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.AWS_CLOUDWATCH_CATEGORY; },
/* harmony export */   "AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE; },
/* harmony export */   "AWS_CLOUDWATCH_MAX_EVENT_SIZE": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.AWS_CLOUDWATCH_MAX_EVENT_SIZE; },
/* harmony export */   "AWS_CLOUDWATCH_PROVIDER_NAME": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.AWS_CLOUDWATCH_PROVIDER_NAME; },
/* harmony export */   "DateUtils": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.DateUtils; },
/* harmony export */   "Mutex": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.Mutex; },
/* harmony export */   "NO_CREDS_ERROR_STRING": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.NO_CREDS_ERROR_STRING; },
/* harmony export */   "NonRetryableError": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.NonRetryableError; },
/* harmony export */   "RETRY_ERROR_CODES": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.RETRY_ERROR_CODES; },
/* harmony export */   "Reachability": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.Reachability; },
/* harmony export */   "jitteredBackoff": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.jitteredBackoff; },
/* harmony export */   "jitteredExponentialRetry": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.jitteredExponentialRetry; },
/* harmony export */   "retry": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.retry; },
/* harmony export */   "urlSafeDecode": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.urlSafeDecode; },
/* harmony export */   "urlSafeEncode": function() { return /* reexport safe */ _Util__WEBPACK_IMPORTED_MODULE_18__.urlSafeEncode; },
/* harmony export */   "Amplify": function() { return /* reexport safe */ _Amplify__WEBPACK_IMPORTED_MODULE_0__.Amplify; }
/* harmony export */ });
/* harmony import */ var _Amplify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Amplify */ 94758);
/* harmony import */ var _Platform__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Platform */ 99433);
/* harmony import */ var _ClientDevice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClientDevice */ 87982);
/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Logger */ 75582);
/* harmony import */ var _Errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Errors */ 69844);
/* harmony import */ var _Hub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Hub */ 20686);
/* harmony import */ var _I18n__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./I18n */ 35216);
/* harmony import */ var _JS__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./JS */ 56722);
/* harmony import */ var _Signer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Signer */ 5824);
/* harmony import */ var _Parser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Parser */ 90118);
/* harmony import */ var _Providers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Providers */ 88734);
/* harmony import */ var _OAuthHelper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./OAuthHelper */ 85362);
/* harmony import */ var _RNComponents__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./RNComponents */ 67231);
/* harmony import */ var _Credentials__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Credentials */ 75001);
/* harmony import */ var _ServiceWorker__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ServiceWorker */ 47509);
/* harmony import */ var _StorageHelper__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./StorageHelper */ 90710);
/* harmony import */ var _UniversalStorage__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./UniversalStorage */ 56811);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./constants */ 24219);
/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./Util */ 40250);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */




















var Constants = {
  userAgent: _Platform__WEBPACK_IMPORTED_MODULE_16__.Platform.userAgent
};



/**
 * @deprecated use named import
 */

/* harmony default export */ __webpack_exports__["default"] = (_Amplify__WEBPACK_IMPORTED_MODULE_0__.Amplify);

/***/ }),

/***/ 88259:
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-amplify/pubsub/lib-esm/Providers/AWSAppSyncProvider.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AWSAppSyncProvider": function() { return /* binding */ AWSAppSyncProvider; }
/* harmony export */ });
/* harmony import */ var zen_observable_ts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zen-observable-ts */ 78638);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _MqttOverWSProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MqttOverWSProvider */ 54215);
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var __read = undefined && undefined.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spread = undefined && undefined.__spread || function () {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read(arguments[i]));
  }

  return ar;
};




var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('AWSAppSyncProvider');

var AWSAppSyncProvider = function (_super) {
  __extends(AWSAppSyncProvider, _super);

  function AWSAppSyncProvider() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this._topicClient = new Map();
    _this._topicAlias = new Map();
    return _this;
  }

  Object.defineProperty(AWSAppSyncProvider.prototype, "endpoint", {
    get: function get() {
      throw new Error('Not supported');
    },
    enumerable: true,
    configurable: true
  });

  AWSAppSyncProvider.prototype.getProviderName = function () {
    return 'AWSAppSyncProvider';
  };

  AWSAppSyncProvider.prototype.publish = function (topics, msg, options) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        throw new Error('Operation not supported');
      });
    });
  };

  AWSAppSyncProvider.prototype._cleanUp = function (clientId) {
    var _this = this;

    var topicsForClient = Array.from(this._topicClient.entries()).filter(function (_a) {
      var _b = __read(_a, 2),
          c = _b[1];

      return c.clientId === clientId;
    }).map(function (_a) {
      var _b = __read(_a, 1),
          t = _b[0];

      return t;
    });
    topicsForClient.forEach(function (t) {
      return _this._cleanUpForTopic(t);
    });
  };

  AWSAppSyncProvider.prototype._cleanUpForTopic = function (topic) {
    this._topicClient.delete(topic);

    this._topicAlias.delete(topic);
  };

  AWSAppSyncProvider.prototype.onDisconnect = function (_a) {
    var _this = this;

    var clientId = _a.clientId,
        errorCode = _a.errorCode,
        args = __rest(_a, ["clientId", "errorCode"]);

    if (errorCode !== 0) {
      var topicsForClient = Array.from(this._topicClient.entries()).filter(function (_a) {
        var _b = __read(_a, 2),
            c = _b[1];

        return c.clientId === clientId;
      }).map(function (_a) {
        var _b = __read(_a, 1),
            t = _b[0];

        return t;
      });
      topicsForClient.forEach(function (topic) {
        if (_this._topicObservers.has(topic)) {
          _this._topicObservers.get(topic).forEach(function (obs) {
            if (!obs.closed) {
              obs.error(args);
            }
          });

          _this._topicObservers.delete(topic);
        }
      });

      this._cleanUp(clientId);
    }
  };

  AWSAppSyncProvider.prototype.disconnect = function (clientId) {
    return __awaiter(this, void 0, void 0, function () {
      var client;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this.clientsQueue.get(clientId, function () {
              return null;
            })];

          case 1:
            client = _a.sent();
            return [4
            /*yield*/
            , _super.prototype.disconnect.call(this, clientId)];

          case 2:
            _a.sent();

            this._cleanUp(clientId);

            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSAppSyncProvider.prototype.subscribe = function (topics, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    var result = new zen_observable_ts__WEBPACK_IMPORTED_MODULE_1__.default(function (observer) {
      var targetTopics = [].concat(topics);
      logger.debug('Subscribing to topic(s)', targetTopics.join(','));

      (function () {
        return __awaiter(_this, void 0, void 0, function () {
          var _a, mqttConnections, newSubscriptions, newAliases, map;

          var _this = this;

          return __generator(this, function (_b) {
            switch (_b.label) {
              case 0:
                // Add these topics to map
                targetTopics.forEach(function (t) {
                  if (!_this._topicObservers.has(t)) {
                    _this._topicObservers.set(t, new Set());
                  }

                  _this._topicObservers.get(t).add(observer);
                });
                _a = options.mqttConnections, mqttConnections = _a === void 0 ? [] : _a, newSubscriptions = options.newSubscriptions;
                newAliases = Object.entries(newSubscriptions).map(function (_a) {
                  var _b = __read(_a, 2),
                      alias = _b[0],
                      v = _b[1];

                  return [v.topic, alias];
                }); // Merge new aliases with old ones

                this._topicAlias = new Map(__spread(Array.from(this._topicAlias.entries()), newAliases));
                map = Object.entries(targetTopics.reduce(function (acc, elem) {
                  var connectionInfoForTopic = mqttConnections.find(function (c) {
                    return c.topics.indexOf(elem) > -1;
                  });

                  if (connectionInfoForTopic) {
                    var clientId = connectionInfoForTopic.client,
                        url = connectionInfoForTopic.url;

                    if (!acc[clientId]) {
                      acc[clientId] = {
                        url: url,
                        topics: new Set()
                      };
                    }

                    acc[clientId].topics.add(elem);
                  }

                  return acc;
                }, {})); // reconnect everything we have in the map

                return [4
                /*yield*/
                , Promise.all(map.map(function (_a) {
                  var _b = __read(_a, 2),
                      clientId = _b[0],
                      _c = _b[1],
                      url = _c.url,
                      topics = _c.topics;

                  return __awaiter(_this, void 0, void 0, function () {
                    var client, err_1;

                    var _this = this;

                    return __generator(this, function (_d) {
                      switch (_d.label) {
                        case 0:
                          client = null;
                          _d.label = 1;

                        case 1:
                          _d.trys.push([1, 3,, 4]);

                          return [4
                          /*yield*/
                          , this.connect(clientId, {
                            clientId: clientId,
                            url: url
                          })];

                        case 2:
                          client = _d.sent();
                          return [3
                          /*break*/
                          , 4];

                        case 3:
                          err_1 = _d.sent();
                          observer.error({
                            message: 'Failed to connect',
                            error: err_1
                          });
                          observer.complete();
                          return [2
                          /*return*/
                          , undefined];

                        case 4:
                          // subscribe to all topics for this client
                          // store topic-client mapping
                          topics.forEach(function (topic) {
                            if (client.isConnected()) {
                              client.subscribe(topic);

                              _this._topicClient.set(topic, client);
                            }
                          });
                          return [2
                          /*return*/
                          , client];
                      }
                    });
                  });
                }))];

              case 1:
                // reconnect everything we have in the map
                _b.sent();

                return [2
                /*return*/
                ];
            }
          });
        });
      })();

      return function () {
        logger.debug('Unsubscribing from topic(s)', targetTopics.join(','));
        targetTopics.forEach(function (t) {
          var client = _this._topicClient.get(t);

          if (client && client.isConnected()) {
            client.unsubscribe(t);

            _this._topicClient.delete(t);

            if (!Array.from(_this._topicClient.values()).some(function (c) {
              return c === client;
            })) {
              _this.disconnect(client.clientId);
            }
          }

          _this._topicObservers.delete(t);
        });
      };
    });
    return zen_observable_ts__WEBPACK_IMPORTED_MODULE_1__.default.from(result).map(function (value) {
      var topic = _this.getTopicForValue(value);

      var alias = _this._topicAlias.get(topic);

      value.data = Object.entries(value.data).reduce(function (obj, _a) {
        var _b = __read(_a, 2),
            origKey = _b[0],
            val = _b[1];

        return obj[alias || origKey] = val, obj;
      }, {});
      return value;
    });
  };

  return AWSAppSyncProvider;
}(_MqttOverWSProvider__WEBPACK_IMPORTED_MODULE_2__.MqttOverWSProvider);



/***/ }),

/***/ 24150:
/*!******************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/pubsub/lib-esm/Providers/AWSAppSyncRealTimeProvider.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AWSAppSyncRealTimeProvider": function() { return /* binding */ AWSAppSyncRealTimeProvider; }
/* harmony export */ });
/* harmony import */ var zen_observable_ts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! zen-observable-ts */ 78638);
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ 60451);
/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ 55627);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ 13918);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! buffer */ 22574);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-amplify/core */ 20686);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @aws-amplify/core */ 24219);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @aws-amplify/core */ 92432);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @aws-amplify/core */ 14212);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @aws-amplify/core */ 75001);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @aws-amplify/core */ 5824);
/* harmony import */ var _aws_amplify_cache__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-amplify/cache */ 68010);
/* harmony import */ var _aws_amplify_auth__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @aws-amplify/auth */ 77391);
/* harmony import */ var _PubSubProvider__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./PubSubProvider */ 81027);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../index */ 2294);
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __read = undefined && undefined.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};
/*
 * Copyright 2017-2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */












var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__.ConsoleLogger('AWSAppSyncRealTimeProvider');
var AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';

var dispatchApiEvent = function dispatchApiEvent(event, data, message) {
  _aws_amplify_core__WEBPACK_IMPORTED_MODULE_5__.Hub.dispatch('api', {
    event: event,
    data: data,
    message: message
  }, 'PubSub', AMPLIFY_SYMBOL);
};

var MAX_DELAY_MS = 5000;
var NON_RETRYABLE_CODES = [400, 401, 403];
var MESSAGE_TYPES;

(function (MESSAGE_TYPES) {
  /**
   * Client -> Server message.
   * This message type is the first message after handshake and this will initialize AWS AppSync RealTime communication
   */
  MESSAGE_TYPES["GQL_CONNECTION_INIT"] = "connection_init";
  /**
   * Server -> Client message
   * This message type is in case there is an issue with AWS AppSync RealTime when establishing connection
   */

  MESSAGE_TYPES["GQL_CONNECTION_ERROR"] = "connection_error";
  /**
   * Server -> Client message.
   * This message type is for the ack response from AWS AppSync RealTime for GQL_CONNECTION_INIT message
   */

  MESSAGE_TYPES["GQL_CONNECTION_ACK"] = "connection_ack";
  /**
   * Client -> Server message.
   * This message type is for register subscriptions with AWS AppSync RealTime
   */

  MESSAGE_TYPES["GQL_START"] = "start";
  /**
   * Server -> Client message.
   * This message type is for the ack response from AWS AppSync RealTime for GQL_START message
   */

  MESSAGE_TYPES["GQL_START_ACK"] = "start_ack";
  /**
   * Server -> Client message.
   * This message type is for subscription message from AWS AppSync RealTime
   */

  MESSAGE_TYPES["GQL_DATA"] = "data";
  /**
   * Server -> Client message.
   * This message type helps the client to know is still receiving messages from AWS AppSync RealTime
   */

  MESSAGE_TYPES["GQL_CONNECTION_KEEP_ALIVE"] = "ka";
  /**
   * Client -> Server message.
   * This message type is for unregister subscriptions with AWS AppSync RealTime
   */

  MESSAGE_TYPES["GQL_STOP"] = "stop";
  /**
   * Server -> Client message.
   * This message type is for the ack response from AWS AppSync RealTime for GQL_STOP message
   */

  MESSAGE_TYPES["GQL_COMPLETE"] = "complete";
  /**
   * Server -> Client message.
   * This message type is for sending error messages from AWS AppSync RealTime to the client
   */

  MESSAGE_TYPES["GQL_ERROR"] = "error";
})(MESSAGE_TYPES || (MESSAGE_TYPES = {}));

var SUBSCRIPTION_STATUS;

(function (SUBSCRIPTION_STATUS) {
  SUBSCRIPTION_STATUS[SUBSCRIPTION_STATUS["PENDING"] = 0] = "PENDING";
  SUBSCRIPTION_STATUS[SUBSCRIPTION_STATUS["CONNECTED"] = 1] = "CONNECTED";
  SUBSCRIPTION_STATUS[SUBSCRIPTION_STATUS["FAILED"] = 2] = "FAILED";
})(SUBSCRIPTION_STATUS || (SUBSCRIPTION_STATUS = {}));

var SOCKET_STATUS;

(function (SOCKET_STATUS) {
  SOCKET_STATUS[SOCKET_STATUS["CLOSED"] = 0] = "CLOSED";
  SOCKET_STATUS[SOCKET_STATUS["READY"] = 1] = "READY";
  SOCKET_STATUS[SOCKET_STATUS["CONNECTING"] = 2] = "CONNECTING";
})(SOCKET_STATUS || (SOCKET_STATUS = {}));

var AWS_APPSYNC_REALTIME_HEADERS = {
  accept: 'application/json, text/javascript',
  'content-encoding': 'amz-1.0',
  'content-type': 'application/json; charset=UTF-8'
};
/**
 * Time in milleseconds to wait for GQL_CONNECTION_INIT message
 */

var CONNECTION_INIT_TIMEOUT = 15000;
/**
 * Time in milleseconds to wait for GQL_START_ACK message
 */

var START_ACK_TIMEOUT = 15000;
/**
 * Default Time in milleseconds to wait for GQL_CONNECTION_KEEP_ALIVE message
 */

var DEFAULT_KEEP_ALIVE_TIMEOUT = 5 * 60 * 1000;
var standardDomainPattern = /^https:\/\/\w{26}\.appsync\-api\.\w{2}(?:(?:\-\w{2,})+)\-\d\.amazonaws.com\/graphql$/i;
var customDomainPath = '/realtime';

var AWSAppSyncRealTimeProvider = function (_super) {
  __extends(AWSAppSyncRealTimeProvider, _super);

  function AWSAppSyncRealTimeProvider() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.socketStatus = SOCKET_STATUS.CLOSED;
    _this.keepAliveTimeout = DEFAULT_KEEP_ALIVE_TIMEOUT;
    _this.subscriptionObserverMap = new Map();
    _this.promiseArray = [];
    return _this;
  }

  AWSAppSyncRealTimeProvider.prototype.getProviderName = function () {
    return 'AWSAppSyncRealTimeProvider';
  };

  AWSAppSyncRealTimeProvider.prototype.newClient = function () {
    throw new Error('Not used here');
  };

  AWSAppSyncRealTimeProvider.prototype.publish = function (_topics, _msg, _options) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        throw new Error('Operation not supported');
      });
    });
  }; // Check if url matches standard domain pattern


  AWSAppSyncRealTimeProvider.prototype.isCustomDomain = function (url) {
    return url.match(standardDomainPattern) === null;
  };

  AWSAppSyncRealTimeProvider.prototype.subscribe = function (_topics, options) {
    var _this = this;

    var appSyncGraphqlEndpoint = options.appSyncGraphqlEndpoint;
    return new zen_observable_ts__WEBPACK_IMPORTED_MODULE_6__.default(function (observer) {
      if (!appSyncGraphqlEndpoint) {
        observer.error({
          errors: [__assign({}, new graphql__WEBPACK_IMPORTED_MODULE_7__.GraphQLError("Subscribe only available for AWS AppSync endpoint"))]
        });
        observer.complete();
      } else {
        var subscriptionId_1 = (0,uuid__WEBPACK_IMPORTED_MODULE_1__.v4)();

        _this._startSubscriptionWithAWSAppSyncRealTime({
          options: options,
          observer: observer,
          subscriptionId: subscriptionId_1
        }).catch(function (err) {
          observer.error({
            errors: [__assign({}, new graphql__WEBPACK_IMPORTED_MODULE_7__.GraphQLError(_index__WEBPACK_IMPORTED_MODULE_8__.CONTROL_MSG.REALTIME_SUBSCRIPTION_INIT_ERROR + ": " + err))]
          });
          observer.complete();
        });

        return function () {
          return __awaiter(_this, void 0, void 0, function () {
            var subscriptionState, err_1;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  _a.trys.push([0, 2, 3, 4]); // Waiting that subscription has been connected before trying to unsubscribe


                  return [4
                  /*yield*/
                  , this._waitForSubscriptionToBeConnected(subscriptionId_1)];

                case 1:
                  // Waiting that subscription has been connected before trying to unsubscribe
                  _a.sent();

                  subscriptionState = (this.subscriptionObserverMap.get(subscriptionId_1) || {}).subscriptionState;

                  if (!subscriptionState) {
                    // subscription already unsubscribed
                    return [2
                    /*return*/
                    ];
                  }

                  if (subscriptionState === SUBSCRIPTION_STATUS.CONNECTED) {
                    this._sendUnsubscriptionMessage(subscriptionId_1);
                  } else {
                    throw new Error('Subscription never connected');
                  }

                  return [3
                  /*break*/
                  , 4];

                case 2:
                  err_1 = _a.sent();
                  logger.debug("Error while unsubscribing " + err_1);
                  return [3
                  /*break*/
                  , 4];

                case 3:
                  this._removeSubscriptionObserver(subscriptionId_1);

                  return [7
                  /*endfinally*/
                  ];

                case 4:
                  return [2
                  /*return*/
                  ];
              }
            });
          });
        };
      }
    });
  };

  Object.defineProperty(AWSAppSyncRealTimeProvider.prototype, "isSSLEnabled", {
    get: function get() {
      return !this.options.aws_appsync_dangerously_connect_to_http_endpoint_for_testing;
    },
    enumerable: true,
    configurable: true
  });

  AWSAppSyncRealTimeProvider.prototype._startSubscriptionWithAWSAppSyncRealTime = function (_a) {
    var options = _a.options,
        observer = _a.observer,
        subscriptionId = _a.subscriptionId;
    return __awaiter(this, void 0, void 0, function () {
      var appSyncGraphqlEndpoint, authenticationType, query, variables, apiKey, region, _b, graphql_headers, _c, additionalHeaders, subscriptionState, data, dataString, headerObj, _d, _e, subscriptionMessage, stringToAWSRealTime, err_2, _f, message, subscriptionFailedCallback_1, _g, subscriptionFailedCallback, subscriptionReadyCallback;

      var _h;

      var _this = this;

      return __generator(this, function (_j) {
        switch (_j.label) {
          case 0:
            appSyncGraphqlEndpoint = options.appSyncGraphqlEndpoint, authenticationType = options.authenticationType, query = options.query, variables = options.variables, apiKey = options.apiKey, region = options.region, _b = options.graphql_headers, graphql_headers = _b === void 0 ? function () {
              return {};
            } : _b, _c = options.additionalHeaders, additionalHeaders = _c === void 0 ? {} : _c;
            subscriptionState = SUBSCRIPTION_STATUS.PENDING;
            data = {
              query: query,
              variables: variables
            }; // Having a subscription id map will make it simple to forward messages received

            this.subscriptionObserverMap.set(subscriptionId, {
              observer: observer,
              query: query,
              variables: variables,
              subscriptionState: subscriptionState,
              startAckTimeoutId: null
            });
            dataString = JSON.stringify(data);
            _d = [{}];
            return [4
            /*yield*/
            , this._awsRealTimeHeaderBasedAuth({
              apiKey: apiKey,
              appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,
              authenticationType: authenticationType,
              payload: dataString,
              canonicalUri: '',
              region: region,
              additionalHeaders: additionalHeaders
            })];

          case 1:
            _e = [__assign.apply(void 0, _d.concat([_j.sent()]))];
            return [4
            /*yield*/
            , graphql_headers()];

          case 2:
            headerObj = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), additionalHeaders]), (_h = {}, _h[_aws_amplify_core__WEBPACK_IMPORTED_MODULE_9__.USER_AGENT_HEADER] = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_10__.Constants.userAgent, _h)]);
            subscriptionMessage = {
              id: subscriptionId,
              payload: {
                data: dataString,
                extensions: {
                  authorization: __assign({}, headerObj)
                }
              },
              type: MESSAGE_TYPES.GQL_START
            };
            stringToAWSRealTime = JSON.stringify(subscriptionMessage);
            _j.label = 3;

          case 3:
            _j.trys.push([3, 5,, 6]);

            return [4
            /*yield*/
            , this._initializeWebSocketConnection({
              apiKey: apiKey,
              appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,
              authenticationType: authenticationType,
              region: region,
              additionalHeaders: additionalHeaders
            })];

          case 4:
            _j.sent();

            return [3
            /*break*/
            , 6];

          case 5:
            err_2 = _j.sent();
            logger.debug({
              err: err_2
            });
            _f = err_2.message, message = _f === void 0 ? '' : _f;
            observer.error({
              errors: [__assign({}, new graphql__WEBPACK_IMPORTED_MODULE_7__.GraphQLError(_index__WEBPACK_IMPORTED_MODULE_8__.CONTROL_MSG.CONNECTION_FAILED + ": " + message))]
            });
            observer.complete();
            subscriptionFailedCallback_1 = (this.subscriptionObserverMap.get(subscriptionId) || {}).subscriptionFailedCallback; // Notify concurrent unsubscription

            if (typeof subscriptionFailedCallback_1 === 'function') {
              subscriptionFailedCallback_1();
            }

            return [2
            /*return*/
            ];

          case 6:
            _g = this.subscriptionObserverMap.get(subscriptionId), subscriptionFailedCallback = _g.subscriptionFailedCallback, subscriptionReadyCallback = _g.subscriptionReadyCallback; // This must be done before sending the message in order to be listening immediately

            this.subscriptionObserverMap.set(subscriptionId, {
              observer: observer,
              subscriptionState: subscriptionState,
              variables: variables,
              query: query,
              subscriptionReadyCallback: subscriptionReadyCallback,
              subscriptionFailedCallback: subscriptionFailedCallback,
              startAckTimeoutId: setTimeout(function () {
                _this._timeoutStartSubscriptionAck.call(_this, subscriptionId);
              }, START_ACK_TIMEOUT)
            });

            if (this.awsRealTimeSocket) {
              this.awsRealTimeSocket.send(stringToAWSRealTime);
            }

            return [2
            /*return*/
            ];
        }
      });
    });
  }; // Waiting that subscription has been connected before trying to unsubscribe


  AWSAppSyncRealTimeProvider.prototype._waitForSubscriptionToBeConnected = function (subscriptionId) {
    return __awaiter(this, void 0, void 0, function () {
      var subscriptionState;

      var _this = this;

      return __generator(this, function (_a) {
        subscriptionState = this.subscriptionObserverMap.get(subscriptionId).subscriptionState; // This in case unsubscribe is invoked before sending start subscription message

        if (subscriptionState === SUBSCRIPTION_STATUS.PENDING) {
          return [2
          /*return*/
          , new Promise(function (res, rej) {
            var _a = _this.subscriptionObserverMap.get(subscriptionId),
                observer = _a.observer,
                subscriptionState = _a.subscriptionState,
                variables = _a.variables,
                query = _a.query;

            _this.subscriptionObserverMap.set(subscriptionId, {
              observer: observer,
              subscriptionState: subscriptionState,
              variables: variables,
              query: query,
              subscriptionReadyCallback: res,
              subscriptionFailedCallback: rej
            });
          })];
        }

        return [2
        /*return*/
        ];
      });
    });
  };

  AWSAppSyncRealTimeProvider.prototype._sendUnsubscriptionMessage = function (subscriptionId) {
    try {
      if (this.awsRealTimeSocket && this.awsRealTimeSocket.readyState === WebSocket.OPEN && this.socketStatus === SOCKET_STATUS.READY) {
        // Preparing unsubscribe message to stop receiving messages for that subscription
        var unsubscribeMessage = {
          id: subscriptionId,
          type: MESSAGE_TYPES.GQL_STOP
        };
        var stringToAWSRealTime = JSON.stringify(unsubscribeMessage);
        this.awsRealTimeSocket.send(stringToAWSRealTime);
      }
    } catch (err) {
      // If GQL_STOP is not sent because of disconnection issue, then there is nothing the client can do
      logger.debug({
        err: err
      });
    }
  };

  AWSAppSyncRealTimeProvider.prototype._removeSubscriptionObserver = function (subscriptionId) {
    this.subscriptionObserverMap.delete(subscriptionId); // Verifying 1000ms after removing subscription in case there are new subscription unmount/mount

    setTimeout(this._closeSocketIfRequired.bind(this), 1000);
  };

  AWSAppSyncRealTimeProvider.prototype._closeSocketIfRequired = function () {
    if (this.subscriptionObserverMap.size > 0) {
      // Active subscriptions on the WebSocket
      return;
    }

    if (!this.awsRealTimeSocket) {
      this.socketStatus = SOCKET_STATUS.CLOSED;
      return;
    }

    if (this.awsRealTimeSocket.bufferedAmount > 0) {
      // Still data on the WebSocket
      setTimeout(this._closeSocketIfRequired.bind(this), 1000);
    } else {
      logger.debug('closing WebSocket...');
      clearTimeout(this.keepAliveTimeoutId);
      var tempSocket = this.awsRealTimeSocket; // Cleaning callbacks to avoid race condition, socket still exists

      tempSocket.onclose = undefined;
      tempSocket.onerror = undefined;
      tempSocket.close(1000);
      this.awsRealTimeSocket = null;
      this.socketStatus = SOCKET_STATUS.CLOSED;
    }
  };

  AWSAppSyncRealTimeProvider.prototype._handleIncomingSubscriptionMessage = function (message) {
    logger.debug("subscription message from AWS AppSync RealTime: " + message.data);

    var _a = JSON.parse(message.data),
        _b = _a.id,
        id = _b === void 0 ? '' : _b,
        payload = _a.payload,
        type = _a.type;

    var _c = this.subscriptionObserverMap.get(id) || {},
        _d = _c.observer,
        observer = _d === void 0 ? null : _d,
        _e = _c.query,
        query = _e === void 0 ? '' : _e,
        _f = _c.variables,
        variables = _f === void 0 ? {} : _f,
        startAckTimeoutId = _c.startAckTimeoutId,
        subscriptionReadyCallback = _c.subscriptionReadyCallback,
        subscriptionFailedCallback = _c.subscriptionFailedCallback;

    logger.debug({
      id: id,
      observer: observer,
      query: query,
      variables: variables
    });

    if (type === MESSAGE_TYPES.GQL_DATA && payload && payload.data) {
      if (observer) {
        observer.next(payload);
      } else {
        logger.debug("observer not found for id: " + id);
      }

      return;
    }

    if (type === MESSAGE_TYPES.GQL_START_ACK) {
      logger.debug("subscription ready for " + JSON.stringify({
        query: query,
        variables: variables
      }));

      if (typeof subscriptionReadyCallback === 'function') {
        subscriptionReadyCallback();
      }

      clearTimeout(startAckTimeoutId);
      dispatchApiEvent(_index__WEBPACK_IMPORTED_MODULE_8__.CONTROL_MSG.SUBSCRIPTION_ACK, {
        query: query,
        variables: variables
      }, 'Connection established for subscription');
      var subscriptionState = SUBSCRIPTION_STATUS.CONNECTED;
      this.subscriptionObserverMap.set(id, {
        observer: observer,
        query: query,
        variables: variables,
        startAckTimeoutId: null,
        subscriptionState: subscriptionState,
        subscriptionReadyCallback: subscriptionReadyCallback,
        subscriptionFailedCallback: subscriptionFailedCallback
      }); // TODO: emit event on hub but it requires to store the id first

      return;
    }

    if (type === MESSAGE_TYPES.GQL_CONNECTION_KEEP_ALIVE) {
      clearTimeout(this.keepAliveTimeoutId);
      this.keepAliveTimeoutId = setTimeout(this._errorDisconnect.bind(this, _index__WEBPACK_IMPORTED_MODULE_8__.CONTROL_MSG.TIMEOUT_DISCONNECT), this.keepAliveTimeout);
      return;
    }

    if (type === MESSAGE_TYPES.GQL_ERROR) {
      var subscriptionState = SUBSCRIPTION_STATUS.FAILED;
      this.subscriptionObserverMap.set(id, {
        observer: observer,
        query: query,
        variables: variables,
        startAckTimeoutId: startAckTimeoutId,
        subscriptionReadyCallback: subscriptionReadyCallback,
        subscriptionFailedCallback: subscriptionFailedCallback,
        subscriptionState: subscriptionState
      });
      observer.error({
        errors: [__assign({}, new graphql__WEBPACK_IMPORTED_MODULE_7__.GraphQLError(_index__WEBPACK_IMPORTED_MODULE_8__.CONTROL_MSG.CONNECTION_FAILED + ": " + JSON.stringify(payload)))]
      });
      clearTimeout(startAckTimeoutId);
      observer.complete();

      if (typeof subscriptionFailedCallback === 'function') {
        subscriptionFailedCallback();
      }
    }
  };

  AWSAppSyncRealTimeProvider.prototype._errorDisconnect = function (msg) {
    logger.debug("Disconnect error: " + msg);
    this.subscriptionObserverMap.forEach(function (_a) {
      var observer = _a.observer;

      if (observer && !observer.closed) {
        observer.error({
          errors: [__assign({}, new graphql__WEBPACK_IMPORTED_MODULE_7__.GraphQLError(msg))]
        });
      }
    });
    this.subscriptionObserverMap.clear();

    if (this.awsRealTimeSocket) {
      this.awsRealTimeSocket.close();
    }

    this.socketStatus = SOCKET_STATUS.CLOSED;
  };

  AWSAppSyncRealTimeProvider.prototype._timeoutStartSubscriptionAck = function (subscriptionId) {
    var _a = this.subscriptionObserverMap.get(subscriptionId) || {},
        observer = _a.observer,
        query = _a.query,
        variables = _a.variables;

    if (!observer) {
      return;
    }

    this.subscriptionObserverMap.set(subscriptionId, {
      observer: observer,
      query: query,
      variables: variables,
      subscriptionState: SUBSCRIPTION_STATUS.FAILED
    });

    if (observer && !observer.closed) {
      observer.error({
        errors: [__assign({}, new graphql__WEBPACK_IMPORTED_MODULE_7__.GraphQLError("Subscription timeout " + JSON.stringify({
          query: query,
          variables: variables
        })))]
      }); // Cleanup will be automatically executed

      observer.complete();
    }

    logger.debug('timeoutStartSubscription', JSON.stringify({
      query: query,
      variables: variables
    }));
  };

  AWSAppSyncRealTimeProvider.prototype._initializeWebSocketConnection = function (_a) {
    var _this = this;

    var appSyncGraphqlEndpoint = _a.appSyncGraphqlEndpoint,
        authenticationType = _a.authenticationType,
        apiKey = _a.apiKey,
        region = _a.region,
        additionalHeaders = _a.additionalHeaders;

    if (this.socketStatus === SOCKET_STATUS.READY) {
      return;
    }

    return new Promise(function (res, rej) {
      return __awaiter(_this, void 0, void 0, function () {
        var payloadString, headerString, _a, _b, headerQs, payloadQs, discoverableEndpoint, protocol, awsRealTimeUrl, err_3;

        return __generator(this, function (_c) {
          switch (_c.label) {
            case 0:
              this.promiseArray.push({
                res: res,
                rej: rej
              });
              if (!(this.socketStatus === SOCKET_STATUS.CLOSED)) return [3
              /*break*/
              , 5];
              _c.label = 1;

            case 1:
              _c.trys.push([1, 4,, 5]);

              this.socketStatus = SOCKET_STATUS.CONNECTING;
              payloadString = '{}';
              _b = (_a = JSON).stringify;
              return [4
              /*yield*/
              , this._awsRealTimeHeaderBasedAuth({
                authenticationType: authenticationType,
                payload: payloadString,
                canonicalUri: '/connect',
                apiKey: apiKey,
                appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,
                region: region,
                additionalHeaders: additionalHeaders
              })];

            case 2:
              headerString = _b.apply(_a, [_c.sent()]);
              headerQs = buffer__WEBPACK_IMPORTED_MODULE_2__.Buffer.from(headerString).toString('base64');
              payloadQs = buffer__WEBPACK_IMPORTED_MODULE_2__.Buffer.from(payloadString).toString('base64');
              discoverableEndpoint = appSyncGraphqlEndpoint;

              if (this.isCustomDomain(discoverableEndpoint)) {
                discoverableEndpoint = discoverableEndpoint.concat(customDomainPath);
              } else {
                discoverableEndpoint = discoverableEndpoint.replace('appsync-api', 'appsync-realtime-api').replace('gogi-beta', 'grt-beta');
              }

              protocol = this.isSSLEnabled ? 'wss://' : 'ws://';
              discoverableEndpoint = discoverableEndpoint.replace('https://', protocol).replace('http://', protocol);
              awsRealTimeUrl = discoverableEndpoint + "?header=" + headerQs + "&payload=" + payloadQs;
              return [4
              /*yield*/
              , this._initializeRetryableHandshake({
                awsRealTimeUrl: awsRealTimeUrl
              })];

            case 3:
              _c.sent();

              this.promiseArray.forEach(function (_a) {
                var res = _a.res;
                logger.debug('Notifying connection successful');
                res();
              });
              this.socketStatus = SOCKET_STATUS.READY;
              this.promiseArray = [];
              return [3
              /*break*/
              , 5];

            case 4:
              err_3 = _c.sent();
              this.promiseArray.forEach(function (_a) {
                var rej = _a.rej;
                return rej(err_3);
              });
              this.promiseArray = [];

              if (this.awsRealTimeSocket && this.awsRealTimeSocket.readyState === WebSocket.OPEN) {
                this.awsRealTimeSocket.close(3001);
              }

              this.awsRealTimeSocket = null;
              this.socketStatus = SOCKET_STATUS.CLOSED;
              return [3
              /*break*/
              , 5];

            case 5:
              return [2
              /*return*/
              ];
          }
        });
      });
    });
  };

  AWSAppSyncRealTimeProvider.prototype._initializeRetryableHandshake = function (_a) {
    var awsRealTimeUrl = _a.awsRealTimeUrl;
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            logger.debug("Initializaling retryable Handshake");
            return [4
            /*yield*/
            , (0,_aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__.jitteredExponentialRetry)(this._initializeHandshake.bind(this), [{
              awsRealTimeUrl: awsRealTimeUrl
            }], MAX_DELAY_MS)];

          case 1:
            _b.sent();

            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSAppSyncRealTimeProvider.prototype._initializeHandshake = function (_a) {
    var awsRealTimeUrl = _a.awsRealTimeUrl;
    return __awaiter(this, void 0, void 0, function () {
      var err_4, errorType, errorCode;

      var _this = this;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            logger.debug("Initializing handshake " + awsRealTimeUrl);
            _b.label = 1;

          case 1:
            _b.trys.push([1, 4,, 5]);

            return [4
            /*yield*/
            , function () {
              return new Promise(function (res, rej) {
                var newSocket = new WebSocket(awsRealTimeUrl, 'graphql-ws');

                newSocket.onerror = function () {
                  logger.debug("WebSocket connection error");
                };

                newSocket.onclose = function () {
                  rej(new Error('Connection handshake error'));
                };

                newSocket.onopen = function () {
                  _this.awsRealTimeSocket = newSocket;
                  return res();
                };
              });
            }()];

          case 2:
            _b.sent(); // Step 2: wait for ack from AWS AppSyncReaTime after sending init


            return [4
            /*yield*/
            , function () {
              return new Promise(function (res, rej) {
                var ackOk = false;

                _this.awsRealTimeSocket.onerror = function (error) {
                  logger.debug("WebSocket error " + JSON.stringify(error));
                };

                _this.awsRealTimeSocket.onclose = function (event) {
                  logger.debug("WebSocket closed " + event.reason);
                  rej(new Error(JSON.stringify(event)));
                };

                _this.awsRealTimeSocket.onmessage = function (message) {
                  logger.debug("subscription message from AWS AppSyncRealTime: " + message.data + " ");
                  var data = JSON.parse(message.data);
                  var type = data.type,
                      _a = data.payload,
                      _b = (_a === void 0 ? {} : _a).connectionTimeoutMs,
                      connectionTimeoutMs = _b === void 0 ? DEFAULT_KEEP_ALIVE_TIMEOUT : _b;

                  if (type === MESSAGE_TYPES.GQL_CONNECTION_ACK) {
                    ackOk = true;
                    _this.keepAliveTimeout = connectionTimeoutMs;
                    _this.awsRealTimeSocket.onmessage = _this._handleIncomingSubscriptionMessage.bind(_this);

                    _this.awsRealTimeSocket.onerror = function (err) {
                      logger.debug(err);

                      _this._errorDisconnect(_index__WEBPACK_IMPORTED_MODULE_8__.CONTROL_MSG.CONNECTION_CLOSED);
                    };

                    _this.awsRealTimeSocket.onclose = function (event) {
                      logger.debug("WebSocket closed " + event.reason);

                      _this._errorDisconnect(_index__WEBPACK_IMPORTED_MODULE_8__.CONTROL_MSG.CONNECTION_CLOSED);
                    };

                    res('Cool, connected to AWS AppSyncRealTime');
                    return;
                  }

                  if (type === MESSAGE_TYPES.GQL_CONNECTION_ERROR) {
                    var _c = data.payload,
                        _d = (_c === void 0 ? {} : _c).errors,
                        _e = __read(_d === void 0 ? [] : _d, 1),
                        _f = _e[0],
                        _g = _f === void 0 ? {} : _f,
                        _h = _g.errorType,
                        errorType = _h === void 0 ? '' : _h,
                        _j = _g.errorCode,
                        errorCode = _j === void 0 ? 0 : _j;

                    rej({
                      errorType: errorType,
                      errorCode: errorCode
                    });
                  }
                };

                var gqlInit = {
                  type: MESSAGE_TYPES.GQL_CONNECTION_INIT
                };

                _this.awsRealTimeSocket.send(JSON.stringify(gqlInit));

                function checkAckOk() {
                  if (!ackOk) {
                    rej(new Error("Connection timeout: ack from AWSRealTime was not received on " + CONNECTION_INIT_TIMEOUT + " ms"));
                  }
                }

                setTimeout(checkAckOk.bind(_this), CONNECTION_INIT_TIMEOUT);
              });
            }()];

          case 3:
            // Step 2: wait for ack from AWS AppSyncReaTime after sending init
            _b.sent();

            return [3
            /*break*/
            , 5];

          case 4:
            err_4 = _b.sent();
            errorType = err_4.errorType, errorCode = err_4.errorCode;

            if (NON_RETRYABLE_CODES.includes(errorCode)) {
              throw new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__.NonRetryableError(errorType);
            } else if (errorType) {
              throw new Error(errorType);
            } else {
              throw err_4;
            }

            return [3
            /*break*/
            , 5];

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSAppSyncRealTimeProvider.prototype._awsRealTimeHeaderBasedAuth = function (_a) {
    var authenticationType = _a.authenticationType,
        payload = _a.payload,
        canonicalUri = _a.canonicalUri,
        appSyncGraphqlEndpoint = _a.appSyncGraphqlEndpoint,
        apiKey = _a.apiKey,
        region = _a.region,
        additionalHeaders = _a.additionalHeaders;
    return __awaiter(this, void 0, void 0, function () {
      var headerHandler, handler, host, result;
      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            headerHandler = {
              API_KEY: this._awsRealTimeApiKeyHeader.bind(this),
              AWS_IAM: this._awsRealTimeIAMHeader.bind(this),
              OPENID_CONNECT: this._awsRealTimeOPENIDHeader.bind(this),
              AMAZON_COGNITO_USER_POOLS: this._awsRealTimeCUPHeader.bind(this),
              AWS_LAMBDA: this._customAuthHeader
            };
            handler = headerHandler[authenticationType];

            if (typeof handler !== 'function') {
              logger.debug("Authentication type " + authenticationType + " not supported");
              return [2
              /*return*/
              , ''];
            }

            host = url__WEBPACK_IMPORTED_MODULE_0__.parse(appSyncGraphqlEndpoint).host;
            return [4
            /*yield*/
            , handler({
              payload: payload,
              canonicalUri: canonicalUri,
              appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,
              apiKey: apiKey,
              region: region,
              host: host,
              additionalHeaders: additionalHeaders
            })];

          case 1:
            result = _b.sent();
            return [2
            /*return*/
            , result];
        }
      });
    });
  };

  AWSAppSyncRealTimeProvider.prototype._awsRealTimeCUPHeader = function (_a) {
    var host = _a.host;
    return __awaiter(this, void 0, void 0, function () {
      var session;
      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            return [4
            /*yield*/
            , _aws_amplify_auth__WEBPACK_IMPORTED_MODULE_12__.default.currentSession()];

          case 1:
            session = _b.sent();
            return [2
            /*return*/
            , {
              Authorization: session.getAccessToken().getJwtToken(),
              host: host
            }];
        }
      });
    });
  };

  AWSAppSyncRealTimeProvider.prototype._awsRealTimeOPENIDHeader = function (_a) {
    var host = _a.host;
    return __awaiter(this, void 0, void 0, function () {
      var token, federatedInfo, currentUser;
      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            return [4
            /*yield*/
            , _aws_amplify_cache__WEBPACK_IMPORTED_MODULE_3__.default.getItem('federatedInfo')];

          case 1:
            federatedInfo = _b.sent();
            if (!federatedInfo) return [3
            /*break*/
            , 2];
            token = federatedInfo.token;
            return [3
            /*break*/
            , 4];

          case 2:
            return [4
            /*yield*/
            , _aws_amplify_auth__WEBPACK_IMPORTED_MODULE_12__.default.currentAuthenticatedUser()];

          case 3:
            currentUser = _b.sent();

            if (currentUser) {
              token = currentUser.token;
            }

            _b.label = 4;

          case 4:
            if (!token) {
              throw new Error('No federated jwt');
            }

            return [2
            /*return*/
            , {
              Authorization: token,
              host: host
            }];
        }
      });
    });
  };

  AWSAppSyncRealTimeProvider.prototype._awsRealTimeApiKeyHeader = function (_a) {
    var apiKey = _a.apiKey,
        host = _a.host;
    return __awaiter(this, void 0, void 0, function () {
      var dt, dtStr;
      return __generator(this, function (_b) {
        dt = new Date();
        dtStr = dt.toISOString().replace(/[:\-]|\.\d{3}/g, '');
        return [2
        /*return*/
        , {
          host: host,
          'x-amz-date': dtStr,
          'x-api-key': apiKey
        }];
      });
    });
  };

  AWSAppSyncRealTimeProvider.prototype._awsRealTimeIAMHeader = function (_a) {
    var payload = _a.payload,
        canonicalUri = _a.canonicalUri,
        appSyncGraphqlEndpoint = _a.appSyncGraphqlEndpoint,
        region = _a.region;
    return __awaiter(this, void 0, void 0, function () {
      var endpointInfo, credentialsOK, creds, request, signed_params;
      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            endpointInfo = {
              region: region,
              service: 'appsync'
            };
            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 1:
            credentialsOK = _b.sent();

            if (!credentialsOK) {
              throw new Error('No credentials');
            }

            return [4
            /*yield*/
            , _aws_amplify_core__WEBPACK_IMPORTED_MODULE_13__.Credentials.get().then(function (credentials) {
              return {
                secret_key: credentials.secretAccessKey,
                access_key: credentials.accessKeyId,
                session_token: credentials.sessionToken
              };
            })];

          case 2:
            creds = _b.sent();
            request = {
              url: "" + appSyncGraphqlEndpoint + canonicalUri,
              data: payload,
              method: 'POST',
              headers: __assign({}, AWS_APPSYNC_REALTIME_HEADERS)
            };
            signed_params = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_14__.Signer.sign(request, creds, endpointInfo);
            return [2
            /*return*/
            , signed_params.headers];
        }
      });
    });
  };

  AWSAppSyncRealTimeProvider.prototype._customAuthHeader = function (_a) {
    var host = _a.host,
        additionalHeaders = _a.additionalHeaders;

    if (!additionalHeaders.Authorization) {
      throw new Error('No auth token specified');
    }

    return {
      Authorization: additionalHeaders.Authorization,
      host: host
    };
  };
  /**
   * @private
   */


  AWSAppSyncRealTimeProvider.prototype._ensureCredentials = function () {
    return _aws_amplify_core__WEBPACK_IMPORTED_MODULE_13__.Credentials.get().then(function (credentials) {
      if (!credentials) return false;
      var cred = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_13__.Credentials.shear(credentials);
      logger.debug('set credentials for AWSAppSyncRealTimeProvider', cred);
      return true;
    }).catch(function (err) {
      logger.warn('ensure credentials error', err);
      return false;
    });
  };

  return AWSAppSyncRealTimeProvider;
}(_PubSubProvider__WEBPACK_IMPORTED_MODULE_15__.AbstractPubSubProvider);



/***/ }),

/***/ 19304:
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-amplify/pubsub/lib-esm/Providers/AWSIotProvider.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AWSIoTProvider": function() { return /* binding */ AWSIoTProvider; }
/* harmony export */ });
/* harmony import */ var _MqttOverWSProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MqttOverWSProvider */ 54215);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 75001);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-amplify/core */ 5824);
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};
/*
 * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */




var SERVICE_NAME = 'iotdevicegateway';

var AWSIoTProvider = function (_super) {
  __extends(AWSIoTProvider, _super);

  function AWSIoTProvider() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Object.defineProperty(AWSIoTProvider.prototype, "region", {
    get: function get() {
      return this.options.aws_pubsub_region;
    },
    enumerable: true,
    configurable: true
  });

  AWSIoTProvider.prototype.getProviderName = function () {
    return 'AWSIoTProvider';
  };

  Object.defineProperty(AWSIoTProvider.prototype, "endpoint", {
    get: function get() {
      var _this = this;

      return function () {
        return __awaiter(_this, void 0, void 0, function () {
          var endpoint, serviceInfo, _a, access_key, secret_key, session_token, result;

          return __generator(this, function (_b) {
            switch (_b.label) {
              case 0:
                endpoint = this.options.aws_pubsub_endpoint;
                serviceInfo = {
                  service: SERVICE_NAME,
                  region: this.region
                };
                return [4
                /*yield*/
                , _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.Credentials.get()];

              case 1:
                _a = _b.sent(), access_key = _a.accessKeyId, secret_key = _a.secretAccessKey, session_token = _a.sessionToken;
                result = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.Signer.signUrl(endpoint, {
                  access_key: access_key,
                  secret_key: secret_key,
                  session_token: session_token
                }, serviceInfo);
                return [2
                /*return*/
                , result];
            }
          });
        });
      }();
    },
    enumerable: true,
    configurable: true
  });
  return AWSIoTProvider;
}(_MqttOverWSProvider__WEBPACK_IMPORTED_MODULE_2__.MqttOverWSProvider);



/***/ }),

/***/ 54215:
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-amplify/pubsub/lib-esm/Providers/MqttOverWSProvider.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mqttTopicMatch": function() { return /* binding */ mqttTopicMatch; },
/* harmony export */   "MqttOverWSProvider": function() { return /* binding */ MqttOverWSProvider; }
/* harmony export */ });
/* harmony import */ var paho_mqtt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! paho-mqtt */ 68630);
/* harmony import */ var paho_mqtt__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(paho_mqtt__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ 13918);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var zen_observable_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! zen-observable-ts */ 78638);
/* harmony import */ var _PubSubProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PubSubProvider */ 81027);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
/*
 * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */







var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__.ConsoleLogger('MqttOverWSProvider');
function mqttTopicMatch(filter, topic) {
  var filterArray = filter.split('/');
  var length = filterArray.length;
  var topicArray = topic.split('/');

  for (var i = 0; i < length; ++i) {
    var left = filterArray[i];
    var right = topicArray[i];
    if (left === '#') return topicArray.length >= length;
    if (left !== '+' && left !== right) return false;
  }

  return length === topicArray.length;
}

var ClientsQueue = function () {
  function ClientsQueue() {
    this.promises = new Map();
  }

  ClientsQueue.prototype.get = function (clientId, clientFactory) {
    return __awaiter(this, void 0, void 0, function () {
      var promise;
      return __generator(this, function (_a) {
        promise = this.promises.get(clientId);

        if (promise) {
          return [2
          /*return*/
          , promise];
        }

        promise = clientFactory(clientId);
        this.promises.set(clientId, promise);
        return [2
        /*return*/
        , promise];
      });
    });
  };

  Object.defineProperty(ClientsQueue.prototype, "allClients", {
    get: function get() {
      return Array.from(this.promises.keys());
    },
    enumerable: true,
    configurable: true
  });

  ClientsQueue.prototype.remove = function (clientId) {
    this.promises.delete(clientId);
  };

  return ClientsQueue;
}();

var topicSymbol = typeof Symbol !== 'undefined' ? Symbol('topic') : '@@topic';

var MqttOverWSProvider = function (_super) {
  __extends(MqttOverWSProvider, _super);

  function MqttOverWSProvider(options) {
    if (options === void 0) {
      options = {};
    }

    var _this = _super.call(this, __assign(__assign({}, options), {
      clientId: options.clientId || (0,uuid__WEBPACK_IMPORTED_MODULE_1__.v4)()
    })) || this;

    _this._clientsQueue = new ClientsQueue();
    _this._topicObservers = new Map();
    _this._clientIdObservers = new Map();
    return _this;
  }

  Object.defineProperty(MqttOverWSProvider.prototype, "clientId", {
    get: function get() {
      return this.options.clientId;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(MqttOverWSProvider.prototype, "endpoint", {
    get: function get() {
      return this.options.aws_pubsub_endpoint;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(MqttOverWSProvider.prototype, "clientsQueue", {
    get: function get() {
      return this._clientsQueue;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(MqttOverWSProvider.prototype, "isSSLEnabled", {
    get: function get() {
      return !this.options.aws_appsync_dangerously_connect_to_http_endpoint_for_testing;
    },
    enumerable: true,
    configurable: true
  });

  MqttOverWSProvider.prototype.getTopicForValue = function (value) {
    return typeof value === 'object' && value[topicSymbol];
  };

  MqttOverWSProvider.prototype.getProviderName = function () {
    return 'MqttOverWSProvider';
  };

  MqttOverWSProvider.prototype.onDisconnect = function (_a) {
    var _this = this;

    var clientId = _a.clientId,
        errorCode = _a.errorCode,
        args = __rest(_a, ["clientId", "errorCode"]);

    if (errorCode !== 0) {
      logger.warn(clientId, JSON.stringify(__assign({
        errorCode: errorCode
      }, args), null, 2));
      var topicsToDelete_1 = [];

      var clientIdObservers = this._clientIdObservers.get(clientId);

      if (!clientIdObservers) {
        return;
      }

      clientIdObservers.forEach(function (observer) {
        observer.error('Disconnected, error code: ' + errorCode); // removing observers for disconnected clientId

        _this._topicObservers.forEach(function (observerForTopic, observerTopic) {
          observerForTopic.delete(observer);

          if (observerForTopic.size === 0) {
            topicsToDelete_1.push(observerTopic);
          }
        });
      }); // forgiving any trace of clientId

      this._clientIdObservers.delete(clientId); // Removing topics that are not listen by an observer


      topicsToDelete_1.forEach(function (topic) {
        _this._topicObservers.delete(topic);
      });
    }
  };

  MqttOverWSProvider.prototype.newClient = function (_a) {
    var url = _a.url,
        clientId = _a.clientId;
    return __awaiter(this, void 0, void 0, function () {
      var client;

      var _this = this;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            logger.debug('Creating new MQTT client', clientId);
            client = new paho_mqtt__WEBPACK_IMPORTED_MODULE_0__.Client(url, clientId); // client.trace = (args) => logger.debug(clientId, JSON.stringify(args, null, 2));

            client.onMessageArrived = function (_a) {
              var topic = _a.destinationName,
                  msg = _a.payloadString;

              _this._onMessage(topic, msg);
            };

            client.onConnectionLost = function (_a) {
              var errorCode = _a.errorCode,
                  args = __rest(_a, ["errorCode"]);

              _this.onDisconnect(__assign({
                clientId: clientId,
                errorCode: errorCode
              }, args));
            };

            return [4
            /*yield*/
            , new Promise(function (resolve, reject) {
              client.connect({
                useSSL: _this.isSSLEnabled,
                mqttVersion: 3,
                onSuccess: function onSuccess() {
                  return resolve(client);
                },
                onFailure: reject
              });
            })];

          case 1:
            _b.sent();

            return [2
            /*return*/
            , client];
        }
      });
    });
  };

  MqttOverWSProvider.prototype.connect = function (clientId, options) {
    if (options === void 0) {
      options = {};
    }

    return __awaiter(this, void 0, void 0, function () {
      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this.clientsQueue.get(clientId, function (clientId) {
              return _this.newClient(__assign(__assign({}, options), {
                clientId: clientId
              }));
            })];

          case 1:
            return [2
            /*return*/
            , _a.sent()];
        }
      });
    });
  };

  MqttOverWSProvider.prototype.disconnect = function (clientId) {
    return __awaiter(this, void 0, void 0, function () {
      var client;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this.clientsQueue.get(clientId, function () {
              return null;
            })];

          case 1:
            client = _a.sent();

            if (client && client.isConnected()) {
              client.disconnect();
            }

            this.clientsQueue.remove(clientId);
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  MqttOverWSProvider.prototype.publish = function (topics, msg) {
    return __awaiter(this, void 0, void 0, function () {
      var targetTopics, message, url, client;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            targetTopics = [].concat(topics);
            message = JSON.stringify(msg);
            return [4
            /*yield*/
            , this.endpoint];

          case 1:
            url = _a.sent();
            return [4
            /*yield*/
            , this.connect(this.clientId, {
              url: url
            })];

          case 2:
            client = _a.sent();
            logger.debug('Publishing to topic(s)', targetTopics.join(','), message);
            targetTopics.forEach(function (topic) {
              return client.send(topic, message);
            });
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  MqttOverWSProvider.prototype._onMessage = function (topic, msg) {
    try {
      var matchedTopicObservers_1 = [];

      this._topicObservers.forEach(function (observerForTopic, observerTopic) {
        if (mqttTopicMatch(observerTopic, topic)) {
          matchedTopicObservers_1.push(observerForTopic);
        }
      });

      var parsedMessage_1 = JSON.parse(msg);

      if (typeof parsedMessage_1 === 'object') {
        parsedMessage_1[topicSymbol] = topic;
      }

      matchedTopicObservers_1.forEach(function (observersForTopic) {
        observersForTopic.forEach(function (observer) {
          return observer.next(parsedMessage_1);
        });
      });
    } catch (error) {
      logger.warn('Error handling message', error, msg);
    }
  };

  MqttOverWSProvider.prototype.subscribe = function (topics, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    var targetTopics = [].concat(topics);
    logger.debug('Subscribing to topic(s)', targetTopics.join(','));
    return new zen_observable_ts__WEBPACK_IMPORTED_MODULE_3__.default(function (observer) {
      targetTopics.forEach(function (topic) {
        // this._topicObservers is used to notify the observers according to the topic received on the message
        var observersForTopic = _this._topicObservers.get(topic);

        if (!observersForTopic) {
          observersForTopic = new Set();

          _this._topicObservers.set(topic, observersForTopic);
        }

        observersForTopic.add(observer);
      }); // @ts-ignore

      var client;
      var _a = options.clientId,
          clientId = _a === void 0 ? _this.clientId : _a; // this._clientIdObservers is used to close observers when client gets disconnected

      var observersForClientId = _this._clientIdObservers.get(clientId);

      if (!observersForClientId) {
        observersForClientId = new Set();
      }

      observersForClientId.add(observer);

      _this._clientIdObservers.set(clientId, observersForClientId);

      (function () {
        return __awaiter(_this, void 0, void 0, function () {
          var _a, url, _b, e_1;

          return __generator(this, function (_c) {
            switch (_c.label) {
              case 0:
                _a = options.url;
                if (!(_a === void 0)) return [3
                /*break*/
                , 2];
                return [4
                /*yield*/
                , this.endpoint];

              case 1:
                _b = _c.sent();
                return [3
                /*break*/
                , 3];

              case 2:
                _b = _a;
                _c.label = 3;

              case 3:
                url = _b;
                _c.label = 4;

              case 4:
                _c.trys.push([4, 6,, 7]);

                return [4
                /*yield*/
                , this.connect(clientId, {
                  url: url
                })];

              case 5:
                client = _c.sent();
                targetTopics.forEach(function (topic) {
                  client.subscribe(topic);
                });
                return [3
                /*break*/
                , 7];

              case 6:
                e_1 = _c.sent();
                observer.error(e_1);
                return [3
                /*break*/
                , 7];

              case 7:
                return [2
                /*return*/
                ];
            }
          });
        });
      })();

      return function () {
        logger.debug('Unsubscribing from topic(s)', targetTopics.join(','));

        if (client) {
          _this._clientIdObservers.get(clientId).delete(observer); // No more observers per client => client not needed anymore


          if (_this._clientIdObservers.get(clientId).size === 0) {
            _this.disconnect(clientId);

            _this._clientIdObservers.delete(clientId);
          }

          targetTopics.forEach(function (topic) {
            var observersForTopic = _this._topicObservers.get(topic) || new Set();
            observersForTopic.delete(observer); // if no observers exists for the topic, topic should be removed

            if (observersForTopic.size === 0) {
              _this._topicObservers.delete(topic);

              if (client.isConnected()) {
                client.unsubscribe(topic);
              }
            }
          });
        }

        return null;
      };
    });
  };

  return MqttOverWSProvider;
}(_PubSubProvider__WEBPACK_IMPORTED_MODULE_4__.AbstractPubSubProvider);



/***/ }),

/***/ 81027:
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-amplify/pubsub/lib-esm/Providers/PubSubProvider.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AbstractPubSubProvider": function() { return /* binding */ AbstractPubSubProvider; }
/* harmony export */ });
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};


var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('AbstractPubSubProvider');

var AbstractPubSubProvider = function () {
  function AbstractPubSubProvider(options) {
    if (options === void 0) {
      options = {};
    }

    this._config = options;
  }

  AbstractPubSubProvider.prototype.configure = function (config) {
    if (config === void 0) {
      config = {};
    }

    this._config = __assign(__assign({}, config), this._config);
    logger.debug("configure " + this.getProviderName(), this._config);
    return this.options;
  };

  AbstractPubSubProvider.prototype.getCategory = function () {
    return 'PubSub';
  };

  Object.defineProperty(AbstractPubSubProvider.prototype, "options", {
    get: function get() {
      return __assign({}, this._config);
    },
    enumerable: true,
    configurable: true
  });
  return AbstractPubSubProvider;
}();



/***/ }),

/***/ 50515:
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-amplify/pubsub/lib-esm/Providers/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AbstractPubSubProvider": function() { return /* reexport safe */ _PubSubProvider__WEBPACK_IMPORTED_MODULE_0__.AbstractPubSubProvider; },
/* harmony export */   "AWSAppSyncProvider": function() { return /* reexport safe */ _AWSAppSyncProvider__WEBPACK_IMPORTED_MODULE_1__.AWSAppSyncProvider; },
/* harmony export */   "AWSAppSyncRealTimeProvider": function() { return /* reexport safe */ _AWSAppSyncRealTimeProvider__WEBPACK_IMPORTED_MODULE_2__.AWSAppSyncRealTimeProvider; },
/* harmony export */   "AWSIoTProvider": function() { return /* reexport safe */ _AWSIotProvider__WEBPACK_IMPORTED_MODULE_3__.AWSIoTProvider; },
/* harmony export */   "MqttOverWSProvider": function() { return /* reexport safe */ _MqttOverWSProvider__WEBPACK_IMPORTED_MODULE_4__.MqttOverWSProvider; },
/* harmony export */   "mqttTopicMatch": function() { return /* reexport safe */ _MqttOverWSProvider__WEBPACK_IMPORTED_MODULE_4__.mqttTopicMatch; }
/* harmony export */ });
/* harmony import */ var _PubSubProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PubSubProvider */ 81027);
/* harmony import */ var _AWSAppSyncProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AWSAppSyncProvider */ 88259);
/* harmony import */ var _AWSAppSyncRealTimeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AWSAppSyncRealTimeProvider */ 24150);
/* harmony import */ var _AWSIotProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AWSIotProvider */ 19304);
/* harmony import */ var _MqttOverWSProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MqttOverWSProvider */ 54215);
/*
 * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */






/***/ }),

/***/ 50150:
/*!************************************************************!*\
  !*** ./node_modules/@aws-amplify/pubsub/lib-esm/PubSub.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PubSubClass": function() { return /* binding */ PubSubClass; },
/* harmony export */   "PubSub": function() { return /* binding */ PubSub; }
/* harmony export */ });
/* harmony import */ var zen_observable_ts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! zen-observable-ts */ 78638);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 56722);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-amplify/core */ 24219);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-amplify/core */ 94758);
/* harmony import */ var _Providers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Providers */ 88259);
/* harmony import */ var _Providers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Providers */ 24150);
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};
/*
 * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
// import '../Common/Polyfills';





var isNode = (0,_aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.browserOrNode)().isNode;
var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.ConsoleLogger('PubSub');

var PubSubClass = function () {
  /**
   * Initialize PubSub with AWS configurations
   *
   * @param {PubSubOptions} options - Configuration object for PubSub
   */
  function PubSubClass(options) {
    this._options = options;
    logger.debug('PubSub Options', this._options);
    this._pluggables = [];
    this.subscribe = this.subscribe.bind(this);
  }

  Object.defineProperty(PubSubClass.prototype, "awsAppSyncProvider", {
    /**
     * Lazy instantiate AWSAppSyncProvider when it is required by the API category
     */
    get: function get() {
      if (!this._awsAppSyncProvider) {
        this._awsAppSyncProvider = new _Providers__WEBPACK_IMPORTED_MODULE_2__.AWSAppSyncProvider(this._options);
      }

      return this._awsAppSyncProvider;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(PubSubClass.prototype, "awsAppSyncRealTimeProvider", {
    /**
     * Lazy instantiate AWSAppSyncRealTimeProvider when it is required by the API category
     */
    get: function get() {
      if (!this._awsAppSyncRealTimeProvider) {
        this._awsAppSyncRealTimeProvider = new _Providers__WEBPACK_IMPORTED_MODULE_3__.AWSAppSyncRealTimeProvider(this._options);
      }

      return this._awsAppSyncRealTimeProvider;
    },
    enumerable: true,
    configurable: true
  });

  PubSubClass.prototype.getModuleName = function () {
    return 'PubSub';
  };
  /**
   * Configure PubSub part with configurations
   *
   * @param {PubSubOptions} config - Configuration for PubSub
   * @return {Object} - The current configuration
   */


  PubSubClass.prototype.configure = function (options) {
    var _this = this;

    var opt = options ? options.PubSub || options : {};
    logger.debug('configure PubSub', {
      opt: opt
    });
    this._options = Object.assign({}, this._options, opt);

    this._pluggables.map(function (pluggable) {
      return pluggable.configure(_this._options);
    });

    return this._options;
  };
  /**
   * add plugin into Analytics category
   * @param {Object} pluggable - an instance of the plugin
   */


  PubSubClass.prototype.addPluggable = function (pluggable) {
    return __awaiter(this, void 0, void 0, function () {
      var config;
      return __generator(this, function (_a) {
        if (pluggable && pluggable.getCategory() === 'PubSub') {
          this._pluggables.push(pluggable);

          config = pluggable.configure(this._options);
          return [2
          /*return*/
          , config];
        }

        return [2
        /*return*/
        ];
      });
    });
  };
  /**
   * remove plugin from PubSub category
   * @param providerName - the name of the plugin
   */


  PubSubClass.prototype.removePluggable = function (providerName) {
    this._pluggables = this._pluggables.filter(function (pluggable) {
      return pluggable.getProviderName() !== providerName;
    });
  };

  PubSubClass.prototype.getProviderByName = function (providerName) {
    if (providerName === _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__.INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER) {
      return this.awsAppSyncProvider;
    }

    if (providerName === _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__.INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER) {
      return this.awsAppSyncRealTimeProvider;
    }

    return this._pluggables.find(function (pluggable) {
      return pluggable.getProviderName() === providerName;
    });
  };

  PubSubClass.prototype.getProviders = function (options) {
    if (options === void 0) {
      options = {};
    }

    var providerName = options.provider;

    if (!providerName) {
      return this._pluggables;
    }

    var provider = this.getProviderByName(providerName);

    if (!provider) {
      throw new Error("Could not find provider named " + providerName);
    }

    return [provider];
  };

  PubSubClass.prototype.publish = function (topics, msg, options) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2
        /*return*/
        , Promise.all(this.getProviders(options).map(function (provider) {
          return provider.publish(topics, msg, options);
        }))];
      });
    });
  };

  PubSubClass.prototype.subscribe = function (topics, options) {
    if (isNode && this._options && this._options.ssr) {
      throw new Error('Subscriptions are not supported for Server-Side Rendering (SSR)');
    }

    logger.debug('subscribe options', options);
    var providers = this.getProviders(options);
    return new zen_observable_ts__WEBPACK_IMPORTED_MODULE_5__.default(function (observer) {
      var observables = providers.map(function (provider) {
        return {
          provider: provider,
          observable: provider.subscribe(topics, options)
        };
      });
      var subscriptions = observables.map(function (_a) {
        var provider = _a.provider,
            observable = _a.observable;
        return observable.subscribe({
          start: console.error,
          next: function next(value) {
            return observer.next({
              provider: provider,
              value: value
            });
          },
          error: function error(_error) {
            return observer.error({
              provider: provider,
              error: _error
            });
          }
        });
      });
      return function () {
        return subscriptions.forEach(function (subscription) {
          return subscription.unsubscribe();
        });
      };
    });
  };

  return PubSubClass;
}();


var PubSub = new PubSubClass(null);
_aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__.Amplify.register(PubSub);

/***/ }),

/***/ 2294:
/*!***********************************************************!*\
  !*** ./node_modules/@aws-amplify/pubsub/lib-esm/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AWSAppSyncProvider": function() { return /* reexport safe */ _Providers__WEBPACK_IMPORTED_MODULE_1__.AWSAppSyncProvider; },
/* harmony export */   "AWSAppSyncRealTimeProvider": function() { return /* reexport safe */ _Providers__WEBPACK_IMPORTED_MODULE_1__.AWSAppSyncRealTimeProvider; },
/* harmony export */   "AWSIoTProvider": function() { return /* reexport safe */ _Providers__WEBPACK_IMPORTED_MODULE_1__.AWSIoTProvider; },
/* harmony export */   "AbstractPubSubProvider": function() { return /* reexport safe */ _Providers__WEBPACK_IMPORTED_MODULE_1__.AbstractPubSubProvider; },
/* harmony export */   "MqttOverWSProvider": function() { return /* reexport safe */ _Providers__WEBPACK_IMPORTED_MODULE_1__.MqttOverWSProvider; },
/* harmony export */   "mqttTopicMatch": function() { return /* reexport safe */ _Providers__WEBPACK_IMPORTED_MODULE_1__.mqttTopicMatch; },
/* harmony export */   "PubSub": function() { return /* reexport safe */ _PubSub__WEBPACK_IMPORTED_MODULE_0__.PubSub; },
/* harmony export */   "CONTROL_MSG": function() { return /* binding */ CONTROL_MSG; }
/* harmony export */ });
/* harmony import */ var _PubSub__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PubSub */ 50150);
/* harmony import */ var _Providers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Providers */ 50515);
/*
 * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */


var CONTROL_MSG;

(function (CONTROL_MSG) {
  CONTROL_MSG["CONNECTION_CLOSED"] = "Connection closed";
  CONTROL_MSG["CONNECTION_FAILED"] = "Connection failed";
  CONTROL_MSG["REALTIME_SUBSCRIPTION_INIT_ERROR"] = "AppSync Realtime subscription init error";
  CONTROL_MSG["SUBSCRIPTION_ACK"] = "Subscription ack";
  CONTROL_MSG["TIMEOUT_DISCONNECT"] = "Timeout disconnect";
})(CONTROL_MSG || (CONTROL_MSG = {}));


/**
 * @deprecated use named import
 */

/* harmony default export */ __webpack_exports__["default"] = (_PubSub__WEBPACK_IMPORTED_MODULE_0__.PubSub);

/***/ }),

/***/ 605:
/*!***************************************************************!*\
  !*** ./node_modules/@aws-crypto/sha256-js/build/RawSha256.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var constants_1 = __webpack_require__(/*! ./constants */ 39428);
/**
 * @internal
 */


var RawSha256 = function () {
  function RawSha256() {
    this.state = Int32Array.from(constants_1.INIT);
    this.temp = new Int32Array(64);
    this.buffer = new Uint8Array(64);
    this.bufferLength = 0;
    this.bytesHashed = 0;
    /**
     * @internal
     */

    this.finished = false;
  }

  RawSha256.prototype.update = function (data) {
    if (this.finished) {
      throw new Error("Attempted to update an already finished hash.");
    }

    var position = 0;
    var byteLength = data.byteLength;
    this.bytesHashed += byteLength;

    if (this.bytesHashed * 8 > constants_1.MAX_HASHABLE_LENGTH) {
      throw new Error("Cannot hash more than 2^53 - 1 bits");
    }

    while (byteLength > 0) {
      this.buffer[this.bufferLength++] = data[position++];
      byteLength--;

      if (this.bufferLength === constants_1.BLOCK_SIZE) {
        this.hashBuffer();
        this.bufferLength = 0;
      }
    }
  };

  RawSha256.prototype.digest = function () {
    if (!this.finished) {
      var bitsHashed = this.bytesHashed * 8;
      var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);
      var undecoratedLength = this.bufferLength;
      bufferView.setUint8(this.bufferLength++, 0x80); // Ensure the final block has enough room for the hashed length

      if (undecoratedLength % constants_1.BLOCK_SIZE >= constants_1.BLOCK_SIZE - 8) {
        for (var i = this.bufferLength; i < constants_1.BLOCK_SIZE; i++) {
          bufferView.setUint8(i, 0);
        }

        this.hashBuffer();
        this.bufferLength = 0;
      }

      for (var i = this.bufferLength; i < constants_1.BLOCK_SIZE - 8; i++) {
        bufferView.setUint8(i, 0);
      }

      bufferView.setUint32(constants_1.BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);
      bufferView.setUint32(constants_1.BLOCK_SIZE - 4, bitsHashed);
      this.hashBuffer();
      this.finished = true;
    } // The value in state is little-endian rather than big-endian, so flip
    // each word into a new Uint8Array


    var out = new Uint8Array(constants_1.DIGEST_LENGTH);

    for (var i = 0; i < 8; i++) {
      out[i * 4] = this.state[i] >>> 24 & 0xff;
      out[i * 4 + 1] = this.state[i] >>> 16 & 0xff;
      out[i * 4 + 2] = this.state[i] >>> 8 & 0xff;
      out[i * 4 + 3] = this.state[i] >>> 0 & 0xff;
    }

    return out;
  };

  RawSha256.prototype.hashBuffer = function () {
    var _a = this,
        buffer = _a.buffer,
        state = _a.state;

    var state0 = state[0],
        state1 = state[1],
        state2 = state[2],
        state3 = state[3],
        state4 = state[4],
        state5 = state[5],
        state6 = state[6],
        state7 = state[7];

    for (var i = 0; i < constants_1.BLOCK_SIZE; i++) {
      if (i < 16) {
        this.temp[i] = (buffer[i * 4] & 0xff) << 24 | (buffer[i * 4 + 1] & 0xff) << 16 | (buffer[i * 4 + 2] & 0xff) << 8 | buffer[i * 4 + 3] & 0xff;
      } else {
        var u = this.temp[i - 2];
        var t1_1 = (u >>> 17 | u << 15) ^ (u >>> 19 | u << 13) ^ u >>> 10;
        u = this.temp[i - 15];
        var t2_1 = (u >>> 7 | u << 25) ^ (u >>> 18 | u << 14) ^ u >>> 3;
        this.temp[i] = (t1_1 + this.temp[i - 7] | 0) + (t2_1 + this.temp[i - 16] | 0);
      }

      var t1 = (((state4 >>> 6 | state4 << 26) ^ (state4 >>> 11 | state4 << 21) ^ (state4 >>> 25 | state4 << 7)) + (state4 & state5 ^ ~state4 & state6) | 0) + (state7 + (constants_1.KEY[i] + this.temp[i] | 0) | 0) | 0;
      var t2 = ((state0 >>> 2 | state0 << 30) ^ (state0 >>> 13 | state0 << 19) ^ (state0 >>> 22 | state0 << 10)) + (state0 & state1 ^ state0 & state2 ^ state1 & state2) | 0;
      state7 = state6;
      state6 = state5;
      state5 = state4;
      state4 = state3 + t1 | 0;
      state3 = state2;
      state2 = state1;
      state1 = state0;
      state0 = t1 + t2 | 0;
    }

    state[0] += state0;
    state[1] += state1;
    state[2] += state2;
    state[3] += state3;
    state[4] += state4;
    state[5] += state5;
    state[6] += state6;
    state[7] += state7;
  };

  return RawSha256;
}();

exports.RawSha256 = RawSha256;

/***/ }),

/***/ 39428:
/*!***************************************************************!*\
  !*** ./node_modules/@aws-crypto/sha256-js/build/constants.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
/**
 * @internal
 */

exports.BLOCK_SIZE = 64;
/**
 * @internal
 */

exports.DIGEST_LENGTH = 32;
/**
 * @internal
 */

exports.KEY = new Uint32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]);
/**
 * @internal
 */

exports.INIT = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];
/**
 * @internal
 */

exports.MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;

/***/ }),

/***/ 50081:
/*!***********************************************************!*\
  !*** ./node_modules/@aws-crypto/sha256-js/build/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var tslib_1 = __webpack_require__(/*! tslib */ 93512);

tslib_1.__exportStar(__webpack_require__(/*! ./jsSha256 */ 5922), exports);

/***/ }),

/***/ 5922:
/*!**************************************************************!*\
  !*** ./node_modules/@aws-crypto/sha256-js/build/jsSha256.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var tslib_1 = __webpack_require__(/*! tslib */ 93512);

var constants_1 = __webpack_require__(/*! ./constants */ 39428);

var RawSha256_1 = __webpack_require__(/*! ./RawSha256 */ 605);

var util_utf8_browser_1 = __webpack_require__(/*! @aws-sdk/util-utf8-browser */ 14828);

var Sha256 = function () {
  function Sha256(secret) {
    this.hash = new RawSha256_1.RawSha256();

    if (secret) {
      this.outer = new RawSha256_1.RawSha256();
      var inner = bufferFromSecret(secret);
      var outer = new Uint8Array(constants_1.BLOCK_SIZE);
      outer.set(inner);

      for (var i = 0; i < constants_1.BLOCK_SIZE; i++) {
        inner[i] ^= 0x36;
        outer[i] ^= 0x5c;
      }

      this.hash.update(inner);
      this.outer.update(outer); // overwrite the copied key in memory

      for (var i = 0; i < inner.byteLength; i++) {
        inner[i] = 0;
      }
    }
  }

  Sha256.prototype.update = function (toHash) {
    if (isEmptyData(toHash) || this.error) {
      return;
    }

    try {
      this.hash.update(convertToBuffer(toHash));
    } catch (e) {
      this.error = e;
    }
  };
  /* This synchronous method keeps compatibility
   * with the v2 aws-sdk.
   */


  Sha256.prototype.digestSync = function () {
    if (this.error) {
      throw this.error;
    }

    if (this.outer) {
      if (!this.outer.finished) {
        this.outer.update(this.hash.digest());
      }

      return this.outer.digest();
    }

    return this.hash.digest();
  };
  /* The underlying digest method here is synchronous.
   * To keep the same interface with the other hash functions
   * the default is to expose this as an async method.
   * However, it can sometimes be useful to have a sync method.
   */


  Sha256.prototype.digest = function () {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
      return tslib_1.__generator(this, function (_a) {
        return [2
        /*return*/
        , this.digestSync()];
      });
    });
  };

  return Sha256;
}();

exports.Sha256 = Sha256;

function bufferFromSecret(secret) {
  var input = convertToBuffer(secret);

  if (input.byteLength > constants_1.BLOCK_SIZE) {
    var bufferHash = new RawSha256_1.RawSha256();
    bufferHash.update(input);
    input = bufferHash.digest();
  }

  var buffer = new Uint8Array(constants_1.BLOCK_SIZE);
  buffer.set(input);
  return buffer;
}

function isEmptyData(data) {
  if (typeof data === "string") {
    return data.length === 0;
  }

  return data.byteLength === 0;
}

function convertToBuffer(data) {
  if (typeof data === "string") {
    return util_utf8_browser_1.fromUtf8(data);
  }

  if (ArrayBuffer.isView(data)) {
    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
  }

  return new Uint8Array(data);
}

/***/ }),

/***/ 51539:
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/CloudWatchLogsClient.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CloudWatchLogsClient": function() { return /* binding */ CloudWatchLogsClient; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _runtimeConfig__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./runtimeConfig */ 43187);
/* harmony import */ var _aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/config-resolver */ 98140);
/* harmony import */ var _aws_sdk_middleware_content_length__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-content-length */ 9492);
/* harmony import */ var _aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-host-header */ 9312);
/* harmony import */ var _aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/middleware-logger */ 64871);
/* harmony import */ var _aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/middleware-retry */ 9485);
/* harmony import */ var _aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/middleware-signing */ 70461);
/* harmony import */ var _aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-sdk/middleware-user-agent */ 19189);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);










/**
 * <p>You can use Amazon CloudWatch Logs to monitor, store, and access your log files from
 *       EC2 instances, AWS CloudTrail, or other sources. You can then retrieve the associated
 *       log data from CloudWatch Logs using the CloudWatch console, CloudWatch Logs commands in the
 *       AWS CLI, CloudWatch Logs API, or CloudWatch Logs SDK.</p>
 *          <p>You can use CloudWatch Logs to:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <b>Monitor logs from EC2 instances in real-time</b>: You
 *           can use CloudWatch Logs to monitor applications and systems using log data. For example,
 *           CloudWatch Logs can track the number of errors that occur in your application logs and
 *           send you a notification whenever the rate of errors exceeds a threshold that you specify.
 *           CloudWatch Logs uses your log data for monitoring so no code changes are required. For
 *           example, you can monitor application logs for specific literal terms (such as
 *           "NullReferenceException") or count the number of occurrences of a literal term at a
 *           particular position in log data (such as "404" status codes in an Apache access log). When
 *           the term you are searching for is found, CloudWatch Logs reports the data to a CloudWatch
 *           metric that you specify.</p>
 *             </li>
 *             <li>
 *                <p>
 *                   <b>Monitor AWS CloudTrail logged events</b>: You can
 *           create alarms in CloudWatch and receive notifications of particular API activity as
 *           captured by CloudTrail. You can use the notification to perform troubleshooting.</p>
 *             </li>
 *             <li>
 *                <p>
 *                   <b>Archive log data</b>: You can use CloudWatch Logs to
 *           store your log data in highly durable storage. You can change the log retention setting so
 *           that any log events older than this setting are automatically deleted. The CloudWatch Logs
 *           agent makes it easy to quickly send both rotated and non-rotated log data off of a host
 *           and into the log service. You can then access the raw log data when you need it.</p>
 *             </li>
 *          </ul>
 */

var CloudWatchLogsClient = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__extends)(CloudWatchLogsClient, _super);

  function CloudWatchLogsClient(configuration) {
    var _this = this;

    var _config_0 = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_8__.__assign)({}, _runtimeConfig__WEBPACK_IMPORTED_MODULE_9__.ClientDefaultValues), configuration);

    var _config_1 = (0,_aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__.resolveRegionConfig)(_config_0);

    var _config_2 = (0,_aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__.resolveEndpointsConfig)(_config_1);

    var _config_3 = (0,_aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_5__.resolveAwsAuthConfig)(_config_2);

    var _config_4 = (0,_aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_4__.resolveRetryConfig)(_config_3);

    var _config_5 = (0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_2__.resolveHostHeaderConfig)(_config_4);

    var _config_6 = (0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_6__.resolveUserAgentConfig)(_config_5);

    _this = _super.call(this, _config_6) || this;
    _this.config = _config_6;

    _this.middlewareStack.use((0,_aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_5__.getAwsAuthPlugin)(_this.config));

    _this.middlewareStack.use((0,_aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_4__.getRetryPlugin)(_this.config));

    _this.middlewareStack.use((0,_aws_sdk_middleware_content_length__WEBPACK_IMPORTED_MODULE_1__.getContentLengthPlugin)(_this.config));

    _this.middlewareStack.use((0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_2__.getHostHeaderPlugin)(_this.config));

    _this.middlewareStack.use((0,_aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerPlugin)(_this.config));

    _this.middlewareStack.use((0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_6__.getUserAgentPlugin)(_this.config));

    return _this;
  }

  CloudWatchLogsClient.prototype.destroy = function () {
    _super.prototype.destroy.call(this);
  };

  return CloudWatchLogsClient;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_7__.Client);



/***/ }),

/***/ 77346:
/*!************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/commands/CreateLogGroupCommand.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreateLogGroupCommand": function() { return /* binding */ CreateLogGroupCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/models_0 */ 47446);
/* harmony import */ var _protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocols/Aws_json1_1 */ 80992);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);





/**
 * <p>Creates a log group with the specified name. You can create up to 20,000 log groups per account.</p>
 *          <p>You must use the following guidelines when naming a log group:</p>
 *          <ul>
 *             <li>
 *                <p>Log group names must be unique within a region for an AWS account.</p>
 *             </li>
 *             <li>
 *                <p>Log group names can be between 1 and 512 characters long.</p>
 *             </li>
 *             <li>
 *                <p>Log group names consist of the following characters: a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen),
 *           '/' (forward slash), '.' (period), and '#' (number sign)</p>
 *             </li>
 *          </ul>
 *          <p>When you create a log group, by default the log events in the log group never expire. To set
 *     a retention policy so that events expire and are deleted after a specified time, use
 *       <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html">PutRetentionPolicy</a>.</p>
 *          <p>If you associate a AWS Key Management Service (AWS KMS) customer master key (CMK) with the log group, ingested data is encrypted using the CMK.
 *       This association is stored as long as the data encrypted with the CMK is still within Amazon CloudWatch Logs.
 *       This enables Amazon CloudWatch Logs to decrypt this data whenever it is requested.</p>
 *          <p>If you attempt to associate a CMK with the log group but the CMK does not exist or the
 *       CMK is disabled, you receive an <code>InvalidParameterException</code> error. </p>
 *          <important>
 *             <p> CloudWatch Logs supports only symmetric CMKs. Do not associate an asymmetric CMK with
 *         your log group. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using Symmetric and Asymmetric
 *           Keys</a>.</p>
 *          </important>
 */

var CreateLogGroupCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(CreateLogGroupCommand, _super); // Start section: command_properties
  // End section: command_properties


  function CreateLogGroupCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  CreateLogGroupCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "CloudWatchLogsClient";
    var commandName = "CreateLogGroupCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.CreateLogGroupRequest.filterSensitiveLog,
      outputFilterSensitiveLog: function outputFilterSensitiveLog(output) {
        return output;
      }
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  CreateLogGroupCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.serializeAws_json1_1CreateLogGroupCommand)(input, context);
  };

  CreateLogGroupCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.deserializeAws_json1_1CreateLogGroupCommand)(output, context);
  };

  return CreateLogGroupCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.Command);



/***/ }),

/***/ 67190:
/*!*************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/commands/CreateLogStreamCommand.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreateLogStreamCommand": function() { return /* binding */ CreateLogStreamCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/models_0 */ 47446);
/* harmony import */ var _protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocols/Aws_json1_1 */ 80992);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);





/**
 * <p>Creates a log stream for the specified log group. A log stream is a sequence of log events
 *       that originate from a single source, such as an application instance or a resource that is
 *       being monitored.</p>
 *          <p>There is no limit on the number of log streams that you can create for a log group. There is a limit
 *     of 50 TPS on <code>CreateLogStream</code> operations, after which transactions are throttled.</p>
 *          <p>You must use the following guidelines when naming a log stream:</p>
 *          <ul>
 *             <li>
 *                <p>Log stream names must be unique within the log group.</p>
 *             </li>
 *             <li>
 *                <p>Log stream names can be between 1 and 512 characters long.</p>
 *             </li>
 *             <li>
 *                <p>The ':' (colon) and '*' (asterisk) characters are not allowed.</p>
 *             </li>
 *          </ul>
 */

var CreateLogStreamCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(CreateLogStreamCommand, _super); // Start section: command_properties
  // End section: command_properties


  function CreateLogStreamCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  CreateLogStreamCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "CloudWatchLogsClient";
    var commandName = "CreateLogStreamCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.CreateLogStreamRequest.filterSensitiveLog,
      outputFilterSensitiveLog: function outputFilterSensitiveLog(output) {
        return output;
      }
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  CreateLogStreamCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.serializeAws_json1_1CreateLogStreamCommand)(input, context);
  };

  CreateLogStreamCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.deserializeAws_json1_1CreateLogStreamCommand)(output, context);
  };

  return CreateLogStreamCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.Command);



/***/ }),

/***/ 71033:
/*!***************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/commands/DescribeLogGroupsCommand.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DescribeLogGroupsCommand": function() { return /* binding */ DescribeLogGroupsCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/models_0 */ 47446);
/* harmony import */ var _protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocols/Aws_json1_1 */ 80992);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);





/**
 * <p>Lists the specified log groups. You can list all your log groups or filter the results by prefix.
 *       The results are ASCII-sorted by log group name.</p>
 */

var DescribeLogGroupsCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(DescribeLogGroupsCommand, _super); // Start section: command_properties
  // End section: command_properties


  function DescribeLogGroupsCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  DescribeLogGroupsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "CloudWatchLogsClient";
    var commandName = "DescribeLogGroupsCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.DescribeLogGroupsRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.DescribeLogGroupsResponse.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  DescribeLogGroupsCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.serializeAws_json1_1DescribeLogGroupsCommand)(input, context);
  };

  DescribeLogGroupsCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.deserializeAws_json1_1DescribeLogGroupsCommand)(output, context);
  };

  return DescribeLogGroupsCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.Command);



/***/ }),

/***/ 16268:
/*!****************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/commands/DescribeLogStreamsCommand.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DescribeLogStreamsCommand": function() { return /* binding */ DescribeLogStreamsCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/models_0 */ 47446);
/* harmony import */ var _protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocols/Aws_json1_1 */ 80992);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);





/**
 * <p>Lists the log streams for the specified log group.
 *       You can list all the log streams or filter the results by prefix.
 *       You can also control how the results are ordered.</p>
 *          <p>This operation has a limit of five transactions per second, after which transactions are throttled.</p>
 */

var DescribeLogStreamsCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(DescribeLogStreamsCommand, _super); // Start section: command_properties
  // End section: command_properties


  function DescribeLogStreamsCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  DescribeLogStreamsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "CloudWatchLogsClient";
    var commandName = "DescribeLogStreamsCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.DescribeLogStreamsRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.DescribeLogStreamsResponse.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  DescribeLogStreamsCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.serializeAws_json1_1DescribeLogStreamsCommand)(input, context);
  };

  DescribeLogStreamsCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.deserializeAws_json1_1DescribeLogStreamsCommand)(output, context);
  };

  return DescribeLogStreamsCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.Command);



/***/ }),

/***/ 63808:
/*!**********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/commands/GetLogEventsCommand.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GetLogEventsCommand": function() { return /* binding */ GetLogEventsCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/models_0 */ 47446);
/* harmony import */ var _protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocols/Aws_json1_1 */ 80992);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);





/**
 * <p>Lists log events from the specified log stream. You can list all of the log events or
 *       filter using a time range.</p>
 *
 *          <p>By default, this operation returns as many log events as can fit in a response size of 1MB (up to 10,000 log events).
 *       You can get additional log events by specifying one of the tokens in a subsequent call.
 *       This operation can return empty results while there are more log events available through the token.</p>
 */

var GetLogEventsCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(GetLogEventsCommand, _super); // Start section: command_properties
  // End section: command_properties


  function GetLogEventsCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  GetLogEventsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "CloudWatchLogsClient";
    var commandName = "GetLogEventsCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.GetLogEventsRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.GetLogEventsResponse.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  GetLogEventsCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.serializeAws_json1_1GetLogEventsCommand)(input, context);
  };

  GetLogEventsCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.deserializeAws_json1_1GetLogEventsCommand)(output, context);
  };

  return GetLogEventsCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.Command);



/***/ }),

/***/ 14647:
/*!**********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/commands/PutLogEventsCommand.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PutLogEventsCommand": function() { return /* binding */ PutLogEventsCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/models_0 */ 47446);
/* harmony import */ var _protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocols/Aws_json1_1 */ 80992);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);





/**
 * <p>Uploads a batch of log events to the specified log stream.</p>
 *          <p>You must include the sequence token obtained from the response of the previous call. An
 *       upload in a newly created log stream does not require a sequence token. You can also get the
 *       sequence token in the <code>expectedSequenceToken</code> field from
 *         <code>InvalidSequenceTokenException</code>. If you call <code>PutLogEvents</code> twice
 *       within a narrow time period using the same value for <code>sequenceToken</code>, both calls
 *       might be successful or one might be rejected.</p>
 *          <p>The batch of events must satisfy the following constraints:</p>
 *          <ul>
 *             <li>
 *                <p>The maximum batch size is 1,048,576 bytes. This size is calculated as the sum of
 *           all event messages in UTF-8, plus 26 bytes for each log event.</p>
 *             </li>
 *             <li>
 *                <p>None of the log events in the batch can be more than 2 hours in the future.</p>
 *             </li>
 *             <li>
 *                <p>None of the log events in the batch can be older than 14 days or older than the retention
 *           period of the log group.</p>
 *             </li>
 *             <li>
 *                <p>The log events in the batch must be in chronological order by their timestamp. The
 *           timestamp is the time the event occurred, expressed as the number of milliseconds after
 *           Jan 1, 1970 00:00:00 UTC. (In AWS Tools for PowerShell and the AWS SDK for .NET, the
 *           timestamp is specified in .NET format: yyyy-mm-ddThh:mm:ss. For example,
 *           2017-09-15T13:45:30.) </p>
 *             </li>
 *             <li>
 *                <p>A batch of log events in a single request cannot span more than 24 hours. Otherwise, the operation fails.</p>
 *             </li>
 *             <li>
 *                <p>The maximum number of log events in a batch is 10,000.</p>
 *             </li>
 *             <li>
 *                <p>There is a quota of 5 requests per second per log stream. Additional requests are throttled. This quota can't be changed.</p>
 *             </li>
 *          </ul>
 *          <p>If a call to <code>PutLogEvents</code> returns "UnrecognizedClientException" the most likely cause is an invalid AWS access key ID or secret key. </p>
 */

var PutLogEventsCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(PutLogEventsCommand, _super); // Start section: command_properties
  // End section: command_properties


  function PutLogEventsCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  PutLogEventsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_0__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "CloudWatchLogsClient";
    var commandName = "PutLogEventsCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.PutLogEventsRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_3__.PutLogEventsResponse.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  PutLogEventsCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.serializeAws_json1_1PutLogEventsCommand)(input, context);
  };

  PutLogEventsCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_4__.deserializeAws_json1_1PutLogEventsCommand)(output, context);
  };

  return PutLogEventsCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.Command);



/***/ }),

/***/ 75307:
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/endpoints.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultRegionInfoProvider": function() { return /* binding */ defaultRegionInfoProvider; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 3786);
 // Partition default templates

var AWS_TEMPLATE = "logs.{region}.amazonaws.com";
var AWS_CN_TEMPLATE = "logs.{region}.amazonaws.com.cn";
var AWS_ISO_TEMPLATE = "logs.{region}.c2s.ic.gov";
var AWS_ISO_B_TEMPLATE = "logs.{region}.sc2s.sgov.gov";
var AWS_US_GOV_TEMPLATE = "logs.{region}.amazonaws.com"; // Partition regions

var AWS_REGIONS = new Set(["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-south-1", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2"]);
var AWS_CN_REGIONS = new Set(["cn-north-1", "cn-northwest-1"]);
var AWS_ISO_REGIONS = new Set(["us-iso-east-1"]);
var AWS_ISO_B_REGIONS = new Set(["us-isob-east-1"]);
var AWS_US_GOV_REGIONS = new Set(["us-gov-east-1", "us-gov-west-1"]);
var defaultRegionInfoProvider = function defaultRegionInfoProvider(region, options) {
  var regionInfo = undefined;

  switch (region) {
    // First, try to match exact region names.
    case "af-south-1":
      regionInfo = {
        hostname: "logs.af-south-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "ap-east-1":
      regionInfo = {
        hostname: "logs.ap-east-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "ap-northeast-1":
      regionInfo = {
        hostname: "logs.ap-northeast-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "ap-northeast-2":
      regionInfo = {
        hostname: "logs.ap-northeast-2.amazonaws.com",
        partition: "aws"
      };
      break;

    case "ap-south-1":
      regionInfo = {
        hostname: "logs.ap-south-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "ap-southeast-1":
      regionInfo = {
        hostname: "logs.ap-southeast-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "ap-southeast-2":
      regionInfo = {
        hostname: "logs.ap-southeast-2.amazonaws.com",
        partition: "aws"
      };
      break;

    case "ca-central-1":
      regionInfo = {
        hostname: "logs.ca-central-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "cn-north-1":
      regionInfo = {
        hostname: "logs.cn-north-1.amazonaws.com.cn",
        partition: "aws-cn"
      };
      break;

    case "cn-northwest-1":
      regionInfo = {
        hostname: "logs.cn-northwest-1.amazonaws.com.cn",
        partition: "aws-cn"
      };
      break;

    case "eu-central-1":
      regionInfo = {
        hostname: "logs.eu-central-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "eu-north-1":
      regionInfo = {
        hostname: "logs.eu-north-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "eu-south-1":
      regionInfo = {
        hostname: "logs.eu-south-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "eu-west-1":
      regionInfo = {
        hostname: "logs.eu-west-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "eu-west-2":
      regionInfo = {
        hostname: "logs.eu-west-2.amazonaws.com",
        partition: "aws"
      };
      break;

    case "eu-west-3":
      regionInfo = {
        hostname: "logs.eu-west-3.amazonaws.com",
        partition: "aws"
      };
      break;

    case "fips-us-east-1":
      regionInfo = {
        hostname: "logs-fips.us-east-1.amazonaws.com",
        partition: "aws",
        signingRegion: "us-east-1"
      };
      break;

    case "fips-us-east-2":
      regionInfo = {
        hostname: "logs-fips.us-east-2.amazonaws.com",
        partition: "aws",
        signingRegion: "us-east-2"
      };
      break;

    case "fips-us-west-1":
      regionInfo = {
        hostname: "logs-fips.us-west-1.amazonaws.com",
        partition: "aws",
        signingRegion: "us-west-1"
      };
      break;

    case "fips-us-west-2":
      regionInfo = {
        hostname: "logs-fips.us-west-2.amazonaws.com",
        partition: "aws",
        signingRegion: "us-west-2"
      };
      break;

    case "me-south-1":
      regionInfo = {
        hostname: "logs.me-south-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "sa-east-1":
      regionInfo = {
        hostname: "logs.sa-east-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "us-east-1":
      regionInfo = {
        hostname: "logs.us-east-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "us-east-2":
      regionInfo = {
        hostname: "logs.us-east-2.amazonaws.com",
        partition: "aws"
      };
      break;

    case "us-gov-east-1":
      regionInfo = {
        hostname: "logs.us-gov-east-1.amazonaws.com",
        partition: "aws-us-gov",
        signingRegion: "us-gov-east-1"
      };
      break;

    case "us-gov-west-1":
      regionInfo = {
        hostname: "logs.us-gov-west-1.amazonaws.com",
        partition: "aws-us-gov",
        signingRegion: "us-gov-west-1"
      };
      break;

    case "us-iso-east-1":
      regionInfo = {
        hostname: "logs.us-iso-east-1.c2s.ic.gov",
        partition: "aws-iso"
      };
      break;

    case "us-isob-east-1":
      regionInfo = {
        hostname: "logs.us-isob-east-1.sc2s.sgov.gov",
        partition: "aws-iso-b"
      };
      break;

    case "us-west-1":
      regionInfo = {
        hostname: "logs.us-west-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "us-west-2":
      regionInfo = {
        hostname: "logs.us-west-2.amazonaws.com",
        partition: "aws"
      };
      break;
    // Next, try to match partition endpoints.

    default:
      if (AWS_REGIONS.has(region)) {
        regionInfo = {
          hostname: AWS_TEMPLATE.replace("{region}", region),
          partition: "aws"
        };
      }

      if (AWS_CN_REGIONS.has(region)) {
        regionInfo = {
          hostname: AWS_CN_TEMPLATE.replace("{region}", region),
          partition: "aws-cn"
        };
      }

      if (AWS_ISO_REGIONS.has(region)) {
        regionInfo = {
          hostname: AWS_ISO_TEMPLATE.replace("{region}", region),
          partition: "aws-iso"
        };
      }

      if (AWS_ISO_B_REGIONS.has(region)) {
        regionInfo = {
          hostname: AWS_ISO_B_TEMPLATE.replace("{region}", region),
          partition: "aws-iso-b"
        };
      }

      if (AWS_US_GOV_REGIONS.has(region)) {
        regionInfo = {
          hostname: AWS_US_GOV_TEMPLATE.replace("{region}", region),
          partition: "aws-us-gov"
        };
      } // Finally, assume it's an AWS partition endpoint.


      if (regionInfo === undefined) {
        regionInfo = {
          hostname: AWS_TEMPLATE.replace("{region}", region),
          partition: "aws"
        };
      }

  }

  return Promise.resolve((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({
    signingService: "logs"
  }, regionInfo));
};

/***/ }),

/***/ 47446:
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/models/models_0.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AssociateKmsKeyRequest": function() { return /* binding */ AssociateKmsKeyRequest; },
/* harmony export */   "InvalidParameterException": function() { return /* binding */ InvalidParameterException; },
/* harmony export */   "OperationAbortedException": function() { return /* binding */ OperationAbortedException; },
/* harmony export */   "ResourceNotFoundException": function() { return /* binding */ ResourceNotFoundException; },
/* harmony export */   "ServiceUnavailableException": function() { return /* binding */ ServiceUnavailableException; },
/* harmony export */   "CancelExportTaskRequest": function() { return /* binding */ CancelExportTaskRequest; },
/* harmony export */   "InvalidOperationException": function() { return /* binding */ InvalidOperationException; },
/* harmony export */   "CreateExportTaskRequest": function() { return /* binding */ CreateExportTaskRequest; },
/* harmony export */   "CreateExportTaskResponse": function() { return /* binding */ CreateExportTaskResponse; },
/* harmony export */   "LimitExceededException": function() { return /* binding */ LimitExceededException; },
/* harmony export */   "ResourceAlreadyExistsException": function() { return /* binding */ ResourceAlreadyExistsException; },
/* harmony export */   "CreateLogGroupRequest": function() { return /* binding */ CreateLogGroupRequest; },
/* harmony export */   "CreateLogStreamRequest": function() { return /* binding */ CreateLogStreamRequest; },
/* harmony export */   "DataAlreadyAcceptedException": function() { return /* binding */ DataAlreadyAcceptedException; },
/* harmony export */   "DeleteDestinationRequest": function() { return /* binding */ DeleteDestinationRequest; },
/* harmony export */   "DeleteLogGroupRequest": function() { return /* binding */ DeleteLogGroupRequest; },
/* harmony export */   "DeleteLogStreamRequest": function() { return /* binding */ DeleteLogStreamRequest; },
/* harmony export */   "DeleteMetricFilterRequest": function() { return /* binding */ DeleteMetricFilterRequest; },
/* harmony export */   "DeleteQueryDefinitionRequest": function() { return /* binding */ DeleteQueryDefinitionRequest; },
/* harmony export */   "DeleteQueryDefinitionResponse": function() { return /* binding */ DeleteQueryDefinitionResponse; },
/* harmony export */   "DeleteResourcePolicyRequest": function() { return /* binding */ DeleteResourcePolicyRequest; },
/* harmony export */   "DeleteRetentionPolicyRequest": function() { return /* binding */ DeleteRetentionPolicyRequest; },
/* harmony export */   "DeleteSubscriptionFilterRequest": function() { return /* binding */ DeleteSubscriptionFilterRequest; },
/* harmony export */   "DescribeDestinationsRequest": function() { return /* binding */ DescribeDestinationsRequest; },
/* harmony export */   "Destination": function() { return /* binding */ Destination; },
/* harmony export */   "DescribeDestinationsResponse": function() { return /* binding */ DescribeDestinationsResponse; },
/* harmony export */   "ExportTaskStatusCode": function() { return /* binding */ ExportTaskStatusCode; },
/* harmony export */   "DescribeExportTasksRequest": function() { return /* binding */ DescribeExportTasksRequest; },
/* harmony export */   "ExportTaskExecutionInfo": function() { return /* binding */ ExportTaskExecutionInfo; },
/* harmony export */   "ExportTaskStatus": function() { return /* binding */ ExportTaskStatus; },
/* harmony export */   "ExportTask": function() { return /* binding */ ExportTask; },
/* harmony export */   "DescribeExportTasksResponse": function() { return /* binding */ DescribeExportTasksResponse; },
/* harmony export */   "DescribeLogGroupsRequest": function() { return /* binding */ DescribeLogGroupsRequest; },
/* harmony export */   "LogGroup": function() { return /* binding */ LogGroup; },
/* harmony export */   "DescribeLogGroupsResponse": function() { return /* binding */ DescribeLogGroupsResponse; },
/* harmony export */   "OrderBy": function() { return /* binding */ OrderBy; },
/* harmony export */   "DescribeLogStreamsRequest": function() { return /* binding */ DescribeLogStreamsRequest; },
/* harmony export */   "LogStream": function() { return /* binding */ LogStream; },
/* harmony export */   "DescribeLogStreamsResponse": function() { return /* binding */ DescribeLogStreamsResponse; },
/* harmony export */   "DescribeMetricFiltersRequest": function() { return /* binding */ DescribeMetricFiltersRequest; },
/* harmony export */   "MetricTransformation": function() { return /* binding */ MetricTransformation; },
/* harmony export */   "MetricFilter": function() { return /* binding */ MetricFilter; },
/* harmony export */   "DescribeMetricFiltersResponse": function() { return /* binding */ DescribeMetricFiltersResponse; },
/* harmony export */   "QueryStatus": function() { return /* binding */ QueryStatus; },
/* harmony export */   "DescribeQueriesRequest": function() { return /* binding */ DescribeQueriesRequest; },
/* harmony export */   "QueryInfo": function() { return /* binding */ QueryInfo; },
/* harmony export */   "DescribeQueriesResponse": function() { return /* binding */ DescribeQueriesResponse; },
/* harmony export */   "DescribeQueryDefinitionsRequest": function() { return /* binding */ DescribeQueryDefinitionsRequest; },
/* harmony export */   "QueryDefinition": function() { return /* binding */ QueryDefinition; },
/* harmony export */   "DescribeQueryDefinitionsResponse": function() { return /* binding */ DescribeQueryDefinitionsResponse; },
/* harmony export */   "DescribeResourcePoliciesRequest": function() { return /* binding */ DescribeResourcePoliciesRequest; },
/* harmony export */   "ResourcePolicy": function() { return /* binding */ ResourcePolicy; },
/* harmony export */   "DescribeResourcePoliciesResponse": function() { return /* binding */ DescribeResourcePoliciesResponse; },
/* harmony export */   "DescribeSubscriptionFiltersRequest": function() { return /* binding */ DescribeSubscriptionFiltersRequest; },
/* harmony export */   "Distribution": function() { return /* binding */ Distribution; },
/* harmony export */   "SubscriptionFilter": function() { return /* binding */ SubscriptionFilter; },
/* harmony export */   "DescribeSubscriptionFiltersResponse": function() { return /* binding */ DescribeSubscriptionFiltersResponse; },
/* harmony export */   "DisassociateKmsKeyRequest": function() { return /* binding */ DisassociateKmsKeyRequest; },
/* harmony export */   "FilteredLogEvent": function() { return /* binding */ FilteredLogEvent; },
/* harmony export */   "FilterLogEventsRequest": function() { return /* binding */ FilterLogEventsRequest; },
/* harmony export */   "SearchedLogStream": function() { return /* binding */ SearchedLogStream; },
/* harmony export */   "FilterLogEventsResponse": function() { return /* binding */ FilterLogEventsResponse; },
/* harmony export */   "GetLogEventsRequest": function() { return /* binding */ GetLogEventsRequest; },
/* harmony export */   "OutputLogEvent": function() { return /* binding */ OutputLogEvent; },
/* harmony export */   "GetLogEventsResponse": function() { return /* binding */ GetLogEventsResponse; },
/* harmony export */   "GetLogGroupFieldsRequest": function() { return /* binding */ GetLogGroupFieldsRequest; },
/* harmony export */   "LogGroupField": function() { return /* binding */ LogGroupField; },
/* harmony export */   "GetLogGroupFieldsResponse": function() { return /* binding */ GetLogGroupFieldsResponse; },
/* harmony export */   "GetLogRecordRequest": function() { return /* binding */ GetLogRecordRequest; },
/* harmony export */   "GetLogRecordResponse": function() { return /* binding */ GetLogRecordResponse; },
/* harmony export */   "GetQueryResultsRequest": function() { return /* binding */ GetQueryResultsRequest; },
/* harmony export */   "ResultField": function() { return /* binding */ ResultField; },
/* harmony export */   "QueryStatistics": function() { return /* binding */ QueryStatistics; },
/* harmony export */   "GetQueryResultsResponse": function() { return /* binding */ GetQueryResultsResponse; },
/* harmony export */   "InputLogEvent": function() { return /* binding */ InputLogEvent; },
/* harmony export */   "InvalidSequenceTokenException": function() { return /* binding */ InvalidSequenceTokenException; },
/* harmony export */   "ListTagsLogGroupRequest": function() { return /* binding */ ListTagsLogGroupRequest; },
/* harmony export */   "ListTagsLogGroupResponse": function() { return /* binding */ ListTagsLogGroupResponse; },
/* harmony export */   "PutDestinationRequest": function() { return /* binding */ PutDestinationRequest; },
/* harmony export */   "PutDestinationResponse": function() { return /* binding */ PutDestinationResponse; },
/* harmony export */   "PutDestinationPolicyRequest": function() { return /* binding */ PutDestinationPolicyRequest; },
/* harmony export */   "PutLogEventsRequest": function() { return /* binding */ PutLogEventsRequest; },
/* harmony export */   "RejectedLogEventsInfo": function() { return /* binding */ RejectedLogEventsInfo; },
/* harmony export */   "PutLogEventsResponse": function() { return /* binding */ PutLogEventsResponse; },
/* harmony export */   "UnrecognizedClientException": function() { return /* binding */ UnrecognizedClientException; },
/* harmony export */   "PutMetricFilterRequest": function() { return /* binding */ PutMetricFilterRequest; },
/* harmony export */   "PutQueryDefinitionRequest": function() { return /* binding */ PutQueryDefinitionRequest; },
/* harmony export */   "PutQueryDefinitionResponse": function() { return /* binding */ PutQueryDefinitionResponse; },
/* harmony export */   "PutResourcePolicyRequest": function() { return /* binding */ PutResourcePolicyRequest; },
/* harmony export */   "PutResourcePolicyResponse": function() { return /* binding */ PutResourcePolicyResponse; },
/* harmony export */   "PutRetentionPolicyRequest": function() { return /* binding */ PutRetentionPolicyRequest; },
/* harmony export */   "PutSubscriptionFilterRequest": function() { return /* binding */ PutSubscriptionFilterRequest; },
/* harmony export */   "QueryCompileErrorLocation": function() { return /* binding */ QueryCompileErrorLocation; },
/* harmony export */   "QueryCompileError": function() { return /* binding */ QueryCompileError; },
/* harmony export */   "MalformedQueryException": function() { return /* binding */ MalformedQueryException; },
/* harmony export */   "StartQueryRequest": function() { return /* binding */ StartQueryRequest; },
/* harmony export */   "StartQueryResponse": function() { return /* binding */ StartQueryResponse; },
/* harmony export */   "StopQueryRequest": function() { return /* binding */ StopQueryRequest; },
/* harmony export */   "StopQueryResponse": function() { return /* binding */ StopQueryResponse; },
/* harmony export */   "TagLogGroupRequest": function() { return /* binding */ TagLogGroupRequest; },
/* harmony export */   "TestMetricFilterRequest": function() { return /* binding */ TestMetricFilterRequest; },
/* harmony export */   "MetricFilterMatchRecord": function() { return /* binding */ MetricFilterMatchRecord; },
/* harmony export */   "TestMetricFilterResponse": function() { return /* binding */ TestMetricFilterResponse; },
/* harmony export */   "UntagLogGroupRequest": function() { return /* binding */ UntagLogGroupRequest; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 3786);

var AssociateKmsKeyRequest;

(function (AssociateKmsKeyRequest) {
  AssociateKmsKeyRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(AssociateKmsKeyRequest || (AssociateKmsKeyRequest = {}));

var InvalidParameterException;

(function (InvalidParameterException) {
  InvalidParameterException.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(InvalidParameterException || (InvalidParameterException = {}));

var OperationAbortedException;

(function (OperationAbortedException) {
  OperationAbortedException.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(OperationAbortedException || (OperationAbortedException = {}));

var ResourceNotFoundException;

(function (ResourceNotFoundException) {
  ResourceNotFoundException.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(ResourceNotFoundException || (ResourceNotFoundException = {}));

var ServiceUnavailableException;

(function (ServiceUnavailableException) {
  ServiceUnavailableException.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(ServiceUnavailableException || (ServiceUnavailableException = {}));

var CancelExportTaskRequest;

(function (CancelExportTaskRequest) {
  CancelExportTaskRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(CancelExportTaskRequest || (CancelExportTaskRequest = {}));

var InvalidOperationException;

(function (InvalidOperationException) {
  InvalidOperationException.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(InvalidOperationException || (InvalidOperationException = {}));

var CreateExportTaskRequest;

(function (CreateExportTaskRequest) {
  CreateExportTaskRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(CreateExportTaskRequest || (CreateExportTaskRequest = {}));

var CreateExportTaskResponse;

(function (CreateExportTaskResponse) {
  CreateExportTaskResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(CreateExportTaskResponse || (CreateExportTaskResponse = {}));

var LimitExceededException;

(function (LimitExceededException) {
  LimitExceededException.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(LimitExceededException || (LimitExceededException = {}));

var ResourceAlreadyExistsException;

(function (ResourceAlreadyExistsException) {
  ResourceAlreadyExistsException.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(ResourceAlreadyExistsException || (ResourceAlreadyExistsException = {}));

var CreateLogGroupRequest;

(function (CreateLogGroupRequest) {
  CreateLogGroupRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(CreateLogGroupRequest || (CreateLogGroupRequest = {}));

var CreateLogStreamRequest;

(function (CreateLogStreamRequest) {
  CreateLogStreamRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(CreateLogStreamRequest || (CreateLogStreamRequest = {}));

var DataAlreadyAcceptedException;

(function (DataAlreadyAcceptedException) {
  DataAlreadyAcceptedException.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DataAlreadyAcceptedException || (DataAlreadyAcceptedException = {}));

var DeleteDestinationRequest;

(function (DeleteDestinationRequest) {
  DeleteDestinationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DeleteDestinationRequest || (DeleteDestinationRequest = {}));

var DeleteLogGroupRequest;

(function (DeleteLogGroupRequest) {
  DeleteLogGroupRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DeleteLogGroupRequest || (DeleteLogGroupRequest = {}));

var DeleteLogStreamRequest;

(function (DeleteLogStreamRequest) {
  DeleteLogStreamRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DeleteLogStreamRequest || (DeleteLogStreamRequest = {}));

var DeleteMetricFilterRequest;

(function (DeleteMetricFilterRequest) {
  DeleteMetricFilterRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DeleteMetricFilterRequest || (DeleteMetricFilterRequest = {}));

var DeleteQueryDefinitionRequest;

(function (DeleteQueryDefinitionRequest) {
  DeleteQueryDefinitionRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DeleteQueryDefinitionRequest || (DeleteQueryDefinitionRequest = {}));

var DeleteQueryDefinitionResponse;

(function (DeleteQueryDefinitionResponse) {
  DeleteQueryDefinitionResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DeleteQueryDefinitionResponse || (DeleteQueryDefinitionResponse = {}));

var DeleteResourcePolicyRequest;

(function (DeleteResourcePolicyRequest) {
  DeleteResourcePolicyRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DeleteResourcePolicyRequest || (DeleteResourcePolicyRequest = {}));

var DeleteRetentionPolicyRequest;

(function (DeleteRetentionPolicyRequest) {
  DeleteRetentionPolicyRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DeleteRetentionPolicyRequest || (DeleteRetentionPolicyRequest = {}));

var DeleteSubscriptionFilterRequest;

(function (DeleteSubscriptionFilterRequest) {
  DeleteSubscriptionFilterRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DeleteSubscriptionFilterRequest || (DeleteSubscriptionFilterRequest = {}));

var DescribeDestinationsRequest;

(function (DescribeDestinationsRequest) {
  DescribeDestinationsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeDestinationsRequest || (DescribeDestinationsRequest = {}));

var Destination;

(function (Destination) {
  Destination.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(Destination || (Destination = {}));

var DescribeDestinationsResponse;

(function (DescribeDestinationsResponse) {
  DescribeDestinationsResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeDestinationsResponse || (DescribeDestinationsResponse = {}));

var ExportTaskStatusCode;

(function (ExportTaskStatusCode) {
  ExportTaskStatusCode["CANCELLED"] = "CANCELLED";
  ExportTaskStatusCode["COMPLETED"] = "COMPLETED";
  ExportTaskStatusCode["FAILED"] = "FAILED";
  ExportTaskStatusCode["PENDING"] = "PENDING";
  ExportTaskStatusCode["PENDING_CANCEL"] = "PENDING_CANCEL";
  ExportTaskStatusCode["RUNNING"] = "RUNNING";
})(ExportTaskStatusCode || (ExportTaskStatusCode = {}));

var DescribeExportTasksRequest;

(function (DescribeExportTasksRequest) {
  DescribeExportTasksRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeExportTasksRequest || (DescribeExportTasksRequest = {}));

var ExportTaskExecutionInfo;

(function (ExportTaskExecutionInfo) {
  ExportTaskExecutionInfo.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(ExportTaskExecutionInfo || (ExportTaskExecutionInfo = {}));

var ExportTaskStatus;

(function (ExportTaskStatus) {
  ExportTaskStatus.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(ExportTaskStatus || (ExportTaskStatus = {}));

var ExportTask;

(function (ExportTask) {
  ExportTask.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(ExportTask || (ExportTask = {}));

var DescribeExportTasksResponse;

(function (DescribeExportTasksResponse) {
  DescribeExportTasksResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeExportTasksResponse || (DescribeExportTasksResponse = {}));

var DescribeLogGroupsRequest;

(function (DescribeLogGroupsRequest) {
  DescribeLogGroupsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeLogGroupsRequest || (DescribeLogGroupsRequest = {}));

var LogGroup;

(function (LogGroup) {
  LogGroup.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(LogGroup || (LogGroup = {}));

var DescribeLogGroupsResponse;

(function (DescribeLogGroupsResponse) {
  DescribeLogGroupsResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeLogGroupsResponse || (DescribeLogGroupsResponse = {}));

var OrderBy;

(function (OrderBy) {
  OrderBy["LastEventTime"] = "LastEventTime";
  OrderBy["LogStreamName"] = "LogStreamName";
})(OrderBy || (OrderBy = {}));

var DescribeLogStreamsRequest;

(function (DescribeLogStreamsRequest) {
  DescribeLogStreamsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeLogStreamsRequest || (DescribeLogStreamsRequest = {}));

var LogStream;

(function (LogStream) {
  LogStream.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(LogStream || (LogStream = {}));

var DescribeLogStreamsResponse;

(function (DescribeLogStreamsResponse) {
  DescribeLogStreamsResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeLogStreamsResponse || (DescribeLogStreamsResponse = {}));

var DescribeMetricFiltersRequest;

(function (DescribeMetricFiltersRequest) {
  DescribeMetricFiltersRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeMetricFiltersRequest || (DescribeMetricFiltersRequest = {}));

var MetricTransformation;

(function (MetricTransformation) {
  MetricTransformation.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(MetricTransformation || (MetricTransformation = {}));

var MetricFilter;

(function (MetricFilter) {
  MetricFilter.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(MetricFilter || (MetricFilter = {}));

var DescribeMetricFiltersResponse;

(function (DescribeMetricFiltersResponse) {
  DescribeMetricFiltersResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeMetricFiltersResponse || (DescribeMetricFiltersResponse = {}));

var QueryStatus;

(function (QueryStatus) {
  QueryStatus["Cancelled"] = "Cancelled";
  QueryStatus["Complete"] = "Complete";
  QueryStatus["Failed"] = "Failed";
  QueryStatus["Running"] = "Running";
  QueryStatus["Scheduled"] = "Scheduled";
})(QueryStatus || (QueryStatus = {}));

var DescribeQueriesRequest;

(function (DescribeQueriesRequest) {
  DescribeQueriesRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeQueriesRequest || (DescribeQueriesRequest = {}));

var QueryInfo;

(function (QueryInfo) {
  QueryInfo.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(QueryInfo || (QueryInfo = {}));

var DescribeQueriesResponse;

(function (DescribeQueriesResponse) {
  DescribeQueriesResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeQueriesResponse || (DescribeQueriesResponse = {}));

var DescribeQueryDefinitionsRequest;

(function (DescribeQueryDefinitionsRequest) {
  DescribeQueryDefinitionsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeQueryDefinitionsRequest || (DescribeQueryDefinitionsRequest = {}));

var QueryDefinition;

(function (QueryDefinition) {
  QueryDefinition.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(QueryDefinition || (QueryDefinition = {}));

var DescribeQueryDefinitionsResponse;

(function (DescribeQueryDefinitionsResponse) {
  DescribeQueryDefinitionsResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeQueryDefinitionsResponse || (DescribeQueryDefinitionsResponse = {}));

var DescribeResourcePoliciesRequest;

(function (DescribeResourcePoliciesRequest) {
  DescribeResourcePoliciesRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeResourcePoliciesRequest || (DescribeResourcePoliciesRequest = {}));

var ResourcePolicy;

(function (ResourcePolicy) {
  ResourcePolicy.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(ResourcePolicy || (ResourcePolicy = {}));

var DescribeResourcePoliciesResponse;

(function (DescribeResourcePoliciesResponse) {
  DescribeResourcePoliciesResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeResourcePoliciesResponse || (DescribeResourcePoliciesResponse = {}));

var DescribeSubscriptionFiltersRequest;

(function (DescribeSubscriptionFiltersRequest) {
  DescribeSubscriptionFiltersRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeSubscriptionFiltersRequest || (DescribeSubscriptionFiltersRequest = {}));

var Distribution;

(function (Distribution) {
  Distribution["ByLogStream"] = "ByLogStream";
  Distribution["Random"] = "Random";
})(Distribution || (Distribution = {}));

var SubscriptionFilter;

(function (SubscriptionFilter) {
  SubscriptionFilter.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(SubscriptionFilter || (SubscriptionFilter = {}));

var DescribeSubscriptionFiltersResponse;

(function (DescribeSubscriptionFiltersResponse) {
  DescribeSubscriptionFiltersResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DescribeSubscriptionFiltersResponse || (DescribeSubscriptionFiltersResponse = {}));

var DisassociateKmsKeyRequest;

(function (DisassociateKmsKeyRequest) {
  DisassociateKmsKeyRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(DisassociateKmsKeyRequest || (DisassociateKmsKeyRequest = {}));

var FilteredLogEvent;

(function (FilteredLogEvent) {
  FilteredLogEvent.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(FilteredLogEvent || (FilteredLogEvent = {}));

var FilterLogEventsRequest;

(function (FilterLogEventsRequest) {
  FilterLogEventsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(FilterLogEventsRequest || (FilterLogEventsRequest = {}));

var SearchedLogStream;

(function (SearchedLogStream) {
  SearchedLogStream.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(SearchedLogStream || (SearchedLogStream = {}));

var FilterLogEventsResponse;

(function (FilterLogEventsResponse) {
  FilterLogEventsResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(FilterLogEventsResponse || (FilterLogEventsResponse = {}));

var GetLogEventsRequest;

(function (GetLogEventsRequest) {
  GetLogEventsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(GetLogEventsRequest || (GetLogEventsRequest = {}));

var OutputLogEvent;

(function (OutputLogEvent) {
  OutputLogEvent.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(OutputLogEvent || (OutputLogEvent = {}));

var GetLogEventsResponse;

(function (GetLogEventsResponse) {
  GetLogEventsResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(GetLogEventsResponse || (GetLogEventsResponse = {}));

var GetLogGroupFieldsRequest;

(function (GetLogGroupFieldsRequest) {
  GetLogGroupFieldsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(GetLogGroupFieldsRequest || (GetLogGroupFieldsRequest = {}));

var LogGroupField;

(function (LogGroupField) {
  LogGroupField.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(LogGroupField || (LogGroupField = {}));

var GetLogGroupFieldsResponse;

(function (GetLogGroupFieldsResponse) {
  GetLogGroupFieldsResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(GetLogGroupFieldsResponse || (GetLogGroupFieldsResponse = {}));

var GetLogRecordRequest;

(function (GetLogRecordRequest) {
  GetLogRecordRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(GetLogRecordRequest || (GetLogRecordRequest = {}));

var GetLogRecordResponse;

(function (GetLogRecordResponse) {
  GetLogRecordResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(GetLogRecordResponse || (GetLogRecordResponse = {}));

var GetQueryResultsRequest;

(function (GetQueryResultsRequest) {
  GetQueryResultsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(GetQueryResultsRequest || (GetQueryResultsRequest = {}));

var ResultField;

(function (ResultField) {
  ResultField.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(ResultField || (ResultField = {}));

var QueryStatistics;

(function (QueryStatistics) {
  QueryStatistics.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(QueryStatistics || (QueryStatistics = {}));

var GetQueryResultsResponse;

(function (GetQueryResultsResponse) {
  GetQueryResultsResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(GetQueryResultsResponse || (GetQueryResultsResponse = {}));

var InputLogEvent;

(function (InputLogEvent) {
  InputLogEvent.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(InputLogEvent || (InputLogEvent = {}));

var InvalidSequenceTokenException;

(function (InvalidSequenceTokenException) {
  InvalidSequenceTokenException.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(InvalidSequenceTokenException || (InvalidSequenceTokenException = {}));

var ListTagsLogGroupRequest;

(function (ListTagsLogGroupRequest) {
  ListTagsLogGroupRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(ListTagsLogGroupRequest || (ListTagsLogGroupRequest = {}));

var ListTagsLogGroupResponse;

(function (ListTagsLogGroupResponse) {
  ListTagsLogGroupResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(ListTagsLogGroupResponse || (ListTagsLogGroupResponse = {}));

var PutDestinationRequest;

(function (PutDestinationRequest) {
  PutDestinationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(PutDestinationRequest || (PutDestinationRequest = {}));

var PutDestinationResponse;

(function (PutDestinationResponse) {
  PutDestinationResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(PutDestinationResponse || (PutDestinationResponse = {}));

var PutDestinationPolicyRequest;

(function (PutDestinationPolicyRequest) {
  PutDestinationPolicyRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(PutDestinationPolicyRequest || (PutDestinationPolicyRequest = {}));

var PutLogEventsRequest;

(function (PutLogEventsRequest) {
  PutLogEventsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(PutLogEventsRequest || (PutLogEventsRequest = {}));

var RejectedLogEventsInfo;

(function (RejectedLogEventsInfo) {
  RejectedLogEventsInfo.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(RejectedLogEventsInfo || (RejectedLogEventsInfo = {}));

var PutLogEventsResponse;

(function (PutLogEventsResponse) {
  PutLogEventsResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(PutLogEventsResponse || (PutLogEventsResponse = {}));

var UnrecognizedClientException;

(function (UnrecognizedClientException) {
  UnrecognizedClientException.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(UnrecognizedClientException || (UnrecognizedClientException = {}));

var PutMetricFilterRequest;

(function (PutMetricFilterRequest) {
  PutMetricFilterRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(PutMetricFilterRequest || (PutMetricFilterRequest = {}));

var PutQueryDefinitionRequest;

(function (PutQueryDefinitionRequest) {
  PutQueryDefinitionRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(PutQueryDefinitionRequest || (PutQueryDefinitionRequest = {}));

var PutQueryDefinitionResponse;

(function (PutQueryDefinitionResponse) {
  PutQueryDefinitionResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(PutQueryDefinitionResponse || (PutQueryDefinitionResponse = {}));

var PutResourcePolicyRequest;

(function (PutResourcePolicyRequest) {
  PutResourcePolicyRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(PutResourcePolicyRequest || (PutResourcePolicyRequest = {}));

var PutResourcePolicyResponse;

(function (PutResourcePolicyResponse) {
  PutResourcePolicyResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(PutResourcePolicyResponse || (PutResourcePolicyResponse = {}));

var PutRetentionPolicyRequest;

(function (PutRetentionPolicyRequest) {
  PutRetentionPolicyRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(PutRetentionPolicyRequest || (PutRetentionPolicyRequest = {}));

var PutSubscriptionFilterRequest;

(function (PutSubscriptionFilterRequest) {
  PutSubscriptionFilterRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(PutSubscriptionFilterRequest || (PutSubscriptionFilterRequest = {}));

var QueryCompileErrorLocation;

(function (QueryCompileErrorLocation) {
  QueryCompileErrorLocation.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(QueryCompileErrorLocation || (QueryCompileErrorLocation = {}));

var QueryCompileError;

(function (QueryCompileError) {
  QueryCompileError.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(QueryCompileError || (QueryCompileError = {}));

var MalformedQueryException;

(function (MalformedQueryException) {
  MalformedQueryException.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(MalformedQueryException || (MalformedQueryException = {}));

var StartQueryRequest;

(function (StartQueryRequest) {
  StartQueryRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(StartQueryRequest || (StartQueryRequest = {}));

var StartQueryResponse;

(function (StartQueryResponse) {
  StartQueryResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(StartQueryResponse || (StartQueryResponse = {}));

var StopQueryRequest;

(function (StopQueryRequest) {
  StopQueryRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(StopQueryRequest || (StopQueryRequest = {}));

var StopQueryResponse;

(function (StopQueryResponse) {
  StopQueryResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(StopQueryResponse || (StopQueryResponse = {}));

var TagLogGroupRequest;

(function (TagLogGroupRequest) {
  TagLogGroupRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(TagLogGroupRequest || (TagLogGroupRequest = {}));

var TestMetricFilterRequest;

(function (TestMetricFilterRequest) {
  TestMetricFilterRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(TestMetricFilterRequest || (TestMetricFilterRequest = {}));

var MetricFilterMatchRecord;

(function (MetricFilterMatchRecord) {
  MetricFilterMatchRecord.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(MetricFilterMatchRecord || (MetricFilterMatchRecord = {}));

var TestMetricFilterResponse;

(function (TestMetricFilterResponse) {
  TestMetricFilterResponse.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(TestMetricFilterResponse || (TestMetricFilterResponse = {}));

var UntagLogGroupRequest;

(function (UntagLogGroupRequest) {
  UntagLogGroupRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, obj);
  };
})(UntagLogGroupRequest || (UntagLogGroupRequest = {}));

/***/ }),

/***/ 80992:
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/protocols/Aws_json1_1.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "serializeAws_json1_1AssociateKmsKeyCommand": function() { return /* binding */ serializeAws_json1_1AssociateKmsKeyCommand; },
/* harmony export */   "serializeAws_json1_1CancelExportTaskCommand": function() { return /* binding */ serializeAws_json1_1CancelExportTaskCommand; },
/* harmony export */   "serializeAws_json1_1CreateExportTaskCommand": function() { return /* binding */ serializeAws_json1_1CreateExportTaskCommand; },
/* harmony export */   "serializeAws_json1_1CreateLogGroupCommand": function() { return /* binding */ serializeAws_json1_1CreateLogGroupCommand; },
/* harmony export */   "serializeAws_json1_1CreateLogStreamCommand": function() { return /* binding */ serializeAws_json1_1CreateLogStreamCommand; },
/* harmony export */   "serializeAws_json1_1DeleteDestinationCommand": function() { return /* binding */ serializeAws_json1_1DeleteDestinationCommand; },
/* harmony export */   "serializeAws_json1_1DeleteLogGroupCommand": function() { return /* binding */ serializeAws_json1_1DeleteLogGroupCommand; },
/* harmony export */   "serializeAws_json1_1DeleteLogStreamCommand": function() { return /* binding */ serializeAws_json1_1DeleteLogStreamCommand; },
/* harmony export */   "serializeAws_json1_1DeleteMetricFilterCommand": function() { return /* binding */ serializeAws_json1_1DeleteMetricFilterCommand; },
/* harmony export */   "serializeAws_json1_1DeleteQueryDefinitionCommand": function() { return /* binding */ serializeAws_json1_1DeleteQueryDefinitionCommand; },
/* harmony export */   "serializeAws_json1_1DeleteResourcePolicyCommand": function() { return /* binding */ serializeAws_json1_1DeleteResourcePolicyCommand; },
/* harmony export */   "serializeAws_json1_1DeleteRetentionPolicyCommand": function() { return /* binding */ serializeAws_json1_1DeleteRetentionPolicyCommand; },
/* harmony export */   "serializeAws_json1_1DeleteSubscriptionFilterCommand": function() { return /* binding */ serializeAws_json1_1DeleteSubscriptionFilterCommand; },
/* harmony export */   "serializeAws_json1_1DescribeDestinationsCommand": function() { return /* binding */ serializeAws_json1_1DescribeDestinationsCommand; },
/* harmony export */   "serializeAws_json1_1DescribeExportTasksCommand": function() { return /* binding */ serializeAws_json1_1DescribeExportTasksCommand; },
/* harmony export */   "serializeAws_json1_1DescribeLogGroupsCommand": function() { return /* binding */ serializeAws_json1_1DescribeLogGroupsCommand; },
/* harmony export */   "serializeAws_json1_1DescribeLogStreamsCommand": function() { return /* binding */ serializeAws_json1_1DescribeLogStreamsCommand; },
/* harmony export */   "serializeAws_json1_1DescribeMetricFiltersCommand": function() { return /* binding */ serializeAws_json1_1DescribeMetricFiltersCommand; },
/* harmony export */   "serializeAws_json1_1DescribeQueriesCommand": function() { return /* binding */ serializeAws_json1_1DescribeQueriesCommand; },
/* harmony export */   "serializeAws_json1_1DescribeQueryDefinitionsCommand": function() { return /* binding */ serializeAws_json1_1DescribeQueryDefinitionsCommand; },
/* harmony export */   "serializeAws_json1_1DescribeResourcePoliciesCommand": function() { return /* binding */ serializeAws_json1_1DescribeResourcePoliciesCommand; },
/* harmony export */   "serializeAws_json1_1DescribeSubscriptionFiltersCommand": function() { return /* binding */ serializeAws_json1_1DescribeSubscriptionFiltersCommand; },
/* harmony export */   "serializeAws_json1_1DisassociateKmsKeyCommand": function() { return /* binding */ serializeAws_json1_1DisassociateKmsKeyCommand; },
/* harmony export */   "serializeAws_json1_1FilterLogEventsCommand": function() { return /* binding */ serializeAws_json1_1FilterLogEventsCommand; },
/* harmony export */   "serializeAws_json1_1GetLogEventsCommand": function() { return /* binding */ serializeAws_json1_1GetLogEventsCommand; },
/* harmony export */   "serializeAws_json1_1GetLogGroupFieldsCommand": function() { return /* binding */ serializeAws_json1_1GetLogGroupFieldsCommand; },
/* harmony export */   "serializeAws_json1_1GetLogRecordCommand": function() { return /* binding */ serializeAws_json1_1GetLogRecordCommand; },
/* harmony export */   "serializeAws_json1_1GetQueryResultsCommand": function() { return /* binding */ serializeAws_json1_1GetQueryResultsCommand; },
/* harmony export */   "serializeAws_json1_1ListTagsLogGroupCommand": function() { return /* binding */ serializeAws_json1_1ListTagsLogGroupCommand; },
/* harmony export */   "serializeAws_json1_1PutDestinationCommand": function() { return /* binding */ serializeAws_json1_1PutDestinationCommand; },
/* harmony export */   "serializeAws_json1_1PutDestinationPolicyCommand": function() { return /* binding */ serializeAws_json1_1PutDestinationPolicyCommand; },
/* harmony export */   "serializeAws_json1_1PutLogEventsCommand": function() { return /* binding */ serializeAws_json1_1PutLogEventsCommand; },
/* harmony export */   "serializeAws_json1_1PutMetricFilterCommand": function() { return /* binding */ serializeAws_json1_1PutMetricFilterCommand; },
/* harmony export */   "serializeAws_json1_1PutQueryDefinitionCommand": function() { return /* binding */ serializeAws_json1_1PutQueryDefinitionCommand; },
/* harmony export */   "serializeAws_json1_1PutResourcePolicyCommand": function() { return /* binding */ serializeAws_json1_1PutResourcePolicyCommand; },
/* harmony export */   "serializeAws_json1_1PutRetentionPolicyCommand": function() { return /* binding */ serializeAws_json1_1PutRetentionPolicyCommand; },
/* harmony export */   "serializeAws_json1_1PutSubscriptionFilterCommand": function() { return /* binding */ serializeAws_json1_1PutSubscriptionFilterCommand; },
/* harmony export */   "serializeAws_json1_1StartQueryCommand": function() { return /* binding */ serializeAws_json1_1StartQueryCommand; },
/* harmony export */   "serializeAws_json1_1StopQueryCommand": function() { return /* binding */ serializeAws_json1_1StopQueryCommand; },
/* harmony export */   "serializeAws_json1_1TagLogGroupCommand": function() { return /* binding */ serializeAws_json1_1TagLogGroupCommand; },
/* harmony export */   "serializeAws_json1_1TestMetricFilterCommand": function() { return /* binding */ serializeAws_json1_1TestMetricFilterCommand; },
/* harmony export */   "serializeAws_json1_1UntagLogGroupCommand": function() { return /* binding */ serializeAws_json1_1UntagLogGroupCommand; },
/* harmony export */   "deserializeAws_json1_1AssociateKmsKeyCommand": function() { return /* binding */ deserializeAws_json1_1AssociateKmsKeyCommand; },
/* harmony export */   "deserializeAws_json1_1CancelExportTaskCommand": function() { return /* binding */ deserializeAws_json1_1CancelExportTaskCommand; },
/* harmony export */   "deserializeAws_json1_1CreateExportTaskCommand": function() { return /* binding */ deserializeAws_json1_1CreateExportTaskCommand; },
/* harmony export */   "deserializeAws_json1_1CreateLogGroupCommand": function() { return /* binding */ deserializeAws_json1_1CreateLogGroupCommand; },
/* harmony export */   "deserializeAws_json1_1CreateLogStreamCommand": function() { return /* binding */ deserializeAws_json1_1CreateLogStreamCommand; },
/* harmony export */   "deserializeAws_json1_1DeleteDestinationCommand": function() { return /* binding */ deserializeAws_json1_1DeleteDestinationCommand; },
/* harmony export */   "deserializeAws_json1_1DeleteLogGroupCommand": function() { return /* binding */ deserializeAws_json1_1DeleteLogGroupCommand; },
/* harmony export */   "deserializeAws_json1_1DeleteLogStreamCommand": function() { return /* binding */ deserializeAws_json1_1DeleteLogStreamCommand; },
/* harmony export */   "deserializeAws_json1_1DeleteMetricFilterCommand": function() { return /* binding */ deserializeAws_json1_1DeleteMetricFilterCommand; },
/* harmony export */   "deserializeAws_json1_1DeleteQueryDefinitionCommand": function() { return /* binding */ deserializeAws_json1_1DeleteQueryDefinitionCommand; },
/* harmony export */   "deserializeAws_json1_1DeleteResourcePolicyCommand": function() { return /* binding */ deserializeAws_json1_1DeleteResourcePolicyCommand; },
/* harmony export */   "deserializeAws_json1_1DeleteRetentionPolicyCommand": function() { return /* binding */ deserializeAws_json1_1DeleteRetentionPolicyCommand; },
/* harmony export */   "deserializeAws_json1_1DeleteSubscriptionFilterCommand": function() { return /* binding */ deserializeAws_json1_1DeleteSubscriptionFilterCommand; },
/* harmony export */   "deserializeAws_json1_1DescribeDestinationsCommand": function() { return /* binding */ deserializeAws_json1_1DescribeDestinationsCommand; },
/* harmony export */   "deserializeAws_json1_1DescribeExportTasksCommand": function() { return /* binding */ deserializeAws_json1_1DescribeExportTasksCommand; },
/* harmony export */   "deserializeAws_json1_1DescribeLogGroupsCommand": function() { return /* binding */ deserializeAws_json1_1DescribeLogGroupsCommand; },
/* harmony export */   "deserializeAws_json1_1DescribeLogStreamsCommand": function() { return /* binding */ deserializeAws_json1_1DescribeLogStreamsCommand; },
/* harmony export */   "deserializeAws_json1_1DescribeMetricFiltersCommand": function() { return /* binding */ deserializeAws_json1_1DescribeMetricFiltersCommand; },
/* harmony export */   "deserializeAws_json1_1DescribeQueriesCommand": function() { return /* binding */ deserializeAws_json1_1DescribeQueriesCommand; },
/* harmony export */   "deserializeAws_json1_1DescribeQueryDefinitionsCommand": function() { return /* binding */ deserializeAws_json1_1DescribeQueryDefinitionsCommand; },
/* harmony export */   "deserializeAws_json1_1DescribeResourcePoliciesCommand": function() { return /* binding */ deserializeAws_json1_1DescribeResourcePoliciesCommand; },
/* harmony export */   "deserializeAws_json1_1DescribeSubscriptionFiltersCommand": function() { return /* binding */ deserializeAws_json1_1DescribeSubscriptionFiltersCommand; },
/* harmony export */   "deserializeAws_json1_1DisassociateKmsKeyCommand": function() { return /* binding */ deserializeAws_json1_1DisassociateKmsKeyCommand; },
/* harmony export */   "deserializeAws_json1_1FilterLogEventsCommand": function() { return /* binding */ deserializeAws_json1_1FilterLogEventsCommand; },
/* harmony export */   "deserializeAws_json1_1GetLogEventsCommand": function() { return /* binding */ deserializeAws_json1_1GetLogEventsCommand; },
/* harmony export */   "deserializeAws_json1_1GetLogGroupFieldsCommand": function() { return /* binding */ deserializeAws_json1_1GetLogGroupFieldsCommand; },
/* harmony export */   "deserializeAws_json1_1GetLogRecordCommand": function() { return /* binding */ deserializeAws_json1_1GetLogRecordCommand; },
/* harmony export */   "deserializeAws_json1_1GetQueryResultsCommand": function() { return /* binding */ deserializeAws_json1_1GetQueryResultsCommand; },
/* harmony export */   "deserializeAws_json1_1ListTagsLogGroupCommand": function() { return /* binding */ deserializeAws_json1_1ListTagsLogGroupCommand; },
/* harmony export */   "deserializeAws_json1_1PutDestinationCommand": function() { return /* binding */ deserializeAws_json1_1PutDestinationCommand; },
/* harmony export */   "deserializeAws_json1_1PutDestinationPolicyCommand": function() { return /* binding */ deserializeAws_json1_1PutDestinationPolicyCommand; },
/* harmony export */   "deserializeAws_json1_1PutLogEventsCommand": function() { return /* binding */ deserializeAws_json1_1PutLogEventsCommand; },
/* harmony export */   "deserializeAws_json1_1PutMetricFilterCommand": function() { return /* binding */ deserializeAws_json1_1PutMetricFilterCommand; },
/* harmony export */   "deserializeAws_json1_1PutQueryDefinitionCommand": function() { return /* binding */ deserializeAws_json1_1PutQueryDefinitionCommand; },
/* harmony export */   "deserializeAws_json1_1PutResourcePolicyCommand": function() { return /* binding */ deserializeAws_json1_1PutResourcePolicyCommand; },
/* harmony export */   "deserializeAws_json1_1PutRetentionPolicyCommand": function() { return /* binding */ deserializeAws_json1_1PutRetentionPolicyCommand; },
/* harmony export */   "deserializeAws_json1_1PutSubscriptionFilterCommand": function() { return /* binding */ deserializeAws_json1_1PutSubscriptionFilterCommand; },
/* harmony export */   "deserializeAws_json1_1StartQueryCommand": function() { return /* binding */ deserializeAws_json1_1StartQueryCommand; },
/* harmony export */   "deserializeAws_json1_1StopQueryCommand": function() { return /* binding */ deserializeAws_json1_1StopQueryCommand; },
/* harmony export */   "deserializeAws_json1_1TagLogGroupCommand": function() { return /* binding */ deserializeAws_json1_1TagLogGroupCommand; },
/* harmony export */   "deserializeAws_json1_1TestMetricFilterCommand": function() { return /* binding */ deserializeAws_json1_1TestMetricFilterCommand; },
/* harmony export */   "deserializeAws_json1_1UntagLogGroupCommand": function() { return /* binding */ deserializeAws_json1_1UntagLogGroupCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);


var serializeAws_json1_1AssociateKmsKeyCommand = function serializeAws_json1_1AssociateKmsKeyCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.AssociateKmsKey"
      };
      body = JSON.stringify(serializeAws_json1_1AssociateKmsKeyRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1CancelExportTaskCommand = function serializeAws_json1_1CancelExportTaskCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.CancelExportTask"
      };
      body = JSON.stringify(serializeAws_json1_1CancelExportTaskRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1CreateExportTaskCommand = function serializeAws_json1_1CreateExportTaskCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.CreateExportTask"
      };
      body = JSON.stringify(serializeAws_json1_1CreateExportTaskRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1CreateLogGroupCommand = function serializeAws_json1_1CreateLogGroupCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.CreateLogGroup"
      };
      body = JSON.stringify(serializeAws_json1_1CreateLogGroupRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1CreateLogStreamCommand = function serializeAws_json1_1CreateLogStreamCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.CreateLogStream"
      };
      body = JSON.stringify(serializeAws_json1_1CreateLogStreamRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DeleteDestinationCommand = function serializeAws_json1_1DeleteDestinationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DeleteDestination"
      };
      body = JSON.stringify(serializeAws_json1_1DeleteDestinationRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DeleteLogGroupCommand = function serializeAws_json1_1DeleteLogGroupCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DeleteLogGroup"
      };
      body = JSON.stringify(serializeAws_json1_1DeleteLogGroupRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DeleteLogStreamCommand = function serializeAws_json1_1DeleteLogStreamCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DeleteLogStream"
      };
      body = JSON.stringify(serializeAws_json1_1DeleteLogStreamRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DeleteMetricFilterCommand = function serializeAws_json1_1DeleteMetricFilterCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DeleteMetricFilter"
      };
      body = JSON.stringify(serializeAws_json1_1DeleteMetricFilterRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DeleteQueryDefinitionCommand = function serializeAws_json1_1DeleteQueryDefinitionCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DeleteQueryDefinition"
      };
      body = JSON.stringify(serializeAws_json1_1DeleteQueryDefinitionRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DeleteResourcePolicyCommand = function serializeAws_json1_1DeleteResourcePolicyCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DeleteResourcePolicy"
      };
      body = JSON.stringify(serializeAws_json1_1DeleteResourcePolicyRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DeleteRetentionPolicyCommand = function serializeAws_json1_1DeleteRetentionPolicyCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DeleteRetentionPolicy"
      };
      body = JSON.stringify(serializeAws_json1_1DeleteRetentionPolicyRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DeleteSubscriptionFilterCommand = function serializeAws_json1_1DeleteSubscriptionFilterCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DeleteSubscriptionFilter"
      };
      body = JSON.stringify(serializeAws_json1_1DeleteSubscriptionFilterRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DescribeDestinationsCommand = function serializeAws_json1_1DescribeDestinationsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DescribeDestinations"
      };
      body = JSON.stringify(serializeAws_json1_1DescribeDestinationsRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DescribeExportTasksCommand = function serializeAws_json1_1DescribeExportTasksCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DescribeExportTasks"
      };
      body = JSON.stringify(serializeAws_json1_1DescribeExportTasksRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DescribeLogGroupsCommand = function serializeAws_json1_1DescribeLogGroupsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DescribeLogGroups"
      };
      body = JSON.stringify(serializeAws_json1_1DescribeLogGroupsRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DescribeLogStreamsCommand = function serializeAws_json1_1DescribeLogStreamsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DescribeLogStreams"
      };
      body = JSON.stringify(serializeAws_json1_1DescribeLogStreamsRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DescribeMetricFiltersCommand = function serializeAws_json1_1DescribeMetricFiltersCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DescribeMetricFilters"
      };
      body = JSON.stringify(serializeAws_json1_1DescribeMetricFiltersRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DescribeQueriesCommand = function serializeAws_json1_1DescribeQueriesCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DescribeQueries"
      };
      body = JSON.stringify(serializeAws_json1_1DescribeQueriesRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DescribeQueryDefinitionsCommand = function serializeAws_json1_1DescribeQueryDefinitionsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DescribeQueryDefinitions"
      };
      body = JSON.stringify(serializeAws_json1_1DescribeQueryDefinitionsRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DescribeResourcePoliciesCommand = function serializeAws_json1_1DescribeResourcePoliciesCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DescribeResourcePolicies"
      };
      body = JSON.stringify(serializeAws_json1_1DescribeResourcePoliciesRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DescribeSubscriptionFiltersCommand = function serializeAws_json1_1DescribeSubscriptionFiltersCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DescribeSubscriptionFilters"
      };
      body = JSON.stringify(serializeAws_json1_1DescribeSubscriptionFiltersRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1DisassociateKmsKeyCommand = function serializeAws_json1_1DisassociateKmsKeyCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.DisassociateKmsKey"
      };
      body = JSON.stringify(serializeAws_json1_1DisassociateKmsKeyRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1FilterLogEventsCommand = function serializeAws_json1_1FilterLogEventsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.FilterLogEvents"
      };
      body = JSON.stringify(serializeAws_json1_1FilterLogEventsRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1GetLogEventsCommand = function serializeAws_json1_1GetLogEventsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.GetLogEvents"
      };
      body = JSON.stringify(serializeAws_json1_1GetLogEventsRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1GetLogGroupFieldsCommand = function serializeAws_json1_1GetLogGroupFieldsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.GetLogGroupFields"
      };
      body = JSON.stringify(serializeAws_json1_1GetLogGroupFieldsRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1GetLogRecordCommand = function serializeAws_json1_1GetLogRecordCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.GetLogRecord"
      };
      body = JSON.stringify(serializeAws_json1_1GetLogRecordRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1GetQueryResultsCommand = function serializeAws_json1_1GetQueryResultsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.GetQueryResults"
      };
      body = JSON.stringify(serializeAws_json1_1GetQueryResultsRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1ListTagsLogGroupCommand = function serializeAws_json1_1ListTagsLogGroupCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.ListTagsLogGroup"
      };
      body = JSON.stringify(serializeAws_json1_1ListTagsLogGroupRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1PutDestinationCommand = function serializeAws_json1_1PutDestinationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.PutDestination"
      };
      body = JSON.stringify(serializeAws_json1_1PutDestinationRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1PutDestinationPolicyCommand = function serializeAws_json1_1PutDestinationPolicyCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.PutDestinationPolicy"
      };
      body = JSON.stringify(serializeAws_json1_1PutDestinationPolicyRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1PutLogEventsCommand = function serializeAws_json1_1PutLogEventsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.PutLogEvents"
      };
      body = JSON.stringify(serializeAws_json1_1PutLogEventsRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1PutMetricFilterCommand = function serializeAws_json1_1PutMetricFilterCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.PutMetricFilter"
      };
      body = JSON.stringify(serializeAws_json1_1PutMetricFilterRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1PutQueryDefinitionCommand = function serializeAws_json1_1PutQueryDefinitionCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.PutQueryDefinition"
      };
      body = JSON.stringify(serializeAws_json1_1PutQueryDefinitionRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1PutResourcePolicyCommand = function serializeAws_json1_1PutResourcePolicyCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.PutResourcePolicy"
      };
      body = JSON.stringify(serializeAws_json1_1PutResourcePolicyRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1PutRetentionPolicyCommand = function serializeAws_json1_1PutRetentionPolicyCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.PutRetentionPolicy"
      };
      body = JSON.stringify(serializeAws_json1_1PutRetentionPolicyRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1PutSubscriptionFilterCommand = function serializeAws_json1_1PutSubscriptionFilterCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.PutSubscriptionFilter"
      };
      body = JSON.stringify(serializeAws_json1_1PutSubscriptionFilterRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1StartQueryCommand = function serializeAws_json1_1StartQueryCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.StartQuery"
      };
      body = JSON.stringify(serializeAws_json1_1StartQueryRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1StopQueryCommand = function serializeAws_json1_1StopQueryCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.StopQuery"
      };
      body = JSON.stringify(serializeAws_json1_1StopQueryRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1TagLogGroupCommand = function serializeAws_json1_1TagLogGroupCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.TagLogGroup"
      };
      body = JSON.stringify(serializeAws_json1_1TagLogGroupRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1TestMetricFilterCommand = function serializeAws_json1_1TestMetricFilterCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.TestMetricFilter"
      };
      body = JSON.stringify(serializeAws_json1_1TestMetricFilterRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var serializeAws_json1_1UntagLogGroupCommand = function serializeAws_json1_1UntagLogGroupCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, body;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      headers = {
        "content-type": "application/x-amz-json-1.1",
        "x-amz-target": "Logs_20140328.UntagLogGroup"
      };
      body = JSON.stringify(serializeAws_json1_1UntagLogGroupRequest(input, context));
      return [2
      /*return*/
      , buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
  });
};
var deserializeAws_json1_1AssociateKmsKeyCommand = function deserializeAws_json1_1AssociateKmsKeyCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1AssociateKmsKeyCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1AssociateKmsKeyCommandError = function deserializeAws_json1_1AssociateKmsKeyCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;

    var _g;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_h) {
      switch (_h.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _g = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 8];
          }

          return [3
          /*break*/
          , 10];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 10:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _h.label = 11;

        case 11:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1CancelExportTaskCommand = function deserializeAws_json1_1CancelExportTaskCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1CancelExportTaskCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1CancelExportTaskCommandError = function deserializeAws_json1_1CancelExportTaskCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;

    var _g;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_h) {
      switch (_h.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _g = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidOperationException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidOperationException":
              return [3
              /*break*/
              , 2];

            case "InvalidParameterException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 4];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 8];
          }

          return [3
          /*break*/
          , 10];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidOperationExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 10:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _h.label = 11;

        case 11:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1CreateExportTaskCommand = function deserializeAws_json1_1CreateExportTaskCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1CreateExportTaskCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1CreateExportTaskResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1CreateExportTaskCommandError = function deserializeAws_json1_1CreateExportTaskCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;

    var _j;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_k) {
      switch (_k.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _j = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 6];

            case "ResourceAlreadyExistsException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException":
              return [3
              /*break*/
              , 8];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 10];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 10];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 12];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 12];
          }

          return [3
          /*break*/
          , 14];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_k.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 15];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_k.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 15];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_k.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 15];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_k.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 15];

        case 10:
          _g = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 11:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([_k.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 15];

        case 12:
          _h = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 13:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([_k.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 15];

        case 14:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _k.label = 15;

        case 15:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1CreateLogGroupCommand = function deserializeAws_json1_1CreateLogGroupCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1CreateLogGroupCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1CreateLogGroupCommandError = function deserializeAws_json1_1CreateLogGroupCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;

    var _h;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_j) {
      switch (_j.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _h = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 6];

            case "ResourceAlreadyExistsException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException":
              return [3
              /*break*/
              , 8];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 10];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 10];
          }

          return [3
          /*break*/
          , 12];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 10:
          _g = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 11:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 12:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _j.label = 13;

        case 13:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1CreateLogStreamCommand = function deserializeAws_json1_1CreateLogStreamCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1CreateLogStreamCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1CreateLogStreamCommandError = function deserializeAws_json1_1CreateLogStreamCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;

    var _g;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_h) {
      switch (_h.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _g = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ResourceAlreadyExistsException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException":
              return [3
              /*break*/
              , 4];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 8];
          }

          return [3
          /*break*/
          , 10];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 10:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _h.label = 11;

        case 11:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DeleteDestinationCommand = function deserializeAws_json1_1DeleteDestinationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DeleteDestinationCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DeleteDestinationCommandError = function deserializeAws_json1_1DeleteDestinationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;

    var _g;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_h) {
      switch (_h.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _g = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 8];
          }

          return [3
          /*break*/
          , 10];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 10:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _h.label = 11;

        case 11:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DeleteLogGroupCommand = function deserializeAws_json1_1DeleteLogGroupCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DeleteLogGroupCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DeleteLogGroupCommandError = function deserializeAws_json1_1DeleteLogGroupCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;

    var _g;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_h) {
      switch (_h.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _g = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 8];
          }

          return [3
          /*break*/
          , 10];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 10:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _h.label = 11;

        case 11:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DeleteLogStreamCommand = function deserializeAws_json1_1DeleteLogStreamCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DeleteLogStreamCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DeleteLogStreamCommandError = function deserializeAws_json1_1DeleteLogStreamCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;

    var _g;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_h) {
      switch (_h.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _g = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 8];
          }

          return [3
          /*break*/
          , 10];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 10:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _h.label = 11;

        case 11:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DeleteMetricFilterCommand = function deserializeAws_json1_1DeleteMetricFilterCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DeleteMetricFilterCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DeleteMetricFilterCommandError = function deserializeAws_json1_1DeleteMetricFilterCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;

    var _g;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_h) {
      switch (_h.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _g = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 8];
          }

          return [3
          /*break*/
          , 10];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 10:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _h.label = 11;

        case 11:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DeleteQueryDefinitionCommand = function deserializeAws_json1_1DeleteQueryDefinitionCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DeleteQueryDefinitionCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1DeleteQueryDefinitionResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DeleteQueryDefinitionCommandError = function deserializeAws_json1_1DeleteQueryDefinitionCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DeleteResourcePolicyCommand = function deserializeAws_json1_1DeleteResourcePolicyCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DeleteResourcePolicyCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DeleteResourcePolicyCommandError = function deserializeAws_json1_1DeleteResourcePolicyCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DeleteRetentionPolicyCommand = function deserializeAws_json1_1DeleteRetentionPolicyCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DeleteRetentionPolicyCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DeleteRetentionPolicyCommandError = function deserializeAws_json1_1DeleteRetentionPolicyCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;

    var _g;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_h) {
      switch (_h.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _g = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 8];
          }

          return [3
          /*break*/
          , 10];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 10:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _h.label = 11;

        case 11:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DeleteSubscriptionFilterCommand = function deserializeAws_json1_1DeleteSubscriptionFilterCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DeleteSubscriptionFilterCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DeleteSubscriptionFilterCommandError = function deserializeAws_json1_1DeleteSubscriptionFilterCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;

    var _g;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_h) {
      switch (_h.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _g = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 8];
          }

          return [3
          /*break*/
          , 10];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 10:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _h.label = 11;

        case 11:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DescribeDestinationsCommand = function deserializeAws_json1_1DescribeDestinationsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DescribeDestinationsCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1DescribeDestinationsResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DescribeDestinationsCommandError = function deserializeAws_json1_1DescribeDestinationsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;

    var _e;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_f) {
      switch (_f.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _e = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 4];
          }

          return [3
          /*break*/
          , 6];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 6:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _f.label = 7;

        case 7:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DescribeExportTasksCommand = function deserializeAws_json1_1DescribeExportTasksCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DescribeExportTasksCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1DescribeExportTasksResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DescribeExportTasksCommandError = function deserializeAws_json1_1DescribeExportTasksCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;

    var _e;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_f) {
      switch (_f.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _e = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 4];
          }

          return [3
          /*break*/
          , 6];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 6:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _f.label = 7;

        case 7:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DescribeLogGroupsCommand = function deserializeAws_json1_1DescribeLogGroupsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DescribeLogGroupsCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1DescribeLogGroupsResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DescribeLogGroupsCommandError = function deserializeAws_json1_1DescribeLogGroupsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;

    var _e;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_f) {
      switch (_f.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _e = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 4];
          }

          return [3
          /*break*/
          , 6];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 6:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _f.label = 7;

        case 7:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DescribeLogStreamsCommand = function deserializeAws_json1_1DescribeLogStreamsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DescribeLogStreamsCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1DescribeLogStreamsResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DescribeLogStreamsCommandError = function deserializeAws_json1_1DescribeLogStreamsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DescribeMetricFiltersCommand = function deserializeAws_json1_1DescribeMetricFiltersCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DescribeMetricFiltersCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1DescribeMetricFiltersResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DescribeMetricFiltersCommandError = function deserializeAws_json1_1DescribeMetricFiltersCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DescribeQueriesCommand = function deserializeAws_json1_1DescribeQueriesCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DescribeQueriesCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1DescribeQueriesResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DescribeQueriesCommandError = function deserializeAws_json1_1DescribeQueriesCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DescribeQueryDefinitionsCommand = function deserializeAws_json1_1DescribeQueryDefinitionsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DescribeQueryDefinitionsCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1DescribeQueryDefinitionsResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DescribeQueryDefinitionsCommandError = function deserializeAws_json1_1DescribeQueryDefinitionsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;

    var _e;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_f) {
      switch (_f.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _e = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 4];
          }

          return [3
          /*break*/
          , 6];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 6:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _f.label = 7;

        case 7:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DescribeResourcePoliciesCommand = function deserializeAws_json1_1DescribeResourcePoliciesCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DescribeResourcePoliciesCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1DescribeResourcePoliciesResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DescribeResourcePoliciesCommandError = function deserializeAws_json1_1DescribeResourcePoliciesCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;

    var _e;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_f) {
      switch (_f.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _e = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 4];
          }

          return [3
          /*break*/
          , 6];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 6:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _f.label = 7;

        case 7:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DescribeSubscriptionFiltersCommand = function deserializeAws_json1_1DescribeSubscriptionFiltersCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DescribeSubscriptionFiltersCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1DescribeSubscriptionFiltersResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DescribeSubscriptionFiltersCommandError = function deserializeAws_json1_1DescribeSubscriptionFiltersCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DisassociateKmsKeyCommand = function deserializeAws_json1_1DisassociateKmsKeyCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1DisassociateKmsKeyCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1DisassociateKmsKeyCommandError = function deserializeAws_json1_1DisassociateKmsKeyCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;

    var _g;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_h) {
      switch (_h.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _g = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 8];
          }

          return [3
          /*break*/
          , 10];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 10:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _h.label = 11;

        case 11:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1FilterLogEventsCommand = function deserializeAws_json1_1FilterLogEventsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1FilterLogEventsCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1FilterLogEventsResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1FilterLogEventsCommandError = function deserializeAws_json1_1FilterLogEventsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1GetLogEventsCommand = function deserializeAws_json1_1GetLogEventsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1GetLogEventsCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1GetLogEventsResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1GetLogEventsCommandError = function deserializeAws_json1_1GetLogEventsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1GetLogGroupFieldsCommand = function deserializeAws_json1_1GetLogGroupFieldsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1GetLogGroupFieldsCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1GetLogGroupFieldsResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1GetLogGroupFieldsCommandError = function deserializeAws_json1_1GetLogGroupFieldsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;

    var _g;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_h) {
      switch (_h.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _g = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 8];
          }

          return [3
          /*break*/
          , 10];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 10:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _h.label = 11;

        case 11:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1GetLogRecordCommand = function deserializeAws_json1_1GetLogRecordCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1GetLogRecordCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1GetLogRecordResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1GetLogRecordCommandError = function deserializeAws_json1_1GetLogRecordCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;

    var _g;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_h) {
      switch (_h.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _g = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 8];
          }

          return [3
          /*break*/
          , 10];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 10:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _h.label = 11;

        case 11:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1GetQueryResultsCommand = function deserializeAws_json1_1GetQueryResultsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1GetQueryResultsCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1GetQueryResultsResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1GetQueryResultsCommandError = function deserializeAws_json1_1GetQueryResultsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1ListTagsLogGroupCommand = function deserializeAws_json1_1ListTagsLogGroupCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1ListTagsLogGroupCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1ListTagsLogGroupResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1ListTagsLogGroupCommandError = function deserializeAws_json1_1ListTagsLogGroupCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;

    var _e;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_f) {
      switch (_f.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _e = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 2];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 4];
          }

          return [3
          /*break*/
          , 6];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 6:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _f.label = 7;

        case 7:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1PutDestinationCommand = function deserializeAws_json1_1PutDestinationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1PutDestinationCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1PutDestinationResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1PutDestinationCommandError = function deserializeAws_json1_1PutDestinationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1PutDestinationPolicyCommand = function deserializeAws_json1_1PutDestinationPolicyCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1PutDestinationPolicyCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1PutDestinationPolicyCommandError = function deserializeAws_json1_1PutDestinationPolicyCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1PutLogEventsCommand = function deserializeAws_json1_1PutLogEventsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1PutLogEventsCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1PutLogEventsResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1PutLogEventsCommandError = function deserializeAws_json1_1PutLogEventsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;

    var _j;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_k) {
      switch (_k.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _j = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "DataAlreadyAcceptedException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#DataAlreadyAcceptedException":
              return [3
              /*break*/
              , 2];

            case "InvalidParameterException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 4];

            case "InvalidSequenceTokenException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#InvalidSequenceTokenException":
              return [3
              /*break*/
              , 6];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 8];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 10];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 10];

            case "UnrecognizedClientException":
              return [3
              /*break*/
              , 12];

            case "com.amazonaws.cloudwatchlogs#UnrecognizedClientException":
              return [3
              /*break*/
              , 12];
          }

          return [3
          /*break*/
          , 14];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1DataAlreadyAcceptedExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_k.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 15];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_k.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 15];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidSequenceTokenExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_k.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 15];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_k.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 15];

        case 10:
          _g = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 11:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([_k.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 15];

        case 12:
          _h = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1UnrecognizedClientExceptionResponse(parsedOutput, context)];

        case 13:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _h.concat([_k.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 15];

        case 14:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _k.label = 15;

        case 15:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1PutMetricFilterCommand = function deserializeAws_json1_1PutMetricFilterCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1PutMetricFilterCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1PutMetricFilterCommandError = function deserializeAws_json1_1PutMetricFilterCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;

    var _h;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_j) {
      switch (_j.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _h = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 6];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 8];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 10];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 10];
          }

          return [3
          /*break*/
          , 12];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 10:
          _g = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 11:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 12:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _j.label = 13;

        case 13:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1PutQueryDefinitionCommand = function deserializeAws_json1_1PutQueryDefinitionCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1PutQueryDefinitionCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1PutQueryDefinitionResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1PutQueryDefinitionCommandError = function deserializeAws_json1_1PutQueryDefinitionCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1PutResourcePolicyCommand = function deserializeAws_json1_1PutResourcePolicyCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1PutResourcePolicyCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1PutResourcePolicyResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1PutResourcePolicyCommandError = function deserializeAws_json1_1PutResourcePolicyCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1PutRetentionPolicyCommand = function deserializeAws_json1_1PutRetentionPolicyCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1PutRetentionPolicyCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1PutRetentionPolicyCommandError = function deserializeAws_json1_1PutRetentionPolicyCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;

    var _g;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_h) {
      switch (_h.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _g = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 4];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 6];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 8];
          }

          return [3
          /*break*/
          , 10];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_h.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 11];

        case 10:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _h.label = 11;

        case 11:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1PutSubscriptionFilterCommand = function deserializeAws_json1_1PutSubscriptionFilterCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1PutSubscriptionFilterCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1PutSubscriptionFilterCommandError = function deserializeAws_json1_1PutSubscriptionFilterCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;

    var _h;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_j) {
      switch (_j.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _h = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "OperationAbortedException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#OperationAbortedException":
              return [3
              /*break*/
              , 6];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 8];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 10];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 10];
          }

          return [3
          /*break*/
          , 12];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 10:
          _g = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 11:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 12:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _j.label = 13;

        case 13:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1StartQueryCommand = function deserializeAws_json1_1StartQueryCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1StartQueryCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1StartQueryResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1StartQueryCommandError = function deserializeAws_json1_1StartQueryCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;

    var _h;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_j) {
      switch (_j.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _h = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#LimitExceededException":
              return [3
              /*break*/
              , 4];

            case "MalformedQueryException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#MalformedQueryException":
              return [3
              /*break*/
              , 6];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 8];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 8];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 10];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 10];
          }

          return [3
          /*break*/
          , 12];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1MalformedQueryExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 8:
          _f = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 9:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _f.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 10:
          _g = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 11:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _g.concat([_j.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 13];

        case 12:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _j.label = 13;

        case 13:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1StopQueryCommand = function deserializeAws_json1_1StopQueryCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1StopQueryCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1StopQueryResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1StopQueryCommandError = function deserializeAws_json1_1StopQueryCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;

    var _f;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_g) {
      switch (_g.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _f = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 6];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 6];
          }

          return [3
          /*break*/
          , 8];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 6:
          _e = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 7:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _e.concat([_g.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 9];

        case 8:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _g.label = 9;

        case 9:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1TagLogGroupCommand = function deserializeAws_json1_1TagLogGroupCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1TagLogGroupCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1TagLogGroupCommandError = function deserializeAws_json1_1TagLogGroupCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;

    var _e;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_f) {
      switch (_f.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _e = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 4];
          }

          return [3
          /*break*/
          , 6];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 6:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _f.label = 7;

        case 7:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1TestMetricFilterCommand = function deserializeAws_json1_1TestMetricFilterCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var data, contents, response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1TestMetricFilterCommandError(output, context)];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents = {};
          contents = deserializeAws_json1_1TestMetricFilterResponse(data, context);
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
            $metadata: deserializeMetadata(output)
          }, contents);
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1TestMetricFilterCommandError = function deserializeAws_json1_1TestMetricFilterCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;

    var _e;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_f) {
      switch (_f.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _e = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#InvalidParameterException":
              return [3
              /*break*/
              , 2];

            case "ServiceUnavailableException":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.cloudwatchlogs#ServiceUnavailableException":
              return [3
              /*break*/
              , 4];
          }

          return [3
          /*break*/
          , 6];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _d.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 6:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _f.label = 7;

        case 7:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1UntagLogGroupCommand = function deserializeAws_json1_1UntagLogGroupCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var response;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_json1_1UntagLogGroupCommandError(output, context)];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          response = {
            $metadata: deserializeMetadata(output)
          };
          return [2
          /*return*/
          , Promise.resolve(response)];
      }
    });
  });
};

var deserializeAws_json1_1UntagLogGroupCommandError = function deserializeAws_json1_1UntagLogGroupCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;

    var _d;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_e) {
      switch (_e.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, output)];
          _d = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
          errorCode = "UnknownError";
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "ResourceNotFoundException":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.cloudwatchlogs#ResourceNotFoundException":
              return [3
              /*break*/
              , 2];
          }

          return [3
          /*break*/
          , 4];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_1__.__assign.apply(void 0, _c.concat([_e.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 5];

        case 4:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _e.label = 5;

        case 5:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_json1_1DataAlreadyAcceptedExceptionResponse = function deserializeAws_json1_1DataAlreadyAcceptedExceptionResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      body = parsedOutput.body;
      deserialized = deserializeAws_json1_1DataAlreadyAcceptedException(body, context);
      contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
        name: "DataAlreadyAcceptedException",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      }, deserialized);
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_json1_1InvalidOperationExceptionResponse = function deserializeAws_json1_1InvalidOperationExceptionResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      body = parsedOutput.body;
      deserialized = deserializeAws_json1_1InvalidOperationException(body, context);
      contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
        name: "InvalidOperationException",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      }, deserialized);
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_json1_1InvalidParameterExceptionResponse = function deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      body = parsedOutput.body;
      deserialized = deserializeAws_json1_1InvalidParameterException(body, context);
      contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
        name: "InvalidParameterException",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      }, deserialized);
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_json1_1InvalidSequenceTokenExceptionResponse = function deserializeAws_json1_1InvalidSequenceTokenExceptionResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      body = parsedOutput.body;
      deserialized = deserializeAws_json1_1InvalidSequenceTokenException(body, context);
      contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
        name: "InvalidSequenceTokenException",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      }, deserialized);
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_json1_1LimitExceededExceptionResponse = function deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      body = parsedOutput.body;
      deserialized = deserializeAws_json1_1LimitExceededException(body, context);
      contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
        name: "LimitExceededException",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      }, deserialized);
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_json1_1MalformedQueryExceptionResponse = function deserializeAws_json1_1MalformedQueryExceptionResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      body = parsedOutput.body;
      deserialized = deserializeAws_json1_1MalformedQueryException(body, context);
      contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
        name: "MalformedQueryException",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      }, deserialized);
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_json1_1OperationAbortedExceptionResponse = function deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      body = parsedOutput.body;
      deserialized = deserializeAws_json1_1OperationAbortedException(body, context);
      contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
        name: "OperationAbortedException",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      }, deserialized);
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse = function deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      body = parsedOutput.body;
      deserialized = deserializeAws_json1_1ResourceAlreadyExistsException(body, context);
      contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
        name: "ResourceAlreadyExistsException",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      }, deserialized);
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_json1_1ResourceNotFoundExceptionResponse = function deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      body = parsedOutput.body;
      deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);
      contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
        name: "ResourceNotFoundException",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      }, deserialized);
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_json1_1ServiceUnavailableExceptionResponse = function deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      body = parsedOutput.body;
      deserialized = deserializeAws_json1_1ServiceUnavailableException(body, context);
      contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
        name: "ServiceUnavailableException",
        $fault: "server",
        $metadata: deserializeMetadata(parsedOutput)
      }, deserialized);
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_json1_1UnrecognizedClientExceptionResponse = function deserializeAws_json1_1UnrecognizedClientExceptionResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      body = parsedOutput.body;
      deserialized = deserializeAws_json1_1UnrecognizedClientException(body, context);
      contents = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
        name: "UnrecognizedClientException",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      }, deserialized);
      return [2
      /*return*/
      , contents];
    });
  });
};

var serializeAws_json1_1AssociateKmsKeyRequest = function serializeAws_json1_1AssociateKmsKeyRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.kmsKeyId !== undefined && input.kmsKeyId !== null && {
    kmsKeyId: input.kmsKeyId
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  });
};

var serializeAws_json1_1CancelExportTaskRequest = function serializeAws_json1_1CancelExportTaskRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.taskId !== undefined && input.taskId !== null && {
    taskId: input.taskId
  });
};

var serializeAws_json1_1CreateExportTaskRequest = function serializeAws_json1_1CreateExportTaskRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.destination !== undefined && input.destination !== null && {
    destination: input.destination
  }), input.destinationPrefix !== undefined && input.destinationPrefix !== null && {
    destinationPrefix: input.destinationPrefix
  }), input.from !== undefined && input.from !== null && {
    from: input.from
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.logStreamNamePrefix !== undefined && input.logStreamNamePrefix !== null && {
    logStreamNamePrefix: input.logStreamNamePrefix
  }), input.taskName !== undefined && input.taskName !== null && {
    taskName: input.taskName
  }), input.to !== undefined && input.to !== null && {
    to: input.to
  });
};

var serializeAws_json1_1CreateLogGroupRequest = function serializeAws_json1_1CreateLogGroupRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.kmsKeyId !== undefined && input.kmsKeyId !== null && {
    kmsKeyId: input.kmsKeyId
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.tags !== undefined && input.tags !== null && {
    tags: serializeAws_json1_1Tags(input.tags, context)
  });
};

var serializeAws_json1_1CreateLogStreamRequest = function serializeAws_json1_1CreateLogStreamRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.logStreamName !== undefined && input.logStreamName !== null && {
    logStreamName: input.logStreamName
  });
};

var serializeAws_json1_1DeleteDestinationRequest = function serializeAws_json1_1DeleteDestinationRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.destinationName !== undefined && input.destinationName !== null && {
    destinationName: input.destinationName
  });
};

var serializeAws_json1_1DeleteLogGroupRequest = function serializeAws_json1_1DeleteLogGroupRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  });
};

var serializeAws_json1_1DeleteLogStreamRequest = function serializeAws_json1_1DeleteLogStreamRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.logStreamName !== undefined && input.logStreamName !== null && {
    logStreamName: input.logStreamName
  });
};

var serializeAws_json1_1DeleteMetricFilterRequest = function serializeAws_json1_1DeleteMetricFilterRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.filterName !== undefined && input.filterName !== null && {
    filterName: input.filterName
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  });
};

var serializeAws_json1_1DeleteQueryDefinitionRequest = function serializeAws_json1_1DeleteQueryDefinitionRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.queryDefinitionId !== undefined && input.queryDefinitionId !== null && {
    queryDefinitionId: input.queryDefinitionId
  });
};

var serializeAws_json1_1DeleteResourcePolicyRequest = function serializeAws_json1_1DeleteResourcePolicyRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.policyName !== undefined && input.policyName !== null && {
    policyName: input.policyName
  });
};

var serializeAws_json1_1DeleteRetentionPolicyRequest = function serializeAws_json1_1DeleteRetentionPolicyRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  });
};

var serializeAws_json1_1DeleteSubscriptionFilterRequest = function serializeAws_json1_1DeleteSubscriptionFilterRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.filterName !== undefined && input.filterName !== null && {
    filterName: input.filterName
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  });
};

var serializeAws_json1_1DescribeDestinationsRequest = function serializeAws_json1_1DescribeDestinationsRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.DestinationNamePrefix !== undefined && input.DestinationNamePrefix !== null && {
    DestinationNamePrefix: input.DestinationNamePrefix
  }), input.limit !== undefined && input.limit !== null && {
    limit: input.limit
  }), input.nextToken !== undefined && input.nextToken !== null && {
    nextToken: input.nextToken
  });
};

var serializeAws_json1_1DescribeExportTasksRequest = function serializeAws_json1_1DescribeExportTasksRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.limit !== undefined && input.limit !== null && {
    limit: input.limit
  }), input.nextToken !== undefined && input.nextToken !== null && {
    nextToken: input.nextToken
  }), input.statusCode !== undefined && input.statusCode !== null && {
    statusCode: input.statusCode
  }), input.taskId !== undefined && input.taskId !== null && {
    taskId: input.taskId
  });
};

var serializeAws_json1_1DescribeLogGroupsRequest = function serializeAws_json1_1DescribeLogGroupsRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.limit !== undefined && input.limit !== null && {
    limit: input.limit
  }), input.logGroupNamePrefix !== undefined && input.logGroupNamePrefix !== null && {
    logGroupNamePrefix: input.logGroupNamePrefix
  }), input.nextToken !== undefined && input.nextToken !== null && {
    nextToken: input.nextToken
  });
};

var serializeAws_json1_1DescribeLogStreamsRequest = function serializeAws_json1_1DescribeLogStreamsRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.descending !== undefined && input.descending !== null && {
    descending: input.descending
  }), input.limit !== undefined && input.limit !== null && {
    limit: input.limit
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.logStreamNamePrefix !== undefined && input.logStreamNamePrefix !== null && {
    logStreamNamePrefix: input.logStreamNamePrefix
  }), input.nextToken !== undefined && input.nextToken !== null && {
    nextToken: input.nextToken
  }), input.orderBy !== undefined && input.orderBy !== null && {
    orderBy: input.orderBy
  });
};

var serializeAws_json1_1DescribeMetricFiltersRequest = function serializeAws_json1_1DescribeMetricFiltersRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.filterNamePrefix !== undefined && input.filterNamePrefix !== null && {
    filterNamePrefix: input.filterNamePrefix
  }), input.limit !== undefined && input.limit !== null && {
    limit: input.limit
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.metricName !== undefined && input.metricName !== null && {
    metricName: input.metricName
  }), input.metricNamespace !== undefined && input.metricNamespace !== null && {
    metricNamespace: input.metricNamespace
  }), input.nextToken !== undefined && input.nextToken !== null && {
    nextToken: input.nextToken
  });
};

var serializeAws_json1_1DescribeQueriesRequest = function serializeAws_json1_1DescribeQueriesRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.maxResults !== undefined && input.maxResults !== null && {
    maxResults: input.maxResults
  }), input.nextToken !== undefined && input.nextToken !== null && {
    nextToken: input.nextToken
  }), input.status !== undefined && input.status !== null && {
    status: input.status
  });
};

var serializeAws_json1_1DescribeQueryDefinitionsRequest = function serializeAws_json1_1DescribeQueryDefinitionsRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.maxResults !== undefined && input.maxResults !== null && {
    maxResults: input.maxResults
  }), input.nextToken !== undefined && input.nextToken !== null && {
    nextToken: input.nextToken
  }), input.queryDefinitionNamePrefix !== undefined && input.queryDefinitionNamePrefix !== null && {
    queryDefinitionNamePrefix: input.queryDefinitionNamePrefix
  });
};

var serializeAws_json1_1DescribeResourcePoliciesRequest = function serializeAws_json1_1DescribeResourcePoliciesRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.limit !== undefined && input.limit !== null && {
    limit: input.limit
  }), input.nextToken !== undefined && input.nextToken !== null && {
    nextToken: input.nextToken
  });
};

var serializeAws_json1_1DescribeSubscriptionFiltersRequest = function serializeAws_json1_1DescribeSubscriptionFiltersRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.filterNamePrefix !== undefined && input.filterNamePrefix !== null && {
    filterNamePrefix: input.filterNamePrefix
  }), input.limit !== undefined && input.limit !== null && {
    limit: input.limit
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.nextToken !== undefined && input.nextToken !== null && {
    nextToken: input.nextToken
  });
};

var serializeAws_json1_1DisassociateKmsKeyRequest = function serializeAws_json1_1DisassociateKmsKeyRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  });
};

var serializeAws_json1_1FilterLogEventsRequest = function serializeAws_json1_1FilterLogEventsRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.endTime !== undefined && input.endTime !== null && {
    endTime: input.endTime
  }), input.filterPattern !== undefined && input.filterPattern !== null && {
    filterPattern: input.filterPattern
  }), input.interleaved !== undefined && input.interleaved !== null && {
    interleaved: input.interleaved
  }), input.limit !== undefined && input.limit !== null && {
    limit: input.limit
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.logStreamNamePrefix !== undefined && input.logStreamNamePrefix !== null && {
    logStreamNamePrefix: input.logStreamNamePrefix
  }), input.logStreamNames !== undefined && input.logStreamNames !== null && {
    logStreamNames: serializeAws_json1_1InputLogStreamNames(input.logStreamNames, context)
  }), input.nextToken !== undefined && input.nextToken !== null && {
    nextToken: input.nextToken
  }), input.startTime !== undefined && input.startTime !== null && {
    startTime: input.startTime
  });
};

var serializeAws_json1_1GetLogEventsRequest = function serializeAws_json1_1GetLogEventsRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.endTime !== undefined && input.endTime !== null && {
    endTime: input.endTime
  }), input.limit !== undefined && input.limit !== null && {
    limit: input.limit
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.logStreamName !== undefined && input.logStreamName !== null && {
    logStreamName: input.logStreamName
  }), input.nextToken !== undefined && input.nextToken !== null && {
    nextToken: input.nextToken
  }), input.startFromHead !== undefined && input.startFromHead !== null && {
    startFromHead: input.startFromHead
  }), input.startTime !== undefined && input.startTime !== null && {
    startTime: input.startTime
  });
};

var serializeAws_json1_1GetLogGroupFieldsRequest = function serializeAws_json1_1GetLogGroupFieldsRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.time !== undefined && input.time !== null && {
    time: input.time
  });
};

var serializeAws_json1_1GetLogRecordRequest = function serializeAws_json1_1GetLogRecordRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logRecordPointer !== undefined && input.logRecordPointer !== null && {
    logRecordPointer: input.logRecordPointer
  });
};

var serializeAws_json1_1GetQueryResultsRequest = function serializeAws_json1_1GetQueryResultsRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.queryId !== undefined && input.queryId !== null && {
    queryId: input.queryId
  });
};

var serializeAws_json1_1InputLogEvent = function serializeAws_json1_1InputLogEvent(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.message !== undefined && input.message !== null && {
    message: input.message
  }), input.timestamp !== undefined && input.timestamp !== null && {
    timestamp: input.timestamp
  });
};

var serializeAws_json1_1InputLogEvents = function serializeAws_json1_1InputLogEvents(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return serializeAws_json1_1InputLogEvent(entry, context);
  });
};

var serializeAws_json1_1InputLogStreamNames = function serializeAws_json1_1InputLogStreamNames(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return entry;
  });
};

var serializeAws_json1_1ListTagsLogGroupRequest = function serializeAws_json1_1ListTagsLogGroupRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  });
};

var serializeAws_json1_1LogGroupNames = function serializeAws_json1_1LogGroupNames(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return entry;
  });
};

var serializeAws_json1_1MetricTransformation = function serializeAws_json1_1MetricTransformation(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.defaultValue !== undefined && input.defaultValue !== null && {
    defaultValue: input.defaultValue
  }), input.metricName !== undefined && input.metricName !== null && {
    metricName: input.metricName
  }), input.metricNamespace !== undefined && input.metricNamespace !== null && {
    metricNamespace: input.metricNamespace
  }), input.metricValue !== undefined && input.metricValue !== null && {
    metricValue: input.metricValue
  });
};

var serializeAws_json1_1MetricTransformations = function serializeAws_json1_1MetricTransformations(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return serializeAws_json1_1MetricTransformation(entry, context);
  });
};

var serializeAws_json1_1PutDestinationPolicyRequest = function serializeAws_json1_1PutDestinationPolicyRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.accessPolicy !== undefined && input.accessPolicy !== null && {
    accessPolicy: input.accessPolicy
  }), input.destinationName !== undefined && input.destinationName !== null && {
    destinationName: input.destinationName
  });
};

var serializeAws_json1_1PutDestinationRequest = function serializeAws_json1_1PutDestinationRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.destinationName !== undefined && input.destinationName !== null && {
    destinationName: input.destinationName
  }), input.roleArn !== undefined && input.roleArn !== null && {
    roleArn: input.roleArn
  }), input.targetArn !== undefined && input.targetArn !== null && {
    targetArn: input.targetArn
  });
};

var serializeAws_json1_1PutLogEventsRequest = function serializeAws_json1_1PutLogEventsRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logEvents !== undefined && input.logEvents !== null && {
    logEvents: serializeAws_json1_1InputLogEvents(input.logEvents, context)
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.logStreamName !== undefined && input.logStreamName !== null && {
    logStreamName: input.logStreamName
  }), input.sequenceToken !== undefined && input.sequenceToken !== null && {
    sequenceToken: input.sequenceToken
  });
};

var serializeAws_json1_1PutMetricFilterRequest = function serializeAws_json1_1PutMetricFilterRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.filterName !== undefined && input.filterName !== null && {
    filterName: input.filterName
  }), input.filterPattern !== undefined && input.filterPattern !== null && {
    filterPattern: input.filterPattern
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.metricTransformations !== undefined && input.metricTransformations !== null && {
    metricTransformations: serializeAws_json1_1MetricTransformations(input.metricTransformations, context)
  });
};

var serializeAws_json1_1PutQueryDefinitionRequest = function serializeAws_json1_1PutQueryDefinitionRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logGroupNames !== undefined && input.logGroupNames !== null && {
    logGroupNames: serializeAws_json1_1LogGroupNames(input.logGroupNames, context)
  }), input.name !== undefined && input.name !== null && {
    name: input.name
  }), input.queryDefinitionId !== undefined && input.queryDefinitionId !== null && {
    queryDefinitionId: input.queryDefinitionId
  }), input.queryString !== undefined && input.queryString !== null && {
    queryString: input.queryString
  });
};

var serializeAws_json1_1PutResourcePolicyRequest = function serializeAws_json1_1PutResourcePolicyRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.policyDocument !== undefined && input.policyDocument !== null && {
    policyDocument: input.policyDocument
  }), input.policyName !== undefined && input.policyName !== null && {
    policyName: input.policyName
  });
};

var serializeAws_json1_1PutRetentionPolicyRequest = function serializeAws_json1_1PutRetentionPolicyRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.retentionInDays !== undefined && input.retentionInDays !== null && {
    retentionInDays: input.retentionInDays
  });
};

var serializeAws_json1_1PutSubscriptionFilterRequest = function serializeAws_json1_1PutSubscriptionFilterRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.destinationArn !== undefined && input.destinationArn !== null && {
    destinationArn: input.destinationArn
  }), input.distribution !== undefined && input.distribution !== null && {
    distribution: input.distribution
  }), input.filterName !== undefined && input.filterName !== null && {
    filterName: input.filterName
  }), input.filterPattern !== undefined && input.filterPattern !== null && {
    filterPattern: input.filterPattern
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.roleArn !== undefined && input.roleArn !== null && {
    roleArn: input.roleArn
  });
};

var serializeAws_json1_1StartQueryRequest = function serializeAws_json1_1StartQueryRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.endTime !== undefined && input.endTime !== null && {
    endTime: input.endTime
  }), input.limit !== undefined && input.limit !== null && {
    limit: input.limit
  }), input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.logGroupNames !== undefined && input.logGroupNames !== null && {
    logGroupNames: serializeAws_json1_1LogGroupNames(input.logGroupNames, context)
  }), input.queryString !== undefined && input.queryString !== null && {
    queryString: input.queryString
  }), input.startTime !== undefined && input.startTime !== null && {
    startTime: input.startTime
  });
};

var serializeAws_json1_1StopQueryRequest = function serializeAws_json1_1StopQueryRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.queryId !== undefined && input.queryId !== null && {
    queryId: input.queryId
  });
};

var serializeAws_json1_1TagList = function serializeAws_json1_1TagList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return entry;
  });
};

var serializeAws_json1_1TagLogGroupRequest = function serializeAws_json1_1TagLogGroupRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.tags !== undefined && input.tags !== null && {
    tags: serializeAws_json1_1Tags(input.tags, context)
  });
};

var serializeAws_json1_1Tags = function serializeAws_json1_1Tags(input, context) {
  return Object.entries(input).reduce(function (acc, _a) {
    var _b;

    var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2),
        key = _c[0],
        value = _c[1];

    if (value === null) {
      return acc;
    }

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, acc), (_b = {}, _b[key] = value, _b));
  }, {});
};

var serializeAws_json1_1TestEventMessages = function serializeAws_json1_1TestEventMessages(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return entry;
  });
};

var serializeAws_json1_1TestMetricFilterRequest = function serializeAws_json1_1TestMetricFilterRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.filterPattern !== undefined && input.filterPattern !== null && {
    filterPattern: input.filterPattern
  }), input.logEventMessages !== undefined && input.logEventMessages !== null && {
    logEventMessages: serializeAws_json1_1TestEventMessages(input.logEventMessages, context)
  });
};

var serializeAws_json1_1UntagLogGroupRequest = function serializeAws_json1_1UntagLogGroupRequest(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, input.logGroupName !== undefined && input.logGroupName !== null && {
    logGroupName: input.logGroupName
  }), input.tags !== undefined && input.tags !== null && {
    tags: serializeAws_json1_1TagList(input.tags, context)
  });
};

var deserializeAws_json1_1CreateExportTaskResponse = function deserializeAws_json1_1CreateExportTaskResponse(output, context) {
  return {
    taskId: output.taskId !== undefined && output.taskId !== null ? output.taskId : undefined
  };
};

var deserializeAws_json1_1DataAlreadyAcceptedException = function deserializeAws_json1_1DataAlreadyAcceptedException(output, context) {
  return {
    expectedSequenceToken: output.expectedSequenceToken !== undefined && output.expectedSequenceToken !== null ? output.expectedSequenceToken : undefined,
    message: output.message !== undefined && output.message !== null ? output.message : undefined
  };
};

var deserializeAws_json1_1DeleteQueryDefinitionResponse = function deserializeAws_json1_1DeleteQueryDefinitionResponse(output, context) {
  return {
    success: output.success !== undefined && output.success !== null ? output.success : undefined
  };
};

var deserializeAws_json1_1DescribeDestinationsResponse = function deserializeAws_json1_1DescribeDestinationsResponse(output, context) {
  return {
    destinations: output.destinations !== undefined && output.destinations !== null ? deserializeAws_json1_1Destinations(output.destinations, context) : undefined,
    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined
  };
};

var deserializeAws_json1_1DescribeExportTasksResponse = function deserializeAws_json1_1DescribeExportTasksResponse(output, context) {
  return {
    exportTasks: output.exportTasks !== undefined && output.exportTasks !== null ? deserializeAws_json1_1ExportTasks(output.exportTasks, context) : undefined,
    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined
  };
};

var deserializeAws_json1_1DescribeLogGroupsResponse = function deserializeAws_json1_1DescribeLogGroupsResponse(output, context) {
  return {
    logGroups: output.logGroups !== undefined && output.logGroups !== null ? deserializeAws_json1_1LogGroups(output.logGroups, context) : undefined,
    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined
  };
};

var deserializeAws_json1_1DescribeLogStreamsResponse = function deserializeAws_json1_1DescribeLogStreamsResponse(output, context) {
  return {
    logStreams: output.logStreams !== undefined && output.logStreams !== null ? deserializeAws_json1_1LogStreams(output.logStreams, context) : undefined,
    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined
  };
};

var deserializeAws_json1_1DescribeMetricFiltersResponse = function deserializeAws_json1_1DescribeMetricFiltersResponse(output, context) {
  return {
    metricFilters: output.metricFilters !== undefined && output.metricFilters !== null ? deserializeAws_json1_1MetricFilters(output.metricFilters, context) : undefined,
    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined
  };
};

var deserializeAws_json1_1DescribeQueriesResponse = function deserializeAws_json1_1DescribeQueriesResponse(output, context) {
  return {
    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,
    queries: output.queries !== undefined && output.queries !== null ? deserializeAws_json1_1QueryInfoList(output.queries, context) : undefined
  };
};

var deserializeAws_json1_1DescribeQueryDefinitionsResponse = function deserializeAws_json1_1DescribeQueryDefinitionsResponse(output, context) {
  return {
    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,
    queryDefinitions: output.queryDefinitions !== undefined && output.queryDefinitions !== null ? deserializeAws_json1_1QueryDefinitionList(output.queryDefinitions, context) : undefined
  };
};

var deserializeAws_json1_1DescribeResourcePoliciesResponse = function deserializeAws_json1_1DescribeResourcePoliciesResponse(output, context) {
  return {
    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,
    resourcePolicies: output.resourcePolicies !== undefined && output.resourcePolicies !== null ? deserializeAws_json1_1ResourcePolicies(output.resourcePolicies, context) : undefined
  };
};

var deserializeAws_json1_1DescribeSubscriptionFiltersResponse = function deserializeAws_json1_1DescribeSubscriptionFiltersResponse(output, context) {
  return {
    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,
    subscriptionFilters: output.subscriptionFilters !== undefined && output.subscriptionFilters !== null ? deserializeAws_json1_1SubscriptionFilters(output.subscriptionFilters, context) : undefined
  };
};

var deserializeAws_json1_1Destination = function deserializeAws_json1_1Destination(output, context) {
  return {
    accessPolicy: output.accessPolicy !== undefined && output.accessPolicy !== null ? output.accessPolicy : undefined,
    arn: output.arn !== undefined && output.arn !== null ? output.arn : undefined,
    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,
    destinationName: output.destinationName !== undefined && output.destinationName !== null ? output.destinationName : undefined,
    roleArn: output.roleArn !== undefined && output.roleArn !== null ? output.roleArn : undefined,
    targetArn: output.targetArn !== undefined && output.targetArn !== null ? output.targetArn : undefined
  };
};

var deserializeAws_json1_1Destinations = function deserializeAws_json1_1Destinations(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1Destination(entry, context);
  });
};

var deserializeAws_json1_1ExportTask = function deserializeAws_json1_1ExportTask(output, context) {
  return {
    destination: output.destination !== undefined && output.destination !== null ? output.destination : undefined,
    destinationPrefix: output.destinationPrefix !== undefined && output.destinationPrefix !== null ? output.destinationPrefix : undefined,
    executionInfo: output.executionInfo !== undefined && output.executionInfo !== null ? deserializeAws_json1_1ExportTaskExecutionInfo(output.executionInfo, context) : undefined,
    from: output.from !== undefined && output.from !== null ? output.from : undefined,
    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,
    status: output.status !== undefined && output.status !== null ? deserializeAws_json1_1ExportTaskStatus(output.status, context) : undefined,
    taskId: output.taskId !== undefined && output.taskId !== null ? output.taskId : undefined,
    taskName: output.taskName !== undefined && output.taskName !== null ? output.taskName : undefined,
    to: output.to !== undefined && output.to !== null ? output.to : undefined
  };
};

var deserializeAws_json1_1ExportTaskExecutionInfo = function deserializeAws_json1_1ExportTaskExecutionInfo(output, context) {
  return {
    completionTime: output.completionTime !== undefined && output.completionTime !== null ? output.completionTime : undefined,
    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined
  };
};

var deserializeAws_json1_1ExportTasks = function deserializeAws_json1_1ExportTasks(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1ExportTask(entry, context);
  });
};

var deserializeAws_json1_1ExportTaskStatus = function deserializeAws_json1_1ExportTaskStatus(output, context) {
  return {
    code: output.code !== undefined && output.code !== null ? output.code : undefined,
    message: output.message !== undefined && output.message !== null ? output.message : undefined
  };
};

var deserializeAws_json1_1ExtractedValues = function deserializeAws_json1_1ExtractedValues(output, context) {
  return Object.entries(output).reduce(function (acc, _a) {
    var _b;

    var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2),
        key = _c[0],
        value = _c[1];

    if (value === null) {
      return acc;
    }

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, acc), (_b = {}, _b[key] = value, _b));
  }, {});
};

var deserializeAws_json1_1FilteredLogEvent = function deserializeAws_json1_1FilteredLogEvent(output, context) {
  return {
    eventId: output.eventId !== undefined && output.eventId !== null ? output.eventId : undefined,
    ingestionTime: output.ingestionTime !== undefined && output.ingestionTime !== null ? output.ingestionTime : undefined,
    logStreamName: output.logStreamName !== undefined && output.logStreamName !== null ? output.logStreamName : undefined,
    message: output.message !== undefined && output.message !== null ? output.message : undefined,
    timestamp: output.timestamp !== undefined && output.timestamp !== null ? output.timestamp : undefined
  };
};

var deserializeAws_json1_1FilteredLogEvents = function deserializeAws_json1_1FilteredLogEvents(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1FilteredLogEvent(entry, context);
  });
};

var deserializeAws_json1_1FilterLogEventsResponse = function deserializeAws_json1_1FilterLogEventsResponse(output, context) {
  return {
    events: output.events !== undefined && output.events !== null ? deserializeAws_json1_1FilteredLogEvents(output.events, context) : undefined,
    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,
    searchedLogStreams: output.searchedLogStreams !== undefined && output.searchedLogStreams !== null ? deserializeAws_json1_1SearchedLogStreams(output.searchedLogStreams, context) : undefined
  };
};

var deserializeAws_json1_1GetLogEventsResponse = function deserializeAws_json1_1GetLogEventsResponse(output, context) {
  return {
    events: output.events !== undefined && output.events !== null ? deserializeAws_json1_1OutputLogEvents(output.events, context) : undefined,
    nextBackwardToken: output.nextBackwardToken !== undefined && output.nextBackwardToken !== null ? output.nextBackwardToken : undefined,
    nextForwardToken: output.nextForwardToken !== undefined && output.nextForwardToken !== null ? output.nextForwardToken : undefined
  };
};

var deserializeAws_json1_1GetLogGroupFieldsResponse = function deserializeAws_json1_1GetLogGroupFieldsResponse(output, context) {
  return {
    logGroupFields: output.logGroupFields !== undefined && output.logGroupFields !== null ? deserializeAws_json1_1LogGroupFieldList(output.logGroupFields, context) : undefined
  };
};

var deserializeAws_json1_1GetLogRecordResponse = function deserializeAws_json1_1GetLogRecordResponse(output, context) {
  return {
    logRecord: output.logRecord !== undefined && output.logRecord !== null ? deserializeAws_json1_1LogRecord(output.logRecord, context) : undefined
  };
};

var deserializeAws_json1_1GetQueryResultsResponse = function deserializeAws_json1_1GetQueryResultsResponse(output, context) {
  return {
    results: output.results !== undefined && output.results !== null ? deserializeAws_json1_1QueryResults(output.results, context) : undefined,
    statistics: output.statistics !== undefined && output.statistics !== null ? deserializeAws_json1_1QueryStatistics(output.statistics, context) : undefined,
    status: output.status !== undefined && output.status !== null ? output.status : undefined
  };
};

var deserializeAws_json1_1InvalidOperationException = function deserializeAws_json1_1InvalidOperationException(output, context) {
  return {
    message: output.message !== undefined && output.message !== null ? output.message : undefined
  };
};

var deserializeAws_json1_1InvalidParameterException = function deserializeAws_json1_1InvalidParameterException(output, context) {
  return {
    message: output.message !== undefined && output.message !== null ? output.message : undefined
  };
};

var deserializeAws_json1_1InvalidSequenceTokenException = function deserializeAws_json1_1InvalidSequenceTokenException(output, context) {
  return {
    expectedSequenceToken: output.expectedSequenceToken !== undefined && output.expectedSequenceToken !== null ? output.expectedSequenceToken : undefined,
    message: output.message !== undefined && output.message !== null ? output.message : undefined
  };
};

var deserializeAws_json1_1LimitExceededException = function deserializeAws_json1_1LimitExceededException(output, context) {
  return {
    message: output.message !== undefined && output.message !== null ? output.message : undefined
  };
};

var deserializeAws_json1_1ListTagsLogGroupResponse = function deserializeAws_json1_1ListTagsLogGroupResponse(output, context) {
  return {
    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_json1_1Tags(output.tags, context) : undefined
  };
};

var deserializeAws_json1_1LogGroup = function deserializeAws_json1_1LogGroup(output, context) {
  return {
    arn: output.arn !== undefined && output.arn !== null ? output.arn : undefined,
    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,
    kmsKeyId: output.kmsKeyId !== undefined && output.kmsKeyId !== null ? output.kmsKeyId : undefined,
    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,
    metricFilterCount: output.metricFilterCount !== undefined && output.metricFilterCount !== null ? output.metricFilterCount : undefined,
    retentionInDays: output.retentionInDays !== undefined && output.retentionInDays !== null ? output.retentionInDays : undefined,
    storedBytes: output.storedBytes !== undefined && output.storedBytes !== null ? output.storedBytes : undefined
  };
};

var deserializeAws_json1_1LogGroupField = function deserializeAws_json1_1LogGroupField(output, context) {
  return {
    name: output.name !== undefined && output.name !== null ? output.name : undefined,
    percent: output.percent !== undefined && output.percent !== null ? output.percent : undefined
  };
};

var deserializeAws_json1_1LogGroupFieldList = function deserializeAws_json1_1LogGroupFieldList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1LogGroupField(entry, context);
  });
};

var deserializeAws_json1_1LogGroupNames = function deserializeAws_json1_1LogGroupNames(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return entry;
  });
};

var deserializeAws_json1_1LogGroups = function deserializeAws_json1_1LogGroups(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1LogGroup(entry, context);
  });
};

var deserializeAws_json1_1LogRecord = function deserializeAws_json1_1LogRecord(output, context) {
  return Object.entries(output).reduce(function (acc, _a) {
    var _b;

    var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2),
        key = _c[0],
        value = _c[1];

    if (value === null) {
      return acc;
    }

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, acc), (_b = {}, _b[key] = value, _b));
  }, {});
};

var deserializeAws_json1_1LogStream = function deserializeAws_json1_1LogStream(output, context) {
  return {
    arn: output.arn !== undefined && output.arn !== null ? output.arn : undefined,
    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,
    firstEventTimestamp: output.firstEventTimestamp !== undefined && output.firstEventTimestamp !== null ? output.firstEventTimestamp : undefined,
    lastEventTimestamp: output.lastEventTimestamp !== undefined && output.lastEventTimestamp !== null ? output.lastEventTimestamp : undefined,
    lastIngestionTime: output.lastIngestionTime !== undefined && output.lastIngestionTime !== null ? output.lastIngestionTime : undefined,
    logStreamName: output.logStreamName !== undefined && output.logStreamName !== null ? output.logStreamName : undefined,
    storedBytes: output.storedBytes !== undefined && output.storedBytes !== null ? output.storedBytes : undefined,
    uploadSequenceToken: output.uploadSequenceToken !== undefined && output.uploadSequenceToken !== null ? output.uploadSequenceToken : undefined
  };
};

var deserializeAws_json1_1LogStreams = function deserializeAws_json1_1LogStreams(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1LogStream(entry, context);
  });
};

var deserializeAws_json1_1MalformedQueryException = function deserializeAws_json1_1MalformedQueryException(output, context) {
  return {
    message: output.message !== undefined && output.message !== null ? output.message : undefined,
    queryCompileError: output.queryCompileError !== undefined && output.queryCompileError !== null ? deserializeAws_json1_1QueryCompileError(output.queryCompileError, context) : undefined
  };
};

var deserializeAws_json1_1MetricFilter = function deserializeAws_json1_1MetricFilter(output, context) {
  return {
    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,
    filterName: output.filterName !== undefined && output.filterName !== null ? output.filterName : undefined,
    filterPattern: output.filterPattern !== undefined && output.filterPattern !== null ? output.filterPattern : undefined,
    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,
    metricTransformations: output.metricTransformations !== undefined && output.metricTransformations !== null ? deserializeAws_json1_1MetricTransformations(output.metricTransformations, context) : undefined
  };
};

var deserializeAws_json1_1MetricFilterMatches = function deserializeAws_json1_1MetricFilterMatches(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1MetricFilterMatchRecord(entry, context);
  });
};

var deserializeAws_json1_1MetricFilterMatchRecord = function deserializeAws_json1_1MetricFilterMatchRecord(output, context) {
  return {
    eventMessage: output.eventMessage !== undefined && output.eventMessage !== null ? output.eventMessage : undefined,
    eventNumber: output.eventNumber !== undefined && output.eventNumber !== null ? output.eventNumber : undefined,
    extractedValues: output.extractedValues !== undefined && output.extractedValues !== null ? deserializeAws_json1_1ExtractedValues(output.extractedValues, context) : undefined
  };
};

var deserializeAws_json1_1MetricFilters = function deserializeAws_json1_1MetricFilters(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1MetricFilter(entry, context);
  });
};

var deserializeAws_json1_1MetricTransformation = function deserializeAws_json1_1MetricTransformation(output, context) {
  return {
    defaultValue: output.defaultValue !== undefined && output.defaultValue !== null ? output.defaultValue : undefined,
    metricName: output.metricName !== undefined && output.metricName !== null ? output.metricName : undefined,
    metricNamespace: output.metricNamespace !== undefined && output.metricNamespace !== null ? output.metricNamespace : undefined,
    metricValue: output.metricValue !== undefined && output.metricValue !== null ? output.metricValue : undefined
  };
};

var deserializeAws_json1_1MetricTransformations = function deserializeAws_json1_1MetricTransformations(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1MetricTransformation(entry, context);
  });
};

var deserializeAws_json1_1OperationAbortedException = function deserializeAws_json1_1OperationAbortedException(output, context) {
  return {
    message: output.message !== undefined && output.message !== null ? output.message : undefined
  };
};

var deserializeAws_json1_1OutputLogEvent = function deserializeAws_json1_1OutputLogEvent(output, context) {
  return {
    ingestionTime: output.ingestionTime !== undefined && output.ingestionTime !== null ? output.ingestionTime : undefined,
    message: output.message !== undefined && output.message !== null ? output.message : undefined,
    timestamp: output.timestamp !== undefined && output.timestamp !== null ? output.timestamp : undefined
  };
};

var deserializeAws_json1_1OutputLogEvents = function deserializeAws_json1_1OutputLogEvents(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1OutputLogEvent(entry, context);
  });
};

var deserializeAws_json1_1PutDestinationResponse = function deserializeAws_json1_1PutDestinationResponse(output, context) {
  return {
    destination: output.destination !== undefined && output.destination !== null ? deserializeAws_json1_1Destination(output.destination, context) : undefined
  };
};

var deserializeAws_json1_1PutLogEventsResponse = function deserializeAws_json1_1PutLogEventsResponse(output, context) {
  return {
    nextSequenceToken: output.nextSequenceToken !== undefined && output.nextSequenceToken !== null ? output.nextSequenceToken : undefined,
    rejectedLogEventsInfo: output.rejectedLogEventsInfo !== undefined && output.rejectedLogEventsInfo !== null ? deserializeAws_json1_1RejectedLogEventsInfo(output.rejectedLogEventsInfo, context) : undefined
  };
};

var deserializeAws_json1_1PutQueryDefinitionResponse = function deserializeAws_json1_1PutQueryDefinitionResponse(output, context) {
  return {
    queryDefinitionId: output.queryDefinitionId !== undefined && output.queryDefinitionId !== null ? output.queryDefinitionId : undefined
  };
};

var deserializeAws_json1_1PutResourcePolicyResponse = function deserializeAws_json1_1PutResourcePolicyResponse(output, context) {
  return {
    resourcePolicy: output.resourcePolicy !== undefined && output.resourcePolicy !== null ? deserializeAws_json1_1ResourcePolicy(output.resourcePolicy, context) : undefined
  };
};

var deserializeAws_json1_1QueryCompileError = function deserializeAws_json1_1QueryCompileError(output, context) {
  return {
    location: output.location !== undefined && output.location !== null ? deserializeAws_json1_1QueryCompileErrorLocation(output.location, context) : undefined,
    message: output.message !== undefined && output.message !== null ? output.message : undefined
  };
};

var deserializeAws_json1_1QueryCompileErrorLocation = function deserializeAws_json1_1QueryCompileErrorLocation(output, context) {
  return {
    endCharOffset: output.endCharOffset !== undefined && output.endCharOffset !== null ? output.endCharOffset : undefined,
    startCharOffset: output.startCharOffset !== undefined && output.startCharOffset !== null ? output.startCharOffset : undefined
  };
};

var deserializeAws_json1_1QueryDefinition = function deserializeAws_json1_1QueryDefinition(output, context) {
  return {
    lastModified: output.lastModified !== undefined && output.lastModified !== null ? output.lastModified : undefined,
    logGroupNames: output.logGroupNames !== undefined && output.logGroupNames !== null ? deserializeAws_json1_1LogGroupNames(output.logGroupNames, context) : undefined,
    name: output.name !== undefined && output.name !== null ? output.name : undefined,
    queryDefinitionId: output.queryDefinitionId !== undefined && output.queryDefinitionId !== null ? output.queryDefinitionId : undefined,
    queryString: output.queryString !== undefined && output.queryString !== null ? output.queryString : undefined
  };
};

var deserializeAws_json1_1QueryDefinitionList = function deserializeAws_json1_1QueryDefinitionList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1QueryDefinition(entry, context);
  });
};

var deserializeAws_json1_1QueryInfo = function deserializeAws_json1_1QueryInfo(output, context) {
  return {
    createTime: output.createTime !== undefined && output.createTime !== null ? output.createTime : undefined,
    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,
    queryId: output.queryId !== undefined && output.queryId !== null ? output.queryId : undefined,
    queryString: output.queryString !== undefined && output.queryString !== null ? output.queryString : undefined,
    status: output.status !== undefined && output.status !== null ? output.status : undefined
  };
};

var deserializeAws_json1_1QueryInfoList = function deserializeAws_json1_1QueryInfoList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1QueryInfo(entry, context);
  });
};

var deserializeAws_json1_1QueryResults = function deserializeAws_json1_1QueryResults(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1ResultRows(entry, context);
  });
};

var deserializeAws_json1_1QueryStatistics = function deserializeAws_json1_1QueryStatistics(output, context) {
  return {
    bytesScanned: output.bytesScanned !== undefined && output.bytesScanned !== null ? output.bytesScanned : undefined,
    recordsMatched: output.recordsMatched !== undefined && output.recordsMatched !== null ? output.recordsMatched : undefined,
    recordsScanned: output.recordsScanned !== undefined && output.recordsScanned !== null ? output.recordsScanned : undefined
  };
};

var deserializeAws_json1_1RejectedLogEventsInfo = function deserializeAws_json1_1RejectedLogEventsInfo(output, context) {
  return {
    expiredLogEventEndIndex: output.expiredLogEventEndIndex !== undefined && output.expiredLogEventEndIndex !== null ? output.expiredLogEventEndIndex : undefined,
    tooNewLogEventStartIndex: output.tooNewLogEventStartIndex !== undefined && output.tooNewLogEventStartIndex !== null ? output.tooNewLogEventStartIndex : undefined,
    tooOldLogEventEndIndex: output.tooOldLogEventEndIndex !== undefined && output.tooOldLogEventEndIndex !== null ? output.tooOldLogEventEndIndex : undefined
  };
};

var deserializeAws_json1_1ResourceAlreadyExistsException = function deserializeAws_json1_1ResourceAlreadyExistsException(output, context) {
  return {
    message: output.message !== undefined && output.message !== null ? output.message : undefined
  };
};

var deserializeAws_json1_1ResourceNotFoundException = function deserializeAws_json1_1ResourceNotFoundException(output, context) {
  return {
    message: output.message !== undefined && output.message !== null ? output.message : undefined
  };
};

var deserializeAws_json1_1ResourcePolicies = function deserializeAws_json1_1ResourcePolicies(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1ResourcePolicy(entry, context);
  });
};

var deserializeAws_json1_1ResourcePolicy = function deserializeAws_json1_1ResourcePolicy(output, context) {
  return {
    lastUpdatedTime: output.lastUpdatedTime !== undefined && output.lastUpdatedTime !== null ? output.lastUpdatedTime : undefined,
    policyDocument: output.policyDocument !== undefined && output.policyDocument !== null ? output.policyDocument : undefined,
    policyName: output.policyName !== undefined && output.policyName !== null ? output.policyName : undefined
  };
};

var deserializeAws_json1_1ResultField = function deserializeAws_json1_1ResultField(output, context) {
  return {
    field: output.field !== undefined && output.field !== null ? output.field : undefined,
    value: output.value !== undefined && output.value !== null ? output.value : undefined
  };
};

var deserializeAws_json1_1ResultRows = function deserializeAws_json1_1ResultRows(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1ResultField(entry, context);
  });
};

var deserializeAws_json1_1SearchedLogStream = function deserializeAws_json1_1SearchedLogStream(output, context) {
  return {
    logStreamName: output.logStreamName !== undefined && output.logStreamName !== null ? output.logStreamName : undefined,
    searchedCompletely: output.searchedCompletely !== undefined && output.searchedCompletely !== null ? output.searchedCompletely : undefined
  };
};

var deserializeAws_json1_1SearchedLogStreams = function deserializeAws_json1_1SearchedLogStreams(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1SearchedLogStream(entry, context);
  });
};

var deserializeAws_json1_1ServiceUnavailableException = function deserializeAws_json1_1ServiceUnavailableException(output, context) {
  return {
    message: output.message !== undefined && output.message !== null ? output.message : undefined
  };
};

var deserializeAws_json1_1StartQueryResponse = function deserializeAws_json1_1StartQueryResponse(output, context) {
  return {
    queryId: output.queryId !== undefined && output.queryId !== null ? output.queryId : undefined
  };
};

var deserializeAws_json1_1StopQueryResponse = function deserializeAws_json1_1StopQueryResponse(output, context) {
  return {
    success: output.success !== undefined && output.success !== null ? output.success : undefined
  };
};

var deserializeAws_json1_1SubscriptionFilter = function deserializeAws_json1_1SubscriptionFilter(output, context) {
  return {
    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,
    destinationArn: output.destinationArn !== undefined && output.destinationArn !== null ? output.destinationArn : undefined,
    distribution: output.distribution !== undefined && output.distribution !== null ? output.distribution : undefined,
    filterName: output.filterName !== undefined && output.filterName !== null ? output.filterName : undefined,
    filterPattern: output.filterPattern !== undefined && output.filterPattern !== null ? output.filterPattern : undefined,
    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,
    roleArn: output.roleArn !== undefined && output.roleArn !== null ? output.roleArn : undefined
  };
};

var deserializeAws_json1_1SubscriptionFilters = function deserializeAws_json1_1SubscriptionFilters(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_json1_1SubscriptionFilter(entry, context);
  });
};

var deserializeAws_json1_1Tags = function deserializeAws_json1_1Tags(output, context) {
  return Object.entries(output).reduce(function (acc, _a) {
    var _b;

    var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_a, 2),
        key = _c[0],
        value = _c[1];

    if (value === null) {
      return acc;
    }

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, acc), (_b = {}, _b[key] = value, _b));
  }, {});
};

var deserializeAws_json1_1TestMetricFilterResponse = function deserializeAws_json1_1TestMetricFilterResponse(output, context) {
  return {
    matches: output.matches !== undefined && output.matches !== null ? deserializeAws_json1_1MetricFilterMatches(output.matches, context) : undefined
  };
};

var deserializeAws_json1_1UnrecognizedClientException = function deserializeAws_json1_1UnrecognizedClientException(output, context) {
  return {
    message: output.message !== undefined && output.message !== null ? output.message : undefined
  };
};

var deserializeMetadata = function deserializeMetadata(output) {
  var _a;

  return {
    httpStatusCode: output.statusCode,
    requestId: (_a = output.headers["x-amzn-requestid"]) !== null && _a !== void 0 ? _a : output.headers["x-amzn-request-id"],
    extendedRequestId: output.headers["x-amz-id-2"],
    cfId: output.headers["x-amz-cf-id"]
  };
}; // Collect low-level response body stream to Uint8Array.


var collectBody = function collectBody(streamBody, context) {
  if (streamBody === void 0) {
    streamBody = new Uint8Array();
  }

  if (streamBody instanceof Uint8Array) {
    return Promise.resolve(streamBody);
  }

  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());
}; // Encode Uint8Array data into string with utf-8.


var collectBodyString = function collectBodyString(streamBody, context) {
  return collectBody(streamBody, context).then(function (body) {
    return context.utf8Encoder(body);
  });
};

var buildHttpRpcRequest = function buildHttpRpcRequest(context, headers, path, resolvedHostname, body) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var _a, hostname, _b, protocol, port, contents;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          contents = {
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            path: path,
            headers: headers
          };

          if (resolvedHostname !== undefined) {
            contents.hostname = resolvedHostname;
          }

          if (body !== undefined) {
            contents.body = body;
          }

          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest(contents)];
      }
    });
  });
};

var parseBody = function parseBody(streamBody, context) {
  return collectBodyString(streamBody, context).then(function (encoded) {
    if (encoded.length) {
      return JSON.parse(encoded);
    }

    return {};
  });
};
/**
 * Load an error code for the aws.rest-json-1.1 protocol.
 */


var loadRestJsonErrorCode = function loadRestJsonErrorCode(output, data) {
  var findKey = function findKey(object, key) {
    return Object.keys(object).find(function (k) {
      return k.toLowerCase() === key.toLowerCase();
    });
  };

  var sanitizeErrorCode = function sanitizeErrorCode(rawValue) {
    var cleanValue = rawValue;

    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }

    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }

    return cleanValue;
  };

  var headerKey = findKey(output.headers, "x-amzn-errortype");

  if (headerKey !== undefined) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }

  if (data.code !== undefined) {
    return sanitizeErrorCode(data.code);
  }

  if (data["__type"] !== undefined) {
    return sanitizeErrorCode(data["__type"]);
  }

  return "";
};

/***/ }),

/***/ 43187:
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/runtimeConfig.browser.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClientDefaultValues": function() { return /* binding */ ClientDefaultValues; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./package.json */ 63262);
/* harmony import */ var _aws_crypto_sha256_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-crypto/sha256-browser */ 48464);
/* harmony import */ var _aws_crypto_sha256_browser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_crypto_sha256_browser__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _aws_sdk_fetch_http_handler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/fetch-http-handler */ 16423);
/* harmony import */ var _aws_sdk_invalid_dependency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/invalid-dependency */ 3015);
/* harmony import */ var _aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/middleware-retry */ 9485);
/* harmony import */ var _aws_sdk_util_base64_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/util-base64-browser */ 80149);
/* harmony import */ var _aws_sdk_util_body_length_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/util-body-length-browser */ 88920);
/* harmony import */ var _aws_sdk_util_user_agent_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-sdk/util-user-agent-browser */ 94190);
/* harmony import */ var _aws_sdk_util_utf8_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/util-utf8-browser */ 34495);
/* harmony import */ var _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./runtimeConfig.shared */ 15661);











/**
 * @internal
 */

var ClientDefaultValues = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_8__.__assign)({}, _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_9__.ClientSharedValues), {
  runtime: "browser",
  base64Decoder: _aws_sdk_util_base64_browser__WEBPACK_IMPORTED_MODULE_4__.fromBase64,
  base64Encoder: _aws_sdk_util_base64_browser__WEBPACK_IMPORTED_MODULE_4__.toBase64,
  bodyLengthChecker: _aws_sdk_util_body_length_browser__WEBPACK_IMPORTED_MODULE_5__.calculateBodyLength,
  credentialDefaultProvider: function credentialDefaultProvider(_) {
    return function () {
      return Promise.reject(new Error("Credential is missing"));
    };
  },
  defaultUserAgentProvider: (0,_aws_sdk_util_user_agent_browser__WEBPACK_IMPORTED_MODULE_6__.defaultUserAgent)({
    serviceId: _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_9__.ClientSharedValues.serviceId,
    clientVersion: _package_json__WEBPACK_IMPORTED_MODULE_10__.version
  }),
  maxAttempts: _aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_MAX_ATTEMPTS,
  region: (0,_aws_sdk_invalid_dependency__WEBPACK_IMPORTED_MODULE_2__.invalidProvider)("Region is missing"),
  requestHandler: new _aws_sdk_fetch_http_handler__WEBPACK_IMPORTED_MODULE_1__.FetchHttpHandler(),
  sha256: _aws_crypto_sha256_browser__WEBPACK_IMPORTED_MODULE_0__.Sha256,
  streamCollector: _aws_sdk_fetch_http_handler__WEBPACK_IMPORTED_MODULE_1__.streamCollector,
  utf8Decoder: _aws_sdk_util_utf8_browser__WEBPACK_IMPORTED_MODULE_7__.fromUtf8,
  utf8Encoder: _aws_sdk_util_utf8_browser__WEBPACK_IMPORTED_MODULE_7__.toUtf8
});

/***/ }),

/***/ 15661:
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/runtimeConfig.shared.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClientSharedValues": function() { return /* binding */ ClientSharedValues; }
/* harmony export */ });
/* harmony import */ var _endpoints__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./endpoints */ 75307);
/* harmony import */ var _aws_sdk_url_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/url-parser */ 82779);


/**
 * @internal
 */

var ClientSharedValues = {
  apiVersion: "2014-03-28",
  disableHostPrefix: false,
  logger: {},
  regionInfoProvider: _endpoints__WEBPACK_IMPORTED_MODULE_1__.defaultRegionInfoProvider,
  serviceId: "CloudWatch Logs",
  urlParser: _aws_sdk_url_parser__WEBPACK_IMPORTED_MODULE_0__.parseUrl
};

/***/ }),

/***/ 34495:
/*!**********************************!*\
  !*** @aws-sdk/util-utf8-browser ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": function() { return /* binding */ fromUtf8; },
/* harmony export */   "toUtf8": function() { return /* binding */ toUtf8; }
/* harmony export */ });
/* harmony import */ var _pureJs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pureJs */ 24222);
/* harmony import */ var _whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./whatwgEncodingApi */ 77475);


var fromUtf8 = function fromUtf8(input) {
  return typeof TextEncoder === "function" ? (0,_whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__.fromUtf8)(input) : (0,_pureJs__WEBPACK_IMPORTED_MODULE_0__.fromUtf8)(input);
};
var toUtf8 = function toUtf8(input) {
  return typeof TextDecoder === "function" ? (0,_whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__.toUtf8)(input) : (0,_pureJs__WEBPACK_IMPORTED_MODULE_0__.toUtf8)(input);
};

/***/ }),

/***/ 24222:
/*!****************!*\
  !*** ./pureJs ***!
  \****************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": function() { return /* binding */ fromUtf8; },
/* harmony export */   "toUtf8": function() { return /* binding */ toUtf8; }
/* harmony export */ });
/**
 * Converts a JS string from its native UCS-2/UTF-16 representation into a
 * Uint8Array of the bytes used to represent the equivalent characters in UTF-8.
 *
 * Cribbed from the `goog.crypt.stringToUtf8ByteArray` function in the Google
 * Closure library, though updated to use typed arrays.
 */
var fromUtf8 = function fromUtf8(input) {
  var bytes = [];

  for (var i = 0, len = input.length; i < len; i++) {
    var value = input.charCodeAt(i);

    if (value < 0x80) {
      bytes.push(value);
    } else if (value < 0x800) {
      bytes.push(value >> 6 | 192, value & 63 | 128);
    } else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
      var surrogatePair = 0x10000 + ((value & 1023) << 10) + (input.charCodeAt(++i) & 1023);
      bytes.push(surrogatePair >> 18 | 240, surrogatePair >> 12 & 63 | 128, surrogatePair >> 6 & 63 | 128, surrogatePair & 63 | 128);
    } else {
      bytes.push(value >> 12 | 224, value >> 6 & 63 | 128, value & 63 | 128);
    }
  }

  return Uint8Array.from(bytes);
};
/**
 * Converts a typed array of bytes containing UTF-8 data into a native JS
 * string.
 *
 * Partly cribbed from the `goog.crypt.utf8ByteArrayToString` function in the
 * Google Closure library, though updated to use typed arrays and to better
 * handle astral plane code points.
 */

var toUtf8 = function toUtf8(input) {
  var decoded = "";

  for (var i = 0, len = input.length; i < len; i++) {
    var byte = input[i];

    if (byte < 0x80) {
      decoded += String.fromCharCode(byte);
    } else if (192 <= byte && byte < 224) {
      var nextByte = input[++i];
      decoded += String.fromCharCode((byte & 31) << 6 | nextByte & 63);
    } else if (240 <= byte && byte < 365) {
      var surrogatePair = [byte, input[++i], input[++i], input[++i]];
      var encoded = "%" + surrogatePair.map(function (byteValue) {
        return byteValue.toString(16);
      }).join("%");
      decoded += decodeURIComponent(encoded);
    } else {
      decoded += String.fromCharCode((byte & 15) << 12 | (input[++i] & 63) << 6 | input[++i] & 63);
    }
  }

  return decoded;
};

/***/ }),

/***/ 77475:
/*!***************************!*\
  !*** ./whatwgEncodingApi ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": function() { return /* binding */ fromUtf8; },
/* harmony export */   "toUtf8": function() { return /* binding */ toUtf8; }
/* harmony export */ });
function fromUtf8(input) {
  return new TextEncoder().encode(input);
}
function toUtf8(input) {
  return new TextDecoder("utf-8").decode(input);
}

/***/ }),

/***/ 68630:
/*!*********************************************!*\
  !*** ./node_modules/paho-mqtt/paho-mqtt.js ***!
  \*********************************************/
/***/ (function(module) {

/*******************************************************************************
 * Copyright (c) 2013 IBM Corp.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v1.0 which accompany this distribution.
 *
 * The Eclipse Public License is available at
 *    http://www.eclipse.org/legal/epl-v10.html
 * and the Eclipse Distribution License is available at
 *   http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * Contributors:
 *    Andrew Banks - initial API and implementation and initial documentation
 *******************************************************************************/
// Only expose a single object name in the global namespace.
// Everything must go through this module. Global Paho module
// only has a single public function, client, which returns
// a Paho client object given connection details.

/**
 * Send and receive messages using web browsers.
 * <p>
 * This programming interface lets a JavaScript client application use the MQTT V3.1 or
 * V3.1.1 protocol to connect to an MQTT-supporting messaging server.
 *
 * The function supported includes:
 * <ol>
 * <li>Connecting to and disconnecting from a server. The server is identified by its host name and port number.
 * <li>Specifying options that relate to the communications link with the server,
 * for example the frequency of keep-alive heartbeats, and whether SSL/TLS is required.
 * <li>Subscribing to and receiving messages from MQTT Topics.
 * <li>Publishing messages to MQTT Topics.
 * </ol>
 * <p>
 * The API consists of two main objects:
 * <dl>
 * <dt><b>{@link Paho.Client}</b></dt>
 * <dd>This contains methods that provide the functionality of the API,
 * including provision of callbacks that notify the application when a message
 * arrives from or is delivered to the messaging server,
 * or when the status of its connection to the messaging server changes.</dd>
 * <dt><b>{@link Paho.Message}</b></dt>
 * <dd>This encapsulates the payload of the message along with various attributes
 * associated with its delivery, in particular the destination to which it has
 * been (or is about to be) sent.</dd>
 * </dl>
 * <p>
 * The programming interface validates parameters passed to it, and will throw
 * an Error containing an error message intended for developer use, if it detects
 * an error with any parameter.
 * <p>
 * Example:
 *
 * <code><pre>
var client = new Paho.MQTT.Client(location.hostname, Number(location.port), "clientId");
client.onConnectionLost = onConnectionLost;
client.onMessageArrived = onMessageArrived;
client.connect({onSuccess:onConnect});

function onConnect() {
  // Once a connection has been made, make a subscription and send a message.
  console.log("onConnect");
  client.subscribe("/World");
  var message = new Paho.MQTT.Message("Hello");
  message.destinationName = "/World";
  client.send(message);
};
function onConnectionLost(responseObject) {
  if (responseObject.errorCode !== 0)
	console.log("onConnectionLost:"+responseObject.errorMessage);
};
function onMessageArrived(message) {
  console.log("onMessageArrived:"+message.payloadString);
  client.disconnect();
};
 * </pre></code>
 * @namespace Paho
 */

/* jshint shadow:true */
(function ExportLibrary(root, factory) {
  if (true) {
    module.exports = factory();
  } else {}
})(this, function LibraryFactory() {
  var PahoMQTT = function (global) {
    // Private variables below, these are only visible inside the function closure
    // which is used to define the module.
    var version = "@VERSION@-@BUILDLEVEL@";
    /**
     * @private
     */

    var localStorage = global.localStorage || function () {
      var data = {};
      return {
        setItem: function setItem(key, item) {
          data[key] = item;
        },
        getItem: function getItem(key) {
          return data[key];
        },
        removeItem: function removeItem(key) {
          delete data[key];
        }
      };
    }();
    /**
    * Unique message type identifiers, with associated
    * associated integer values.
    * @private
    */


    var MESSAGE_TYPE = {
      CONNECT: 1,
      CONNACK: 2,
      PUBLISH: 3,
      PUBACK: 4,
      PUBREC: 5,
      PUBREL: 6,
      PUBCOMP: 7,
      SUBSCRIBE: 8,
      SUBACK: 9,
      UNSUBSCRIBE: 10,
      UNSUBACK: 11,
      PINGREQ: 12,
      PINGRESP: 13,
      DISCONNECT: 14
    }; // Collection of utility methods used to simplify module code
    // and promote the DRY pattern.

    /**
    * Validate an object's parameter names to ensure they
    * match a list of expected variables name for this option
    * type. Used to ensure option object passed into the API don't
    * contain erroneous parameters.
    * @param {Object} obj - User options object
    * @param {Object} keys - valid keys and types that may exist in obj.
    * @throws {Error} Invalid option parameter found.
    * @private
    */

    var validate = function validate(obj, keys) {
      for (var key in obj) {
        if (obj.hasOwnProperty(key)) {
          if (keys.hasOwnProperty(key)) {
            if (typeof obj[key] !== keys[key]) throw new Error(format(ERROR.INVALID_TYPE, [typeof obj[key], key]));
          } else {
            var errorStr = "Unknown property, " + key + ". Valid properties are:";

            for (var validKey in keys) {
              if (keys.hasOwnProperty(validKey)) errorStr = errorStr + " " + validKey;
            }

            throw new Error(errorStr);
          }
        }
      }
    };
    /**
    * Return a new function which runs the user function bound
    * to a fixed scope.
    * @param {function} User function
    * @param {object} Function scope
    * @return {function} User function bound to another scope
    * @private
    */


    var scope = function scope(f, _scope) {
      return function () {
        return f.apply(_scope, arguments);
      };
    };
    /**
    * Unique message type identifiers, with associated
    * associated integer values.
    * @private
    */


    var ERROR = {
      OK: {
        code: 0,
        text: "AMQJSC0000I OK."
      },
      CONNECT_TIMEOUT: {
        code: 1,
        text: "AMQJSC0001E Connect timed out."
      },
      SUBSCRIBE_TIMEOUT: {
        code: 2,
        text: "AMQJS0002E Subscribe timed out."
      },
      UNSUBSCRIBE_TIMEOUT: {
        code: 3,
        text: "AMQJS0003E Unsubscribe timed out."
      },
      PING_TIMEOUT: {
        code: 4,
        text: "AMQJS0004E Ping timed out."
      },
      INTERNAL_ERROR: {
        code: 5,
        text: "AMQJS0005E Internal error. Error Message: {0}, Stack trace: {1}"
      },
      CONNACK_RETURNCODE: {
        code: 6,
        text: "AMQJS0006E Bad Connack return code:{0} {1}."
      },
      SOCKET_ERROR: {
        code: 7,
        text: "AMQJS0007E Socket error:{0}."
      },
      SOCKET_CLOSE: {
        code: 8,
        text: "AMQJS0008I Socket closed."
      },
      MALFORMED_UTF: {
        code: 9,
        text: "AMQJS0009E Malformed UTF data:{0} {1} {2}."
      },
      UNSUPPORTED: {
        code: 10,
        text: "AMQJS0010E {0} is not supported by this browser."
      },
      INVALID_STATE: {
        code: 11,
        text: "AMQJS0011E Invalid state {0}."
      },
      INVALID_TYPE: {
        code: 12,
        text: "AMQJS0012E Invalid type {0} for {1}."
      },
      INVALID_ARGUMENT: {
        code: 13,
        text: "AMQJS0013E Invalid argument {0} for {1}."
      },
      UNSUPPORTED_OPERATION: {
        code: 14,
        text: "AMQJS0014E Unsupported operation."
      },
      INVALID_STORED_DATA: {
        code: 15,
        text: "AMQJS0015E Invalid data in local storage key={0} value={1}."
      },
      INVALID_MQTT_MESSAGE_TYPE: {
        code: 16,
        text: "AMQJS0016E Invalid MQTT message type {0}."
      },
      MALFORMED_UNICODE: {
        code: 17,
        text: "AMQJS0017E Malformed Unicode string:{0} {1}."
      },
      BUFFER_FULL: {
        code: 18,
        text: "AMQJS0018E Message buffer is full, maximum buffer size: {0}."
      }
    };
    /** CONNACK RC Meaning. */

    var CONNACK_RC = {
      0: "Connection Accepted",
      1: "Connection Refused: unacceptable protocol version",
      2: "Connection Refused: identifier rejected",
      3: "Connection Refused: server unavailable",
      4: "Connection Refused: bad user name or password",
      5: "Connection Refused: not authorized"
    };
    /**
     * Format an error message text.
     * @private
     * @param {error} ERROR value above.
     * @param {substitutions} [array] substituted into the text.
     * @return the text with the substitutions made.
     */

    var format = function format(error, substitutions) {
      var text = error.text;

      if (substitutions) {
        var field, start;

        for (var i = 0; i < substitutions.length; i++) {
          field = "{" + i + "}";
          start = text.indexOf(field);

          if (start > 0) {
            var part1 = text.substring(0, start);
            var part2 = text.substring(start + field.length);
            text = part1 + substitutions[i] + part2;
          }
        }
      }

      return text;
    }; //MQTT protocol and version          6    M    Q    I    s    d    p    3


    var MqttProtoIdentifierv3 = [0x00, 0x06, 0x4d, 0x51, 0x49, 0x73, 0x64, 0x70, 0x03]; //MQTT proto/version for 311         4    M    Q    T    T    4

    var MqttProtoIdentifierv4 = [0x00, 0x04, 0x4d, 0x51, 0x54, 0x54, 0x04];
    /**
    * Construct an MQTT wire protocol message.
    * @param type MQTT packet type.
    * @param options optional wire message attributes.
    *
    * Optional properties
    *
    * messageIdentifier: message ID in the range [0..65535]
    * payloadMessage:	Application Message - PUBLISH only
    * connectStrings:	array of 0 or more Strings to be put into the CONNECT payload
    * topics:			array of strings (SUBSCRIBE, UNSUBSCRIBE)
    * requestQoS:		array of QoS values [0..2]
    *
    * "Flag" properties
    * cleanSession:	true if present / false if absent (CONNECT)
    * willMessage:  	true if present / false if absent (CONNECT)
    * isRetained:		true if present / false if absent (CONNECT)
    * userName:		true if present / false if absent (CONNECT)
    * password:		true if present / false if absent (CONNECT)
    * keepAliveInterval:	integer [0..65535]  (CONNECT)
    *
    * @private
    * @ignore
    */

    var WireMessage = function WireMessage(type, options) {
      this.type = type;

      for (var name in options) {
        if (options.hasOwnProperty(name)) {
          this[name] = options[name];
        }
      }
    };

    WireMessage.prototype.encode = function () {
      // Compute the first byte of the fixed header
      var first = (this.type & 0x0f) << 4;
      /*
      * Now calculate the length of the variable header + payload by adding up the lengths
      * of all the component parts
      */

      var remLength = 0;
      var topicStrLength = [];
      var destinationNameLength = 0;
      var willMessagePayloadBytes; // if the message contains a messageIdentifier then we need two bytes for that

      if (this.messageIdentifier !== undefined) remLength += 2;

      switch (this.type) {
        // If this a Connect then we need to include 12 bytes for its header
        case MESSAGE_TYPE.CONNECT:
          switch (this.mqttVersion) {
            case 3:
              remLength += MqttProtoIdentifierv3.length + 3;
              break;

            case 4:
              remLength += MqttProtoIdentifierv4.length + 3;
              break;
          }

          remLength += UTF8Length(this.clientId) + 2;

          if (this.willMessage !== undefined) {
            remLength += UTF8Length(this.willMessage.destinationName) + 2; // Will message is always a string, sent as UTF-8 characters with a preceding length.

            willMessagePayloadBytes = this.willMessage.payloadBytes;
            if (!(willMessagePayloadBytes instanceof Uint8Array)) willMessagePayloadBytes = new Uint8Array(payloadBytes);
            remLength += willMessagePayloadBytes.byteLength + 2;
          }

          if (this.userName !== undefined) remLength += UTF8Length(this.userName) + 2;
          if (this.password !== undefined) remLength += UTF8Length(this.password) + 2;
          break;
        // Subscribe, Unsubscribe can both contain topic strings

        case MESSAGE_TYPE.SUBSCRIBE:
          first |= 0x02; // Qos = 1;

          for (var i = 0; i < this.topics.length; i++) {
            topicStrLength[i] = UTF8Length(this.topics[i]);
            remLength += topicStrLength[i] + 2;
          }

          remLength += this.requestedQos.length; // 1 byte for each topic's Qos
          // QoS on Subscribe only

          break;

        case MESSAGE_TYPE.UNSUBSCRIBE:
          first |= 0x02; // Qos = 1;

          for (var i = 0; i < this.topics.length; i++) {
            topicStrLength[i] = UTF8Length(this.topics[i]);
            remLength += topicStrLength[i] + 2;
          }

          break;

        case MESSAGE_TYPE.PUBREL:
          first |= 0x02; // Qos = 1;

          break;

        case MESSAGE_TYPE.PUBLISH:
          if (this.payloadMessage.duplicate) first |= 0x08;
          first = first |= this.payloadMessage.qos << 1;
          if (this.payloadMessage.retained) first |= 0x01;
          destinationNameLength = UTF8Length(this.payloadMessage.destinationName);
          remLength += destinationNameLength + 2;
          var payloadBytes = this.payloadMessage.payloadBytes;
          remLength += payloadBytes.byteLength;
          if (payloadBytes instanceof ArrayBuffer) payloadBytes = new Uint8Array(payloadBytes);else if (!(payloadBytes instanceof Uint8Array)) payloadBytes = new Uint8Array(payloadBytes.buffer);
          break;

        case MESSAGE_TYPE.DISCONNECT:
          break;

        default:
          break;
      } // Now we can allocate a buffer for the message


      var mbi = encodeMBI(remLength); // Convert the length to MQTT MBI format

      var pos = mbi.length + 1; // Offset of start of variable header

      var buffer = new ArrayBuffer(remLength + pos);
      var byteStream = new Uint8Array(buffer); // view it as a sequence of bytes
      //Write the fixed header into the buffer

      byteStream[0] = first;
      byteStream.set(mbi, 1); // If this is a PUBLISH then the variable header starts with a topic

      if (this.type == MESSAGE_TYPE.PUBLISH) pos = writeString(this.payloadMessage.destinationName, destinationNameLength, byteStream, pos); // If this is a CONNECT then the variable header contains the protocol name/version, flags and keepalive time
      else if (this.type == MESSAGE_TYPE.CONNECT) {
        switch (this.mqttVersion) {
          case 3:
            byteStream.set(MqttProtoIdentifierv3, pos);
            pos += MqttProtoIdentifierv3.length;
            break;

          case 4:
            byteStream.set(MqttProtoIdentifierv4, pos);
            pos += MqttProtoIdentifierv4.length;
            break;
        }

        var connectFlags = 0;
        if (this.cleanSession) connectFlags = 0x02;

        if (this.willMessage !== undefined) {
          connectFlags |= 0x04;
          connectFlags |= this.willMessage.qos << 3;

          if (this.willMessage.retained) {
            connectFlags |= 0x20;
          }
        }

        if (this.userName !== undefined) connectFlags |= 0x80;
        if (this.password !== undefined) connectFlags |= 0x40;
        byteStream[pos++] = connectFlags;
        pos = writeUint16(this.keepAliveInterval, byteStream, pos);
      } // Output the messageIdentifier - if there is one

      if (this.messageIdentifier !== undefined) pos = writeUint16(this.messageIdentifier, byteStream, pos);

      switch (this.type) {
        case MESSAGE_TYPE.CONNECT:
          pos = writeString(this.clientId, UTF8Length(this.clientId), byteStream, pos);

          if (this.willMessage !== undefined) {
            pos = writeString(this.willMessage.destinationName, UTF8Length(this.willMessage.destinationName), byteStream, pos);
            pos = writeUint16(willMessagePayloadBytes.byteLength, byteStream, pos);
            byteStream.set(willMessagePayloadBytes, pos);
            pos += willMessagePayloadBytes.byteLength;
          }

          if (this.userName !== undefined) pos = writeString(this.userName, UTF8Length(this.userName), byteStream, pos);
          if (this.password !== undefined) pos = writeString(this.password, UTF8Length(this.password), byteStream, pos);
          break;

        case MESSAGE_TYPE.PUBLISH:
          // PUBLISH has a text or binary payload, if text do not add a 2 byte length field, just the UTF characters.
          byteStream.set(payloadBytes, pos);
          break;
        //    	    case MESSAGE_TYPE.PUBREC:
        //    	    case MESSAGE_TYPE.PUBREL:
        //    	    case MESSAGE_TYPE.PUBCOMP:
        //    	    	break;

        case MESSAGE_TYPE.SUBSCRIBE:
          // SUBSCRIBE has a list of topic strings and request QoS
          for (var i = 0; i < this.topics.length; i++) {
            pos = writeString(this.topics[i], topicStrLength[i], byteStream, pos);
            byteStream[pos++] = this.requestedQos[i];
          }

          break;

        case MESSAGE_TYPE.UNSUBSCRIBE:
          // UNSUBSCRIBE has a list of topic strings
          for (var i = 0; i < this.topics.length; i++) {
            pos = writeString(this.topics[i], topicStrLength[i], byteStream, pos);
          }

          break;

        default: // Do nothing.

      }

      return buffer;
    };

    function decodeMessage(input, pos) {
      var startingPos = pos;
      var first = input[pos];
      var type = first >> 4;
      var messageInfo = first &= 0x0f;
      pos += 1; // Decode the remaining length (MBI format)

      var digit;
      var remLength = 0;
      var multiplier = 1;

      do {
        if (pos == input.length) {
          return [null, startingPos];
        }

        digit = input[pos++];
        remLength += (digit & 0x7F) * multiplier;
        multiplier *= 128;
      } while ((digit & 0x80) !== 0);

      var endPos = pos + remLength;

      if (endPos > input.length) {
        return [null, startingPos];
      }

      var wireMessage = new WireMessage(type);

      switch (type) {
        case MESSAGE_TYPE.CONNACK:
          var connectAcknowledgeFlags = input[pos++];
          if (connectAcknowledgeFlags & 0x01) wireMessage.sessionPresent = true;
          wireMessage.returnCode = input[pos++];
          break;

        case MESSAGE_TYPE.PUBLISH:
          var qos = messageInfo >> 1 & 0x03;
          var len = readUint16(input, pos);
          pos += 2;
          var topicName = parseUTF8(input, pos, len);
          pos += len; // If QoS 1 or 2 there will be a messageIdentifier

          if (qos > 0) {
            wireMessage.messageIdentifier = readUint16(input, pos);
            pos += 2;
          }

          var message = new Message(input.subarray(pos, endPos));
          if ((messageInfo & 0x01) == 0x01) message.retained = true;
          if ((messageInfo & 0x08) == 0x08) message.duplicate = true;
          message.qos = qos;
          message.destinationName = topicName;
          wireMessage.payloadMessage = message;
          break;

        case MESSAGE_TYPE.PUBACK:
        case MESSAGE_TYPE.PUBREC:
        case MESSAGE_TYPE.PUBREL:
        case MESSAGE_TYPE.PUBCOMP:
        case MESSAGE_TYPE.UNSUBACK:
          wireMessage.messageIdentifier = readUint16(input, pos);
          break;

        case MESSAGE_TYPE.SUBACK:
          wireMessage.messageIdentifier = readUint16(input, pos);
          pos += 2;
          wireMessage.returnCode = input.subarray(pos, endPos);
          break;

        default:
          break;
      }

      return [wireMessage, endPos];
    }

    function writeUint16(input, buffer, offset) {
      buffer[offset++] = input >> 8; //MSB

      buffer[offset++] = input % 256; //LSB

      return offset;
    }

    function writeString(input, utf8Length, buffer, offset) {
      offset = writeUint16(utf8Length, buffer, offset);
      stringToUTF8(input, buffer, offset);
      return offset + utf8Length;
    }

    function readUint16(buffer, offset) {
      return 256 * buffer[offset] + buffer[offset + 1];
    }
    /**
    * Encodes an MQTT Multi-Byte Integer
    * @private
    */


    function encodeMBI(number) {
      var output = new Array(1);
      var numBytes = 0;

      do {
        var digit = number % 128;
        number = number >> 7;

        if (number > 0) {
          digit |= 0x80;
        }

        output[numBytes++] = digit;
      } while (number > 0 && numBytes < 4);

      return output;
    }
    /**
    * Takes a String and calculates its length in bytes when encoded in UTF8.
    * @private
    */


    function UTF8Length(input) {
      var output = 0;

      for (var i = 0; i < input.length; i++) {
        var charCode = input.charCodeAt(i);

        if (charCode > 0x7FF) {
          // Surrogate pair means its a 4 byte character
          if (0xD800 <= charCode && charCode <= 0xDBFF) {
            i++;
            output++;
          }

          output += 3;
        } else if (charCode > 0x7F) output += 2;else output++;
      }

      return output;
    }
    /**
    * Takes a String and writes it into an array as UTF8 encoded bytes.
    * @private
    */


    function stringToUTF8(input, output, start) {
      var pos = start;

      for (var i = 0; i < input.length; i++) {
        var charCode = input.charCodeAt(i); // Check for a surrogate pair.

        if (0xD800 <= charCode && charCode <= 0xDBFF) {
          var lowCharCode = input.charCodeAt(++i);

          if (isNaN(lowCharCode)) {
            throw new Error(format(ERROR.MALFORMED_UNICODE, [charCode, lowCharCode]));
          }

          charCode = (charCode - 0xD800 << 10) + (lowCharCode - 0xDC00) + 0x10000;
        }

        if (charCode <= 0x7F) {
          output[pos++] = charCode;
        } else if (charCode <= 0x7FF) {
          output[pos++] = charCode >> 6 & 0x1F | 0xC0;
          output[pos++] = charCode & 0x3F | 0x80;
        } else if (charCode <= 0xFFFF) {
          output[pos++] = charCode >> 12 & 0x0F | 0xE0;
          output[pos++] = charCode >> 6 & 0x3F | 0x80;
          output[pos++] = charCode & 0x3F | 0x80;
        } else {
          output[pos++] = charCode >> 18 & 0x07 | 0xF0;
          output[pos++] = charCode >> 12 & 0x3F | 0x80;
          output[pos++] = charCode >> 6 & 0x3F | 0x80;
          output[pos++] = charCode & 0x3F | 0x80;
        }
      }

      return output;
    }

    function parseUTF8(input, offset, length) {
      var output = "";
      var utf16;
      var pos = offset;

      while (pos < offset + length) {
        var byte1 = input[pos++];
        if (byte1 < 128) utf16 = byte1;else {
          var byte2 = input[pos++] - 128;
          if (byte2 < 0) throw new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16), ""]));
          if (byte1 < 0xE0) // 2 byte character
            utf16 = 64 * (byte1 - 0xC0) + byte2;else {
            var byte3 = input[pos++] - 128;
            if (byte3 < 0) throw new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16), byte3.toString(16)]));
            if (byte1 < 0xF0) // 3 byte character
              utf16 = 4096 * (byte1 - 0xE0) + 64 * byte2 + byte3;else {
              var byte4 = input[pos++] - 128;
              if (byte4 < 0) throw new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16), byte3.toString(16), byte4.toString(16)]));
              if (byte1 < 0xF8) // 4 byte character
                utf16 = 262144 * (byte1 - 0xF0) + 4096 * byte2 + 64 * byte3 + byte4;else // longer encodings are not supported
                throw new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16), byte3.toString(16), byte4.toString(16)]));
            }
          }
        }

        if (utf16 > 0xFFFF) // 4 byte character - express as a surrogate pair
          {
            utf16 -= 0x10000;
            output += String.fromCharCode(0xD800 + (utf16 >> 10)); // lead character

            utf16 = 0xDC00 + (utf16 & 0x3FF); // trail character
          }

        output += String.fromCharCode(utf16);
      }

      return output;
    }
    /**
    * Repeat keepalive requests, monitor responses.
    * @ignore
    */


    var Pinger = function Pinger(client, keepAliveInterval) {
      this._client = client;
      this._keepAliveInterval = keepAliveInterval * 1000;
      this.isReset = false;
      var pingReq = new WireMessage(MESSAGE_TYPE.PINGREQ).encode();

      var doTimeout = function doTimeout(pinger) {
        return function () {
          return doPing.apply(pinger);
        };
      };
      /** @ignore */


      var doPing = function doPing() {
        if (!this.isReset) {
          this._client._trace("Pinger.doPing", "Timed out");

          this._client._disconnected(ERROR.PING_TIMEOUT.code, format(ERROR.PING_TIMEOUT));
        } else {
          this.isReset = false;

          this._client._trace("Pinger.doPing", "send PINGREQ");

          this._client.socket.send(pingReq);

          this.timeout = setTimeout(doTimeout(this), this._keepAliveInterval);
        }
      };

      this.reset = function () {
        this.isReset = true;
        clearTimeout(this.timeout);
        if (this._keepAliveInterval > 0) this.timeout = setTimeout(doTimeout(this), this._keepAliveInterval);
      };

      this.cancel = function () {
        clearTimeout(this.timeout);
      };
    };
    /**
    * Monitor request completion.
    * @ignore
    */


    var Timeout = function Timeout(client, timeoutSeconds, action, args) {
      if (!timeoutSeconds) timeoutSeconds = 30;

      var doTimeout = function doTimeout(action, client, args) {
        return function () {
          return action.apply(client, args);
        };
      };

      this.timeout = setTimeout(doTimeout(action, client, args), timeoutSeconds * 1000);

      this.cancel = function () {
        clearTimeout(this.timeout);
      };
    };
    /**
     * Internal implementation of the Websockets MQTT V3.1 client.
     *
     * @name Paho.ClientImpl @constructor
     * @param {String} host the DNS nameof the webSocket host.
     * @param {Number} port the port number for that host.
     * @param {String} clientId the MQ client identifier.
     */


    var ClientImpl = function ClientImpl(uri, host, port, path, clientId) {
      // Check dependencies are satisfied in this browser.
      if (!("WebSocket" in global && global.WebSocket !== null)) {
        throw new Error(format(ERROR.UNSUPPORTED, ["WebSocket"]));
      }

      if (!("ArrayBuffer" in global && global.ArrayBuffer !== null)) {
        throw new Error(format(ERROR.UNSUPPORTED, ["ArrayBuffer"]));
      }

      this._trace("Paho.Client", uri, host, port, path, clientId);

      this.host = host;
      this.port = port;
      this.path = path;
      this.uri = uri;
      this.clientId = clientId;
      this._wsuri = null; // Local storagekeys are qualified with the following string.
      // The conditional inclusion of path in the key is for backward
      // compatibility to when the path was not configurable and assumed to
      // be /mqtt

      this._localKey = host + ":" + port + (path != "/mqtt" ? ":" + path : "") + ":" + clientId + ":"; // Create private instance-only message queue
      // Internal queue of messages to be sent, in sending order.

      this._msg_queue = [];
      this._buffered_msg_queue = []; // Messages we have sent and are expecting a response for, indexed by their respective message ids.

      this._sentMessages = {}; // Messages we have received and acknowleged and are expecting a confirm message for
      // indexed by their respective message ids.

      this._receivedMessages = {}; // Internal list of callbacks to be executed when messages
      // have been successfully sent over web socket, e.g. disconnect
      // when it doesn't have to wait for ACK, just message is dispatched.

      this._notify_msg_sent = {}; // Unique identifier for SEND messages, incrementing
      // counter as messages are sent.

      this._message_identifier = 1; // Used to determine the transmission sequence of stored sent messages.

      this._sequence = 0; // Load the local state, if any, from the saved version, only restore state relevant to this client.

      for (var key in localStorage) {
        if (key.indexOf("Sent:" + this._localKey) === 0 || key.indexOf("Received:" + this._localKey) === 0) this.restore(key);
      }
    }; // Messaging Client public instance members.


    ClientImpl.prototype.host = null;
    ClientImpl.prototype.port = null;
    ClientImpl.prototype.path = null;
    ClientImpl.prototype.uri = null;
    ClientImpl.prototype.clientId = null; // Messaging Client private instance members.

    ClientImpl.prototype.socket = null;
    /* true once we have received an acknowledgement to a CONNECT packet. */

    ClientImpl.prototype.connected = false;
    /* The largest message identifier allowed, may not be larger than 2**16 but
     * if set smaller reduces the maximum number of outbound messages allowed.
     */

    ClientImpl.prototype.maxMessageIdentifier = 65536;
    ClientImpl.prototype.connectOptions = null;
    ClientImpl.prototype.hostIndex = null;
    ClientImpl.prototype.onConnected = null;
    ClientImpl.prototype.onConnectionLost = null;
    ClientImpl.prototype.onMessageDelivered = null;
    ClientImpl.prototype.onMessageArrived = null;
    ClientImpl.prototype.traceFunction = null;
    ClientImpl.prototype._msg_queue = null;
    ClientImpl.prototype._buffered_msg_queue = null;
    ClientImpl.prototype._connectTimeout = null;
    /* The sendPinger monitors how long we allow before we send data to prove to the server that we are alive. */

    ClientImpl.prototype.sendPinger = null;
    /* The receivePinger monitors how long we allow before we require evidence that the server is alive. */

    ClientImpl.prototype.receivePinger = null;
    ClientImpl.prototype._reconnectInterval = 1; // Reconnect Delay, starts at 1 second

    ClientImpl.prototype._reconnecting = false;
    ClientImpl.prototype._reconnectTimeout = null;
    ClientImpl.prototype.disconnectedPublishing = false;
    ClientImpl.prototype.disconnectedBufferSize = 5000;
    ClientImpl.prototype.receiveBuffer = null;
    ClientImpl.prototype._traceBuffer = null;
    ClientImpl.prototype._MAX_TRACE_ENTRIES = 100;

    ClientImpl.prototype.connect = function (connectOptions) {
      var connectOptionsMasked = this._traceMask(connectOptions, "password");

      this._trace("Client.connect", connectOptionsMasked, this.socket, this.connected);

      if (this.connected) throw new Error(format(ERROR.INVALID_STATE, ["already connected"]));
      if (this.socket) throw new Error(format(ERROR.INVALID_STATE, ["already connected"]));

      if (this._reconnecting) {
        // connect() function is called while reconnect is in progress.
        // Terminate the auto reconnect process to use new connect options.
        this._reconnectTimeout.cancel();

        this._reconnectTimeout = null;
        this._reconnecting = false;
      }

      this.connectOptions = connectOptions;
      this._reconnectInterval = 1;
      this._reconnecting = false;

      if (connectOptions.uris) {
        this.hostIndex = 0;

        this._doConnect(connectOptions.uris[0]);
      } else {
        this._doConnect(this.uri);
      }
    };

    ClientImpl.prototype.subscribe = function (filter, subscribeOptions) {
      this._trace("Client.subscribe", filter, subscribeOptions);

      if (!this.connected) throw new Error(format(ERROR.INVALID_STATE, ["not connected"]));
      var wireMessage = new WireMessage(MESSAGE_TYPE.SUBSCRIBE);
      wireMessage.topics = filter.constructor === Array ? filter : [filter];
      if (subscribeOptions.qos === undefined) subscribeOptions.qos = 0;
      wireMessage.requestedQos = [];

      for (var i = 0; i < wireMessage.topics.length; i++) {
        wireMessage.requestedQos[i] = subscribeOptions.qos;
      }

      if (subscribeOptions.onSuccess) {
        wireMessage.onSuccess = function (grantedQos) {
          subscribeOptions.onSuccess({
            invocationContext: subscribeOptions.invocationContext,
            grantedQos: grantedQos
          });
        };
      }

      if (subscribeOptions.onFailure) {
        wireMessage.onFailure = function (errorCode) {
          subscribeOptions.onFailure({
            invocationContext: subscribeOptions.invocationContext,
            errorCode: errorCode,
            errorMessage: format(errorCode)
          });
        };
      }

      if (subscribeOptions.timeout) {
        wireMessage.timeOut = new Timeout(this, subscribeOptions.timeout, subscribeOptions.onFailure, [{
          invocationContext: subscribeOptions.invocationContext,
          errorCode: ERROR.SUBSCRIBE_TIMEOUT.code,
          errorMessage: format(ERROR.SUBSCRIBE_TIMEOUT)
        }]);
      } // All subscriptions return a SUBACK.


      this._requires_ack(wireMessage);

      this._schedule_message(wireMessage);
    };
    /** @ignore */


    ClientImpl.prototype.unsubscribe = function (filter, unsubscribeOptions) {
      this._trace("Client.unsubscribe", filter, unsubscribeOptions);

      if (!this.connected) throw new Error(format(ERROR.INVALID_STATE, ["not connected"]));
      var wireMessage = new WireMessage(MESSAGE_TYPE.UNSUBSCRIBE);
      wireMessage.topics = filter.constructor === Array ? filter : [filter];

      if (unsubscribeOptions.onSuccess) {
        wireMessage.callback = function () {
          unsubscribeOptions.onSuccess({
            invocationContext: unsubscribeOptions.invocationContext
          });
        };
      }

      if (unsubscribeOptions.timeout) {
        wireMessage.timeOut = new Timeout(this, unsubscribeOptions.timeout, unsubscribeOptions.onFailure, [{
          invocationContext: unsubscribeOptions.invocationContext,
          errorCode: ERROR.UNSUBSCRIBE_TIMEOUT.code,
          errorMessage: format(ERROR.UNSUBSCRIBE_TIMEOUT)
        }]);
      } // All unsubscribes return a SUBACK.


      this._requires_ack(wireMessage);

      this._schedule_message(wireMessage);
    };

    ClientImpl.prototype.send = function (message) {
      this._trace("Client.send", message);

      var wireMessage = new WireMessage(MESSAGE_TYPE.PUBLISH);
      wireMessage.payloadMessage = message;

      if (this.connected) {
        // Mark qos 1 & 2 message as "ACK required"
        // For qos 0 message, invoke onMessageDelivered callback if there is one.
        // Then schedule the message.
        if (message.qos > 0) {
          this._requires_ack(wireMessage);
        } else if (this.onMessageDelivered) {
          this._notify_msg_sent[wireMessage] = this.onMessageDelivered(wireMessage.payloadMessage);
        }

        this._schedule_message(wireMessage);
      } else {
        // Currently disconnected, will not schedule this message
        // Check if reconnecting is in progress and disconnected publish is enabled.
        if (this._reconnecting && this.disconnectedPublishing) {
          // Check the limit which include the "required ACK" messages
          var messageCount = Object.keys(this._sentMessages).length + this._buffered_msg_queue.length;

          if (messageCount > this.disconnectedBufferSize) {
            throw new Error(format(ERROR.BUFFER_FULL, [this.disconnectedBufferSize]));
          } else {
            if (message.qos > 0) {
              // Mark this message as "ACK required"
              this._requires_ack(wireMessage);
            } else {
              wireMessage.sequence = ++this._sequence; // Add messages in fifo order to array, by adding to start

              this._buffered_msg_queue.unshift(wireMessage);
            }
          }
        } else {
          throw new Error(format(ERROR.INVALID_STATE, ["not connected"]));
        }
      }
    };

    ClientImpl.prototype.disconnect = function () {
      this._trace("Client.disconnect");

      if (this._reconnecting) {
        // disconnect() function is called while reconnect is in progress.
        // Terminate the auto reconnect process.
        this._reconnectTimeout.cancel();

        this._reconnectTimeout = null;
        this._reconnecting = false;
      }

      if (!this.socket) throw new Error(format(ERROR.INVALID_STATE, ["not connecting or connected"]));
      var wireMessage = new WireMessage(MESSAGE_TYPE.DISCONNECT); // Run the disconnected call back as soon as the message has been sent,
      // in case of a failure later on in the disconnect processing.
      // as a consequence, the _disconected call back may be run several times.

      this._notify_msg_sent[wireMessage] = scope(this._disconnected, this);

      this._schedule_message(wireMessage);
    };

    ClientImpl.prototype.getTraceLog = function () {
      if (this._traceBuffer !== null) {
        this._trace("Client.getTraceLog", new Date());

        this._trace("Client.getTraceLog in flight messages", this._sentMessages.length);

        for (var key in this._sentMessages) {
          this._trace("_sentMessages ", key, this._sentMessages[key]);
        }

        for (var key in this._receivedMessages) {
          this._trace("_receivedMessages ", key, this._receivedMessages[key]);
        }

        return this._traceBuffer;
      }
    };

    ClientImpl.prototype.startTrace = function () {
      if (this._traceBuffer === null) {
        this._traceBuffer = [];
      }

      this._trace("Client.startTrace", new Date(), version);
    };

    ClientImpl.prototype.stopTrace = function () {
      delete this._traceBuffer;
    };

    ClientImpl.prototype._doConnect = function (wsurl) {
      // When the socket is open, this client will send the CONNECT WireMessage using the saved parameters.
      if (this.connectOptions.useSSL) {
        var uriParts = wsurl.split(":");
        uriParts[0] = "wss";
        wsurl = uriParts.join(":");
      }

      this._wsuri = wsurl;
      this.connected = false;

      if (this.connectOptions.mqttVersion < 4) {
        this.socket = new WebSocket(wsurl, ["mqttv3.1"]);
      } else {
        this.socket = new WebSocket(wsurl, ["mqtt"]);
      }

      this.socket.binaryType = "arraybuffer";
      this.socket.onopen = scope(this._on_socket_open, this);
      this.socket.onmessage = scope(this._on_socket_message, this);
      this.socket.onerror = scope(this._on_socket_error, this);
      this.socket.onclose = scope(this._on_socket_close, this);
      this.sendPinger = new Pinger(this, this.connectOptions.keepAliveInterval);
      this.receivePinger = new Pinger(this, this.connectOptions.keepAliveInterval);

      if (this._connectTimeout) {
        this._connectTimeout.cancel();

        this._connectTimeout = null;
      }

      this._connectTimeout = new Timeout(this, this.connectOptions.timeout, this._disconnected, [ERROR.CONNECT_TIMEOUT.code, format(ERROR.CONNECT_TIMEOUT)]);
    }; // Schedule a new message to be sent over the WebSockets
    // connection. CONNECT messages cause WebSocket connection
    // to be started. All other messages are queued internally
    // until this has happened. When WS connection starts, process
    // all outstanding messages.


    ClientImpl.prototype._schedule_message = function (message) {
      // Add messages in fifo order to array, by adding to start
      this._msg_queue.unshift(message); // Process outstanding messages in the queue if we have an  open socket, and have received CONNACK.


      if (this.connected) {
        this._process_queue();
      }
    };

    ClientImpl.prototype.store = function (prefix, wireMessage) {
      var storedMessage = {
        type: wireMessage.type,
        messageIdentifier: wireMessage.messageIdentifier,
        version: 1
      };

      switch (wireMessage.type) {
        case MESSAGE_TYPE.PUBLISH:
          if (wireMessage.pubRecReceived) storedMessage.pubRecReceived = true; // Convert the payload to a hex string.

          storedMessage.payloadMessage = {};
          var hex = "";
          var messageBytes = wireMessage.payloadMessage.payloadBytes;

          for (var i = 0; i < messageBytes.length; i++) {
            if (messageBytes[i] <= 0xF) hex = hex + "0" + messageBytes[i].toString(16);else hex = hex + messageBytes[i].toString(16);
          }

          storedMessage.payloadMessage.payloadHex = hex;
          storedMessage.payloadMessage.qos = wireMessage.payloadMessage.qos;
          storedMessage.payloadMessage.destinationName = wireMessage.payloadMessage.destinationName;
          if (wireMessage.payloadMessage.duplicate) storedMessage.payloadMessage.duplicate = true;
          if (wireMessage.payloadMessage.retained) storedMessage.payloadMessage.retained = true; // Add a sequence number to sent messages.

          if (prefix.indexOf("Sent:") === 0) {
            if (wireMessage.sequence === undefined) wireMessage.sequence = ++this._sequence;
            storedMessage.sequence = wireMessage.sequence;
          }

          break;

        default:
          throw Error(format(ERROR.INVALID_STORED_DATA, [prefix + this._localKey + wireMessage.messageIdentifier, storedMessage]));
      }

      localStorage.setItem(prefix + this._localKey + wireMessage.messageIdentifier, JSON.stringify(storedMessage));
    };

    ClientImpl.prototype.restore = function (key) {
      var value = localStorage.getItem(key);
      var storedMessage = JSON.parse(value);
      var wireMessage = new WireMessage(storedMessage.type, storedMessage);

      switch (storedMessage.type) {
        case MESSAGE_TYPE.PUBLISH:
          // Replace the payload message with a Message object.
          var hex = storedMessage.payloadMessage.payloadHex;
          var buffer = new ArrayBuffer(hex.length / 2);
          var byteStream = new Uint8Array(buffer);
          var i = 0;

          while (hex.length >= 2) {
            var x = parseInt(hex.substring(0, 2), 16);
            hex = hex.substring(2, hex.length);
            byteStream[i++] = x;
          }

          var payloadMessage = new Message(byteStream);
          payloadMessage.qos = storedMessage.payloadMessage.qos;
          payloadMessage.destinationName = storedMessage.payloadMessage.destinationName;
          if (storedMessage.payloadMessage.duplicate) payloadMessage.duplicate = true;
          if (storedMessage.payloadMessage.retained) payloadMessage.retained = true;
          wireMessage.payloadMessage = payloadMessage;
          break;

        default:
          throw Error(format(ERROR.INVALID_STORED_DATA, [key, value]));
      }

      if (key.indexOf("Sent:" + this._localKey) === 0) {
        wireMessage.payloadMessage.duplicate = true;
        this._sentMessages[wireMessage.messageIdentifier] = wireMessage;
      } else if (key.indexOf("Received:" + this._localKey) === 0) {
        this._receivedMessages[wireMessage.messageIdentifier] = wireMessage;
      }
    };

    ClientImpl.prototype._process_queue = function () {
      var message = null; // Send all queued messages down socket connection

      while (message = this._msg_queue.pop()) {
        this._socket_send(message); // Notify listeners that message was successfully sent


        if (this._notify_msg_sent[message]) {
          this._notify_msg_sent[message]();

          delete this._notify_msg_sent[message];
        }
      }
    };
    /**
    * Expect an ACK response for this message. Add message to the set of in progress
    * messages and set an unused identifier in this message.
    * @ignore
    */


    ClientImpl.prototype._requires_ack = function (wireMessage) {
      var messageCount = Object.keys(this._sentMessages).length;
      if (messageCount > this.maxMessageIdentifier) throw Error("Too many messages:" + messageCount);

      while (this._sentMessages[this._message_identifier] !== undefined) {
        this._message_identifier++;
      }

      wireMessage.messageIdentifier = this._message_identifier;
      this._sentMessages[wireMessage.messageIdentifier] = wireMessage;

      if (wireMessage.type === MESSAGE_TYPE.PUBLISH) {
        this.store("Sent:", wireMessage);
      }

      if (this._message_identifier === this.maxMessageIdentifier) {
        this._message_identifier = 1;
      }
    };
    /**
    * Called when the underlying websocket has been opened.
    * @ignore
    */


    ClientImpl.prototype._on_socket_open = function () {
      // Create the CONNECT message object.
      var wireMessage = new WireMessage(MESSAGE_TYPE.CONNECT, this.connectOptions);
      wireMessage.clientId = this.clientId;

      this._socket_send(wireMessage);
    };
    /**
    * Called when the underlying websocket has received a complete packet.
    * @ignore
    */


    ClientImpl.prototype._on_socket_message = function (event) {
      this._trace("Client._on_socket_message", event.data);

      var messages = this._deframeMessages(event.data);

      for (var i = 0; i < messages.length; i += 1) {
        this._handleMessage(messages[i]);
      }
    };

    ClientImpl.prototype._deframeMessages = function (data) {
      var byteArray = new Uint8Array(data);
      var messages = [];

      if (this.receiveBuffer) {
        var newData = new Uint8Array(this.receiveBuffer.length + byteArray.length);
        newData.set(this.receiveBuffer);
        newData.set(byteArray, this.receiveBuffer.length);
        byteArray = newData;
        delete this.receiveBuffer;
      }

      try {
        var offset = 0;

        while (offset < byteArray.length) {
          var result = decodeMessage(byteArray, offset);
          var wireMessage = result[0];
          offset = result[1];

          if (wireMessage !== null) {
            messages.push(wireMessage);
          } else {
            break;
          }
        }

        if (offset < byteArray.length) {
          this.receiveBuffer = byteArray.subarray(offset);
        }
      } catch (error) {
        var errorStack = error.hasOwnProperty("stack") == "undefined" ? error.stack.toString() : "No Error Stack Available";

        this._disconnected(ERROR.INTERNAL_ERROR.code, format(ERROR.INTERNAL_ERROR, [error.message, errorStack]));

        return;
      }

      return messages;
    };

    ClientImpl.prototype._handleMessage = function (wireMessage) {
      this._trace("Client._handleMessage", wireMessage);

      try {
        switch (wireMessage.type) {
          case MESSAGE_TYPE.CONNACK:
            this._connectTimeout.cancel();

            if (this._reconnectTimeout) this._reconnectTimeout.cancel(); // If we have started using clean session then clear up the local state.

            if (this.connectOptions.cleanSession) {
              for (var key in this._sentMessages) {
                var sentMessage = this._sentMessages[key];
                localStorage.removeItem("Sent:" + this._localKey + sentMessage.messageIdentifier);
              }

              this._sentMessages = {};

              for (var key in this._receivedMessages) {
                var receivedMessage = this._receivedMessages[key];
                localStorage.removeItem("Received:" + this._localKey + receivedMessage.messageIdentifier);
              }

              this._receivedMessages = {};
            } // Client connected and ready for business.


            if (wireMessage.returnCode === 0) {
              this.connected = true; // Jump to the end of the list of uris and stop looking for a good host.

              if (this.connectOptions.uris) this.hostIndex = this.connectOptions.uris.length;
            } else {
              this._disconnected(ERROR.CONNACK_RETURNCODE.code, format(ERROR.CONNACK_RETURNCODE, [wireMessage.returnCode, CONNACK_RC[wireMessage.returnCode]]));

              break;
            } // Resend messages.


            var sequencedMessages = [];

            for (var msgId in this._sentMessages) {
              if (this._sentMessages.hasOwnProperty(msgId)) sequencedMessages.push(this._sentMessages[msgId]);
            } // Also schedule qos 0 buffered messages if any


            if (this._buffered_msg_queue.length > 0) {
              var msg = null;

              while (msg = this._buffered_msg_queue.pop()) {
                sequencedMessages.push(msg);
                if (this.onMessageDelivered) this._notify_msg_sent[msg] = this.onMessageDelivered(msg.payloadMessage);
              }
            } // Sort sentMessages into the original sent order.


            var sequencedMessages = sequencedMessages.sort(function (a, b) {
              return a.sequence - b.sequence;
            });

            for (var i = 0, len = sequencedMessages.length; i < len; i++) {
              var sentMessage = sequencedMessages[i];

              if (sentMessage.type == MESSAGE_TYPE.PUBLISH && sentMessage.pubRecReceived) {
                var pubRelMessage = new WireMessage(MESSAGE_TYPE.PUBREL, {
                  messageIdentifier: sentMessage.messageIdentifier
                });

                this._schedule_message(pubRelMessage);
              } else {
                this._schedule_message(sentMessage);
              }
            } // Execute the connectOptions.onSuccess callback if there is one.
            // Will also now return if this connection was the result of an automatic
            // reconnect and which URI was successfully connected to.


            if (this.connectOptions.onSuccess) {
              this.connectOptions.onSuccess({
                invocationContext: this.connectOptions.invocationContext
              });
            }

            var reconnected = false;

            if (this._reconnecting) {
              reconnected = true;
              this._reconnectInterval = 1;
              this._reconnecting = false;
            } // Execute the onConnected callback if there is one.


            this._connected(reconnected, this._wsuri); // Process all queued messages now that the connection is established.


            this._process_queue();

            break;

          case MESSAGE_TYPE.PUBLISH:
            this._receivePublish(wireMessage);

            break;

          case MESSAGE_TYPE.PUBACK:
            var sentMessage = this._sentMessages[wireMessage.messageIdentifier]; // If this is a re flow of a PUBACK after we have restarted receivedMessage will not exist.

            if (sentMessage) {
              delete this._sentMessages[wireMessage.messageIdentifier];
              localStorage.removeItem("Sent:" + this._localKey + wireMessage.messageIdentifier);
              if (this.onMessageDelivered) this.onMessageDelivered(sentMessage.payloadMessage);
            }

            break;

          case MESSAGE_TYPE.PUBREC:
            var sentMessage = this._sentMessages[wireMessage.messageIdentifier]; // If this is a re flow of a PUBREC after we have restarted receivedMessage will not exist.

            if (sentMessage) {
              sentMessage.pubRecReceived = true;
              var pubRelMessage = new WireMessage(MESSAGE_TYPE.PUBREL, {
                messageIdentifier: wireMessage.messageIdentifier
              });
              this.store("Sent:", sentMessage);

              this._schedule_message(pubRelMessage);
            }

            break;

          case MESSAGE_TYPE.PUBREL:
            var receivedMessage = this._receivedMessages[wireMessage.messageIdentifier];
            localStorage.removeItem("Received:" + this._localKey + wireMessage.messageIdentifier); // If this is a re flow of a PUBREL after we have restarted receivedMessage will not exist.

            if (receivedMessage) {
              this._receiveMessage(receivedMessage);

              delete this._receivedMessages[wireMessage.messageIdentifier];
            } // Always flow PubComp, we may have previously flowed PubComp but the server lost it and restarted.


            var pubCompMessage = new WireMessage(MESSAGE_TYPE.PUBCOMP, {
              messageIdentifier: wireMessage.messageIdentifier
            });

            this._schedule_message(pubCompMessage);

            break;

          case MESSAGE_TYPE.PUBCOMP:
            var sentMessage = this._sentMessages[wireMessage.messageIdentifier];
            delete this._sentMessages[wireMessage.messageIdentifier];
            localStorage.removeItem("Sent:" + this._localKey + wireMessage.messageIdentifier);
            if (this.onMessageDelivered) this.onMessageDelivered(sentMessage.payloadMessage);
            break;

          case MESSAGE_TYPE.SUBACK:
            var sentMessage = this._sentMessages[wireMessage.messageIdentifier];

            if (sentMessage) {
              if (sentMessage.timeOut) sentMessage.timeOut.cancel(); // This will need to be fixed when we add multiple topic support

              if (wireMessage.returnCode[0] === 0x80) {
                if (sentMessage.onFailure) {
                  sentMessage.onFailure(wireMessage.returnCode);
                }
              } else if (sentMessage.onSuccess) {
                sentMessage.onSuccess(wireMessage.returnCode);
              }

              delete this._sentMessages[wireMessage.messageIdentifier];
            }

            break;

          case MESSAGE_TYPE.UNSUBACK:
            var sentMessage = this._sentMessages[wireMessage.messageIdentifier];

            if (sentMessage) {
              if (sentMessage.timeOut) sentMessage.timeOut.cancel();

              if (sentMessage.callback) {
                sentMessage.callback();
              }

              delete this._sentMessages[wireMessage.messageIdentifier];
            }

            break;

          case MESSAGE_TYPE.PINGRESP:
            /* The sendPinger or receivePinger may have sent a ping, the receivePinger has already been reset. */
            this.sendPinger.reset();
            break;

          case MESSAGE_TYPE.DISCONNECT:
            // Clients do not expect to receive disconnect packets.
            this._disconnected(ERROR.INVALID_MQTT_MESSAGE_TYPE.code, format(ERROR.INVALID_MQTT_MESSAGE_TYPE, [wireMessage.type]));

            break;

          default:
            this._disconnected(ERROR.INVALID_MQTT_MESSAGE_TYPE.code, format(ERROR.INVALID_MQTT_MESSAGE_TYPE, [wireMessage.type]));

        }
      } catch (error) {
        var errorStack = error.hasOwnProperty("stack") == "undefined" ? error.stack.toString() : "No Error Stack Available";

        this._disconnected(ERROR.INTERNAL_ERROR.code, format(ERROR.INTERNAL_ERROR, [error.message, errorStack]));

        return;
      }
    };
    /** @ignore */


    ClientImpl.prototype._on_socket_error = function (error) {
      if (!this._reconnecting) {
        this._disconnected(ERROR.SOCKET_ERROR.code, format(ERROR.SOCKET_ERROR, [error.data]));
      }
    };
    /** @ignore */


    ClientImpl.prototype._on_socket_close = function () {
      if (!this._reconnecting) {
        this._disconnected(ERROR.SOCKET_CLOSE.code, format(ERROR.SOCKET_CLOSE));
      }
    };
    /** @ignore */


    ClientImpl.prototype._socket_send = function (wireMessage) {
      if (wireMessage.type == 1) {
        var wireMessageMasked = this._traceMask(wireMessage, "password");

        this._trace("Client._socket_send", wireMessageMasked);
      } else this._trace("Client._socket_send", wireMessage);

      this.socket.send(wireMessage.encode());
      /* We have proved to the server we are alive. */

      this.sendPinger.reset();
    };
    /** @ignore */


    ClientImpl.prototype._receivePublish = function (wireMessage) {
      switch (wireMessage.payloadMessage.qos) {
        case "undefined":
        case 0:
          this._receiveMessage(wireMessage);

          break;

        case 1:
          var pubAckMessage = new WireMessage(MESSAGE_TYPE.PUBACK, {
            messageIdentifier: wireMessage.messageIdentifier
          });

          this._schedule_message(pubAckMessage);

          this._receiveMessage(wireMessage);

          break;

        case 2:
          this._receivedMessages[wireMessage.messageIdentifier] = wireMessage;
          this.store("Received:", wireMessage);
          var pubRecMessage = new WireMessage(MESSAGE_TYPE.PUBREC, {
            messageIdentifier: wireMessage.messageIdentifier
          });

          this._schedule_message(pubRecMessage);

          break;

        default:
          throw Error("Invaild qos=" + wireMessage.payloadMessage.qos);
      }
    };
    /** @ignore */


    ClientImpl.prototype._receiveMessage = function (wireMessage) {
      if (this.onMessageArrived) {
        this.onMessageArrived(wireMessage.payloadMessage);
      }
    };
    /**
    * Client has connected.
    * @param {reconnect} [boolean] indicate if this was a result of reconnect operation.
    * @param {uri} [string] fully qualified WebSocket URI of the server.
    */


    ClientImpl.prototype._connected = function (reconnect, uri) {
      // Execute the onConnected callback if there is one.
      if (this.onConnected) this.onConnected(reconnect, uri);
    };
    /**
    * Attempts to reconnect the client to the server.
     * For each reconnect attempt, will double the reconnect interval
     * up to 128 seconds.
    */


    ClientImpl.prototype._reconnect = function () {
      this._trace("Client._reconnect");

      if (!this.connected) {
        this._reconnecting = true;
        this.sendPinger.cancel();
        this.receivePinger.cancel();
        if (this._reconnectInterval < 128) this._reconnectInterval = this._reconnectInterval * 2;

        if (this.connectOptions.uris) {
          this.hostIndex = 0;

          this._doConnect(this.connectOptions.uris[0]);
        } else {
          this._doConnect(this.uri);
        }
      }
    };
    /**
    * Client has disconnected either at its own request or because the server
    * or network disconnected it. Remove all non-durable state.
    * @param {errorCode} [number] the error number.
    * @param {errorText} [string] the error text.
    * @ignore
    */


    ClientImpl.prototype._disconnected = function (errorCode, errorText) {
      this._trace("Client._disconnected", errorCode, errorText);

      if (errorCode !== undefined && this._reconnecting) {
        //Continue automatic reconnect process
        this._reconnectTimeout = new Timeout(this, this._reconnectInterval, this._reconnect);
        return;
      }

      this.sendPinger.cancel();
      this.receivePinger.cancel();

      if (this._connectTimeout) {
        this._connectTimeout.cancel();

        this._connectTimeout = null;
      } // Clear message buffers.


      this._msg_queue = [];
      this._buffered_msg_queue = [];
      this._notify_msg_sent = {};

      if (this.socket) {
        // Cancel all socket callbacks so that they cannot be driven again by this socket.
        this.socket.onopen = null;
        this.socket.onmessage = null;
        this.socket.onerror = null;
        this.socket.onclose = null;
        if (this.socket.readyState === 1) this.socket.close();
        delete this.socket;
      }

      if (this.connectOptions.uris && this.hostIndex < this.connectOptions.uris.length - 1) {
        // Try the next host.
        this.hostIndex++;

        this._doConnect(this.connectOptions.uris[this.hostIndex]);
      } else {
        if (errorCode === undefined) {
          errorCode = ERROR.OK.code;
          errorText = format(ERROR.OK);
        } // Run any application callbacks last as they may attempt to reconnect and hence create a new socket.


        if (this.connected) {
          this.connected = false; // Execute the connectionLostCallback if there is one, and we were connected.

          if (this.onConnectionLost) {
            this.onConnectionLost({
              errorCode: errorCode,
              errorMessage: errorText,
              reconnect: this.connectOptions.reconnect,
              uri: this._wsuri
            });
          }

          if (errorCode !== ERROR.OK.code && this.connectOptions.reconnect) {
            // Start automatic reconnect process for the very first time since last successful connect.
            this._reconnectInterval = 1;

            this._reconnect();

            return;
          }
        } else {
          // Otherwise we never had a connection, so indicate that the connect has failed.
          if (this.connectOptions.mqttVersion === 4 && this.connectOptions.mqttVersionExplicit === false) {
            this._trace("Failed to connect V4, dropping back to V3");

            this.connectOptions.mqttVersion = 3;

            if (this.connectOptions.uris) {
              this.hostIndex = 0;

              this._doConnect(this.connectOptions.uris[0]);
            } else {
              this._doConnect(this.uri);
            }
          } else if (this.connectOptions.onFailure) {
            this.connectOptions.onFailure({
              invocationContext: this.connectOptions.invocationContext,
              errorCode: errorCode,
              errorMessage: errorText
            });
          }
        }
      }
    };
    /** @ignore */


    ClientImpl.prototype._trace = function () {
      // Pass trace message back to client's callback function
      if (this.traceFunction) {
        var args = Array.prototype.slice.call(arguments);

        for (var i in args) {
          if (typeof args[i] !== "undefined") args.splice(i, 1, JSON.stringify(args[i]));
        }

        var record = args.join("");
        this.traceFunction({
          severity: "Debug",
          message: record
        });
      } //buffer style trace


      if (this._traceBuffer !== null) {
        for (var i = 0, max = arguments.length; i < max; i++) {
          if (this._traceBuffer.length == this._MAX_TRACE_ENTRIES) {
            this._traceBuffer.shift();
          }

          if (i === 0) this._traceBuffer.push(arguments[i]);else if (typeof arguments[i] === "undefined") this._traceBuffer.push(arguments[i]);else this._traceBuffer.push("  " + JSON.stringify(arguments[i]));
        }
      }
    };
    /** @ignore */


    ClientImpl.prototype._traceMask = function (traceObject, masked) {
      var traceObjectMasked = {};

      for (var attr in traceObject) {
        if (traceObject.hasOwnProperty(attr)) {
          if (attr == masked) traceObjectMasked[attr] = "******";else traceObjectMasked[attr] = traceObject[attr];
        }
      }

      return traceObjectMasked;
    }; // ------------------------------------------------------------------------
    // Public Programming interface.
    // ------------------------------------------------------------------------

    /**
    * The JavaScript application communicates to the server using a {@link Paho.Client} object.
    * <p>
    * Most applications will create just one Client object and then call its connect() method,
    * however applications can create more than one Client object if they wish.
    * In this case the combination of host, port and clientId attributes must be different for each Client object.
    * <p>
    * The send, subscribe and unsubscribe methods are implemented as asynchronous JavaScript methods
    * (even though the underlying protocol exchange might be synchronous in nature).
    * This means they signal their completion by calling back to the application,
    * via Success or Failure callback functions provided by the application on the method in question.
    * Such callbacks are called at most once per method invocation and do not persist beyond the lifetime
    * of the script that made the invocation.
    * <p>
    * In contrast there are some callback functions, most notably <i>onMessageArrived</i>,
    * that are defined on the {@link Paho.Client} object.
    * These may get called multiple times, and aren't directly related to specific method invocations made by the client.
    *
    * @name Paho.Client
    *
    * @constructor
    *
    * @param {string} host - the address of the messaging server, as a fully qualified WebSocket URI, as a DNS name or dotted decimal IP address.
    * @param {number} port - the port number to connect to - only required if host is not a URI
    * @param {string} path - the path on the host to connect to - only used if host is not a URI. Default: '/mqtt'.
    * @param {string} clientId - the Messaging client identifier, between 1 and 23 characters in length.
    *
    * @property {string} host - <i>read only</i> the server's DNS hostname or dotted decimal IP address.
    * @property {number} port - <i>read only</i> the server's port.
    * @property {string} path - <i>read only</i> the server's path.
    * @property {string} clientId - <i>read only</i> used when connecting to the server.
    * @property {function} onConnectionLost - called when a connection has been lost.
    *                            after a connect() method has succeeded.
    *                            Establish the call back used when a connection has been lost. The connection may be
    *                            lost because the client initiates a disconnect or because the server or network
    *                            cause the client to be disconnected. The disconnect call back may be called without
    *                            the connectionComplete call back being invoked if, for example the client fails to
    *                            connect.
    *                            A single response object parameter is passed to the onConnectionLost callback containing the following fields:
    *                            <ol>
    *                            <li>errorCode
    *                            <li>errorMessage
    *                            </ol>
    * @property {function} onMessageDelivered - called when a message has been delivered.
    *                            All processing that this Client will ever do has been completed. So, for example,
    *                            in the case of a Qos=2 message sent by this client, the PubComp flow has been received from the server
    *                            and the message has been removed from persistent storage before this callback is invoked.
    *                            Parameters passed to the onMessageDelivered callback are:
    *                            <ol>
    *                            <li>{@link Paho.Message} that was delivered.
    *                            </ol>
    * @property {function} onMessageArrived - called when a message has arrived in this Paho.client.
    *                            Parameters passed to the onMessageArrived callback are:
    *                            <ol>
    *                            <li>{@link Paho.Message} that has arrived.
    *                            </ol>
    * @property {function} onConnected - called when a connection is successfully made to the server.
    *                                  after a connect() method.
    *                                  Parameters passed to the onConnected callback are:
    *                                  <ol>
    *                                  <li>reconnect (boolean) - If true, the connection was the result of a reconnect.</li>
    *                                  <li>URI (string) - The URI used to connect to the server.</li>
    *                                  </ol>
    * @property {boolean} disconnectedPublishing - if set, will enable disconnected publishing in
    *                                            in the event that the connection to the server is lost.
    * @property {number} disconnectedBufferSize - Used to set the maximum number of messages that the disconnected
    *                                             buffer will hold before rejecting new messages. Default size: 5000 messages
    * @property {function} trace - called whenever trace is called. TODO
    */


    var Client = function Client(host, port, path, clientId) {
      var uri;
      if (typeof host !== "string") throw new Error(format(ERROR.INVALID_TYPE, [typeof host, "host"]));

      if (arguments.length == 2) {
        // host: must be full ws:// uri
        // port: clientId
        clientId = port;
        uri = host;
        var match = uri.match(/^(wss?):\/\/((\[(.+)\])|([^\/]+?))(:(\d+))?(\/.*)$/);

        if (match) {
          host = match[4] || match[2];
          port = parseInt(match[7]);
          path = match[8];
        } else {
          throw new Error(format(ERROR.INVALID_ARGUMENT, [host, "host"]));
        }
      } else {
        if (arguments.length == 3) {
          clientId = path;
          path = "/mqtt";
        }

        if (typeof port !== "number" || port < 0) throw new Error(format(ERROR.INVALID_TYPE, [typeof port, "port"]));
        if (typeof path !== "string") throw new Error(format(ERROR.INVALID_TYPE, [typeof path, "path"]));
        var ipv6AddSBracket = host.indexOf(":") !== -1 && host.slice(0, 1) !== "[" && host.slice(-1) !== "]";
        uri = "ws://" + (ipv6AddSBracket ? "[" + host + "]" : host) + ":" + port + path;
      }

      var clientIdLength = 0;

      for (var i = 0; i < clientId.length; i++) {
        var charCode = clientId.charCodeAt(i);

        if (0xD800 <= charCode && charCode <= 0xDBFF) {
          i++; // Surrogate pair.
        }

        clientIdLength++;
      }

      if (typeof clientId !== "string" || clientIdLength > 65535) throw new Error(format(ERROR.INVALID_ARGUMENT, [clientId, "clientId"]));
      var client = new ClientImpl(uri, host, port, path, clientId); //Public Properties

      Object.defineProperties(this, {
        "host": {
          get: function get() {
            return host;
          },
          set: function set() {
            throw new Error(format(ERROR.UNSUPPORTED_OPERATION));
          }
        },
        "port": {
          get: function get() {
            return port;
          },
          set: function set() {
            throw new Error(format(ERROR.UNSUPPORTED_OPERATION));
          }
        },
        "path": {
          get: function get() {
            return path;
          },
          set: function set() {
            throw new Error(format(ERROR.UNSUPPORTED_OPERATION));
          }
        },
        "uri": {
          get: function get() {
            return uri;
          },
          set: function set() {
            throw new Error(format(ERROR.UNSUPPORTED_OPERATION));
          }
        },
        "clientId": {
          get: function get() {
            return client.clientId;
          },
          set: function set() {
            throw new Error(format(ERROR.UNSUPPORTED_OPERATION));
          }
        },
        "onConnected": {
          get: function get() {
            return client.onConnected;
          },
          set: function set(newOnConnected) {
            if (typeof newOnConnected === "function") client.onConnected = newOnConnected;else throw new Error(format(ERROR.INVALID_TYPE, [typeof newOnConnected, "onConnected"]));
          }
        },
        "disconnectedPublishing": {
          get: function get() {
            return client.disconnectedPublishing;
          },
          set: function set(newDisconnectedPublishing) {
            client.disconnectedPublishing = newDisconnectedPublishing;
          }
        },
        "disconnectedBufferSize": {
          get: function get() {
            return client.disconnectedBufferSize;
          },
          set: function set(newDisconnectedBufferSize) {
            client.disconnectedBufferSize = newDisconnectedBufferSize;
          }
        },
        "onConnectionLost": {
          get: function get() {
            return client.onConnectionLost;
          },
          set: function set(newOnConnectionLost) {
            if (typeof newOnConnectionLost === "function") client.onConnectionLost = newOnConnectionLost;else throw new Error(format(ERROR.INVALID_TYPE, [typeof newOnConnectionLost, "onConnectionLost"]));
          }
        },
        "onMessageDelivered": {
          get: function get() {
            return client.onMessageDelivered;
          },
          set: function set(newOnMessageDelivered) {
            if (typeof newOnMessageDelivered === "function") client.onMessageDelivered = newOnMessageDelivered;else throw new Error(format(ERROR.INVALID_TYPE, [typeof newOnMessageDelivered, "onMessageDelivered"]));
          }
        },
        "onMessageArrived": {
          get: function get() {
            return client.onMessageArrived;
          },
          set: function set(newOnMessageArrived) {
            if (typeof newOnMessageArrived === "function") client.onMessageArrived = newOnMessageArrived;else throw new Error(format(ERROR.INVALID_TYPE, [typeof newOnMessageArrived, "onMessageArrived"]));
          }
        },
        "trace": {
          get: function get() {
            return client.traceFunction;
          },
          set: function set(trace) {
            if (typeof trace === "function") {
              client.traceFunction = trace;
            } else {
              throw new Error(format(ERROR.INVALID_TYPE, [typeof trace, "onTrace"]));
            }
          }
        }
      });
      /**
      * Connect this Messaging client to its server.
      *
      * @name Paho.Client#connect
      * @function
      * @param {object} connectOptions - Attributes used with the connection.
      * @param {number} connectOptions.timeout - If the connect has not succeeded within this
      *                    number of seconds, it is deemed to have failed.
      *                    The default is 30 seconds.
      * @param {string} connectOptions.userName - Authentication username for this connection.
      * @param {string} connectOptions.password - Authentication password for this connection.
      * @param {Paho.Message} connectOptions.willMessage - sent by the server when the client
      *                    disconnects abnormally.
      * @param {number} connectOptions.keepAliveInterval - the server disconnects this client if
      *                    there is no activity for this number of seconds.
      *                    The default value of 60 seconds is assumed if not set.
      * @param {boolean} connectOptions.cleanSession - if true(default) the client and server
      *                    persistent state is deleted on successful connect.
      * @param {boolean} connectOptions.useSSL - if present and true, use an SSL Websocket connection.
      * @param {object} connectOptions.invocationContext - passed to the onSuccess callback or onFailure callback.
      * @param {function} connectOptions.onSuccess - called when the connect acknowledgement
      *                    has been received from the server.
      * A single response object parameter is passed to the onSuccess callback containing the following fields:
      * <ol>
      * <li>invocationContext as passed in to the onSuccess method in the connectOptions.
      * </ol>
      * @param {function} connectOptions.onFailure - called when the connect request has failed or timed out.
      * A single response object parameter is passed to the onFailure callback containing the following fields:
      * <ol>
      * <li>invocationContext as passed in to the onFailure method in the connectOptions.
      * <li>errorCode a number indicating the nature of the error.
      * <li>errorMessage text describing the error.
      * </ol>
      * @param {array} connectOptions.hosts - If present this contains either a set of hostnames or fully qualified
      * WebSocket URIs (ws://iot.eclipse.org:80/ws), that are tried in order in place
      * of the host and port paramater on the construtor. The hosts are tried one at at time in order until
      * one of then succeeds.
      * @param {array} connectOptions.ports - If present the set of ports matching the hosts. If hosts contains URIs, this property
      * is not used.
      * @param {boolean} connectOptions.reconnect - Sets whether the client will automatically attempt to reconnect
      * to the server if the connection is lost.
      *<ul>
      *<li>If set to false, the client will not attempt to automatically reconnect to the server in the event that the
      * connection is lost.</li>
      *<li>If set to true, in the event that the connection is lost, the client will attempt to reconnect to the server.
      * It will initially wait 1 second before it attempts to reconnect, for every failed reconnect attempt, the delay
      * will double until it is at 2 minutes at which point the delay will stay at 2 minutes.</li>
      *</ul>
      * @param {number} connectOptions.mqttVersion - The version of MQTT to use to connect to the MQTT Broker.
      *<ul>
      *<li>3 - MQTT V3.1</li>
      *<li>4 - MQTT V3.1.1</li>
      *</ul>
      * @param {boolean} connectOptions.mqttVersionExplicit - If set to true, will force the connection to use the
      * selected MQTT Version or will fail to connect.
      * @param {array} connectOptions.uris - If present, should contain a list of fully qualified WebSocket uris
      * (e.g. ws://iot.eclipse.org:80/ws), that are tried in order in place of the host and port parameter of the construtor.
      * The uris are tried one at a time in order until one of them succeeds. Do not use this in conjunction with hosts as
      * the hosts array will be converted to uris and will overwrite this property.
      * @throws {InvalidState} If the client is not in disconnected state. The client must have received connectionLost
      * or disconnected before calling connect for a second or subsequent time.
      */

      this.connect = function (connectOptions) {
        connectOptions = connectOptions || {};
        validate(connectOptions, {
          timeout: "number",
          userName: "string",
          password: "string",
          willMessage: "object",
          keepAliveInterval: "number",
          cleanSession: "boolean",
          useSSL: "boolean",
          invocationContext: "object",
          onSuccess: "function",
          onFailure: "function",
          hosts: "object",
          ports: "object",
          reconnect: "boolean",
          mqttVersion: "number",
          mqttVersionExplicit: "boolean",
          uris: "object"
        }); // If no keep alive interval is set, assume 60 seconds.

        if (connectOptions.keepAliveInterval === undefined) connectOptions.keepAliveInterval = 60;

        if (connectOptions.mqttVersion > 4 || connectOptions.mqttVersion < 3) {
          throw new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.mqttVersion, "connectOptions.mqttVersion"]));
        }

        if (connectOptions.mqttVersion === undefined) {
          connectOptions.mqttVersionExplicit = false;
          connectOptions.mqttVersion = 4;
        } else {
          connectOptions.mqttVersionExplicit = true;
        } //Check that if password is set, so is username


        if (connectOptions.password !== undefined && connectOptions.userName === undefined) throw new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.password, "connectOptions.password"]));

        if (connectOptions.willMessage) {
          if (!(connectOptions.willMessage instanceof Message)) throw new Error(format(ERROR.INVALID_TYPE, [connectOptions.willMessage, "connectOptions.willMessage"])); // The will message must have a payload that can be represented as a string.
          // Cause the willMessage to throw an exception if this is not the case.

          connectOptions.willMessage.stringPayload = null;
          if (typeof connectOptions.willMessage.destinationName === "undefined") throw new Error(format(ERROR.INVALID_TYPE, [typeof connectOptions.willMessage.destinationName, "connectOptions.willMessage.destinationName"]));
        }

        if (typeof connectOptions.cleanSession === "undefined") connectOptions.cleanSession = true;

        if (connectOptions.hosts) {
          if (!(connectOptions.hosts instanceof Array)) throw new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts, "connectOptions.hosts"]));
          if (connectOptions.hosts.length < 1) throw new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts, "connectOptions.hosts"]));
          var usingURIs = false;

          for (var i = 0; i < connectOptions.hosts.length; i++) {
            if (typeof connectOptions.hosts[i] !== "string") throw new Error(format(ERROR.INVALID_TYPE, [typeof connectOptions.hosts[i], "connectOptions.hosts[" + i + "]"]));

            if (/^(wss?):\/\/((\[(.+)\])|([^\/]+?))(:(\d+))?(\/.*)$/.test(connectOptions.hosts[i])) {
              if (i === 0) {
                usingURIs = true;
              } else if (!usingURIs) {
                throw new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts[i], "connectOptions.hosts[" + i + "]"]));
              }
            } else if (usingURIs) {
              throw new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts[i], "connectOptions.hosts[" + i + "]"]));
            }
          }

          if (!usingURIs) {
            if (!connectOptions.ports) throw new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.ports, "connectOptions.ports"]));
            if (!(connectOptions.ports instanceof Array)) throw new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.ports, "connectOptions.ports"]));
            if (connectOptions.hosts.length !== connectOptions.ports.length) throw new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.ports, "connectOptions.ports"]));
            connectOptions.uris = [];

            for (var i = 0; i < connectOptions.hosts.length; i++) {
              if (typeof connectOptions.ports[i] !== "number" || connectOptions.ports[i] < 0) throw new Error(format(ERROR.INVALID_TYPE, [typeof connectOptions.ports[i], "connectOptions.ports[" + i + "]"]));
              var host = connectOptions.hosts[i];
              var port = connectOptions.ports[i];
              var ipv6 = host.indexOf(":") !== -1;
              uri = "ws://" + (ipv6 ? "[" + host + "]" : host) + ":" + port + path;
              connectOptions.uris.push(uri);
            }
          } else {
            connectOptions.uris = connectOptions.hosts;
          }
        }

        client.connect(connectOptions);
      };
      /**
      * Subscribe for messages, request receipt of a copy of messages sent to the destinations described by the filter.
      *
      * @name Paho.Client#subscribe
      * @function
      * @param {string} filter describing the destinations to receive messages from.
      * <br>
      * @param {object} subscribeOptions - used to control the subscription
      *
      * @param {number} subscribeOptions.qos - the maximum qos of any publications sent
      *                                  as a result of making this subscription.
      * @param {object} subscribeOptions.invocationContext - passed to the onSuccess callback
      *                                  or onFailure callback.
      * @param {function} subscribeOptions.onSuccess - called when the subscribe acknowledgement
      *                                  has been received from the server.
      *                                  A single response object parameter is passed to the onSuccess callback containing the following fields:
      *                                  <ol>
      *                                  <li>invocationContext if set in the subscribeOptions.
      *                                  </ol>
      * @param {function} subscribeOptions.onFailure - called when the subscribe request has failed or timed out.
      *                                  A single response object parameter is passed to the onFailure callback containing the following fields:
      *                                  <ol>
      *                                  <li>invocationContext - if set in the subscribeOptions.
      *                                  <li>errorCode - a number indicating the nature of the error.
      *                                  <li>errorMessage - text describing the error.
      *                                  </ol>
      * @param {number} subscribeOptions.timeout - which, if present, determines the number of
      *                                  seconds after which the onFailure calback is called.
      *                                  The presence of a timeout does not prevent the onSuccess
      *                                  callback from being called when the subscribe completes.
      * @throws {InvalidState} if the client is not in connected state.
      */


      this.subscribe = function (filter, subscribeOptions) {
        if (typeof filter !== "string" && filter.constructor !== Array) throw new Error("Invalid argument:" + filter);
        subscribeOptions = subscribeOptions || {};
        validate(subscribeOptions, {
          qos: "number",
          invocationContext: "object",
          onSuccess: "function",
          onFailure: "function",
          timeout: "number"
        });
        if (subscribeOptions.timeout && !subscribeOptions.onFailure) throw new Error("subscribeOptions.timeout specified with no onFailure callback.");
        if (typeof subscribeOptions.qos !== "undefined" && !(subscribeOptions.qos === 0 || subscribeOptions.qos === 1 || subscribeOptions.qos === 2)) throw new Error(format(ERROR.INVALID_ARGUMENT, [subscribeOptions.qos, "subscribeOptions.qos"]));
        client.subscribe(filter, subscribeOptions);
      };
      /**
       * Unsubscribe for messages, stop receiving messages sent to destinations described by the filter.
       *
       * @name Paho.Client#unsubscribe
       * @function
       * @param {string} filter - describing the destinations to receive messages from.
       * @param {object} unsubscribeOptions - used to control the subscription
       * @param {object} unsubscribeOptions.invocationContext - passed to the onSuccess callback
      									  or onFailure callback.
       * @param {function} unsubscribeOptions.onSuccess - called when the unsubscribe acknowledgement has been received from the server.
       *                                    A single response object parameter is passed to the
       *                                    onSuccess callback containing the following fields:
       *                                    <ol>
       *                                    <li>invocationContext - if set in the unsubscribeOptions.
       *                                    </ol>
       * @param {function} unsubscribeOptions.onFailure called when the unsubscribe request has failed or timed out.
       *                                    A single response object parameter is passed to the onFailure callback containing the following fields:
       *                                    <ol>
       *                                    <li>invocationContext - if set in the unsubscribeOptions.
       *                                    <li>errorCode - a number indicating the nature of the error.
       *                                    <li>errorMessage - text describing the error.
       *                                    </ol>
       * @param {number} unsubscribeOptions.timeout - which, if present, determines the number of seconds
       *                                    after which the onFailure callback is called. The presence of
       *                                    a timeout does not prevent the onSuccess callback from being
       *                                    called when the unsubscribe completes
       * @throws {InvalidState} if the client is not in connected state.
       */


      this.unsubscribe = function (filter, unsubscribeOptions) {
        if (typeof filter !== "string" && filter.constructor !== Array) throw new Error("Invalid argument:" + filter);
        unsubscribeOptions = unsubscribeOptions || {};
        validate(unsubscribeOptions, {
          invocationContext: "object",
          onSuccess: "function",
          onFailure: "function",
          timeout: "number"
        });
        if (unsubscribeOptions.timeout && !unsubscribeOptions.onFailure) throw new Error("unsubscribeOptions.timeout specified with no onFailure callback.");
        client.unsubscribe(filter, unsubscribeOptions);
      };
      /**
      * Send a message to the consumers of the destination in the Message.
      *
      * @name Paho.Client#send
      * @function
      * @param {string|Paho.Message} topic - <b>mandatory</b> The name of the destination to which the message is to be sent.
      * 					   - If it is the only parameter, used as Paho.Message object.
      * @param {String|ArrayBuffer} payload - The message data to be sent.
      * @param {number} qos The Quality of Service used to deliver the message.
      * 		<dl>
      * 			<dt>0 Best effort (default).
      *     			<dt>1 At least once.
      *     			<dt>2 Exactly once.
      * 		</dl>
      * @param {Boolean} retained If true, the message is to be retained by the server and delivered
      *                     to both current and future subscriptions.
      *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.
      *                     A received message has the retained boolean set to true if the message was published
      *                     with the retained boolean set to true
      *                     and the subscrption was made after the message has been published.
      * @throws {InvalidState} if the client is not connected.
      */


      this.send = function (topic, payload, qos, retained) {
        var message;

        if (arguments.length === 0) {
          throw new Error("Invalid argument." + "length");
        } else if (arguments.length == 1) {
          if (!(topic instanceof Message) && typeof topic !== "string") throw new Error("Invalid argument:" + typeof topic);
          message = topic;
          if (typeof message.destinationName === "undefined") throw new Error(format(ERROR.INVALID_ARGUMENT, [message.destinationName, "Message.destinationName"]));
          client.send(message);
        } else {
          //parameter checking in Message object
          message = new Message(payload);
          message.destinationName = topic;
          if (arguments.length >= 3) message.qos = qos;
          if (arguments.length >= 4) message.retained = retained;
          client.send(message);
        }
      };
      /**
      * Publish a message to the consumers of the destination in the Message.
      * Synonym for Paho.Mqtt.Client#send
      *
      * @name Paho.Client#publish
      * @function
      * @param {string|Paho.Message} topic - <b>mandatory</b> The name of the topic to which the message is to be published.
      * 					   - If it is the only parameter, used as Paho.Message object.
      * @param {String|ArrayBuffer} payload - The message data to be published.
      * @param {number} qos The Quality of Service used to deliver the message.
      * 		<dl>
      * 			<dt>0 Best effort (default).
      *     			<dt>1 At least once.
      *     			<dt>2 Exactly once.
      * 		</dl>
      * @param {Boolean} retained If true, the message is to be retained by the server and delivered
      *                     to both current and future subscriptions.
      *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.
      *                     A received message has the retained boolean set to true if the message was published
      *                     with the retained boolean set to true
      *                     and the subscrption was made after the message has been published.
      * @throws {InvalidState} if the client is not connected.
      */


      this.publish = function (topic, payload, qos, retained) {
        var message;

        if (arguments.length === 0) {
          throw new Error("Invalid argument." + "length");
        } else if (arguments.length == 1) {
          if (!(topic instanceof Message) && typeof topic !== "string") throw new Error("Invalid argument:" + typeof topic);
          message = topic;
          if (typeof message.destinationName === "undefined") throw new Error(format(ERROR.INVALID_ARGUMENT, [message.destinationName, "Message.destinationName"]));
          client.send(message);
        } else {
          //parameter checking in Message object
          message = new Message(payload);
          message.destinationName = topic;
          if (arguments.length >= 3) message.qos = qos;
          if (arguments.length >= 4) message.retained = retained;
          client.send(message);
        }
      };
      /**
      * Normal disconnect of this Messaging client from its server.
      *
      * @name Paho.Client#disconnect
      * @function
      * @throws {InvalidState} if the client is already disconnected.
      */


      this.disconnect = function () {
        client.disconnect();
      };
      /**
      * Get the contents of the trace log.
      *
      * @name Paho.Client#getTraceLog
      * @function
      * @return {Object[]} tracebuffer containing the time ordered trace records.
      */


      this.getTraceLog = function () {
        return client.getTraceLog();
      };
      /**
      * Start tracing.
      *
      * @name Paho.Client#startTrace
      * @function
      */


      this.startTrace = function () {
        client.startTrace();
      };
      /**
      * Stop tracing.
      *
      * @name Paho.Client#stopTrace
      * @function
      */


      this.stopTrace = function () {
        client.stopTrace();
      };

      this.isConnected = function () {
        return client.connected;
      };
    };
    /**
    * An application message, sent or received.
    * <p>
    * All attributes may be null, which implies the default values.
    *
    * @name Paho.Message
    * @constructor
    * @param {String|ArrayBuffer} payload The message data to be sent.
    * <p>
    * @property {string} payloadString <i>read only</i> The payload as a string if the payload consists of valid UTF-8 characters.
    * @property {ArrayBuffer} payloadBytes <i>read only</i> The payload as an ArrayBuffer.
    * <p>
    * @property {string} destinationName <b>mandatory</b> The name of the destination to which the message is to be sent
    *                    (for messages about to be sent) or the name of the destination from which the message has been received.
    *                    (for messages received by the onMessage function).
    * <p>
    * @property {number} qos The Quality of Service used to deliver the message.
    * <dl>
    *     <dt>0 Best effort (default).
    *     <dt>1 At least once.
    *     <dt>2 Exactly once.
    * </dl>
    * <p>
    * @property {Boolean} retained If true, the message is to be retained by the server and delivered
    *                     to both current and future subscriptions.
    *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.
    *                     A received message has the retained boolean set to true if the message was published
    *                     with the retained boolean set to true
    *                     and the subscrption was made after the message has been published.
    * <p>
    * @property {Boolean} duplicate <i>read only</i> If true, this message might be a duplicate of one which has already been received.
    *                     This is only set on messages received from the server.
    *
    */


    var Message = function Message(newPayload) {
      var payload;

      if (typeof newPayload === "string" || newPayload instanceof ArrayBuffer || ArrayBuffer.isView(newPayload) && !(newPayload instanceof DataView)) {
        payload = newPayload;
      } else {
        throw format(ERROR.INVALID_ARGUMENT, [newPayload, "newPayload"]);
      }

      var destinationName;
      var qos = 0;
      var retained = false;
      var duplicate = false;
      Object.defineProperties(this, {
        "payloadString": {
          enumerable: true,
          get: function get() {
            if (typeof payload === "string") return payload;else return parseUTF8(payload, 0, payload.length);
          }
        },
        "payloadBytes": {
          enumerable: true,
          get: function get() {
            if (typeof payload === "string") {
              var buffer = new ArrayBuffer(UTF8Length(payload));
              var byteStream = new Uint8Array(buffer);
              stringToUTF8(payload, byteStream, 0);
              return byteStream;
            } else {
              return payload;
            }
          }
        },
        "destinationName": {
          enumerable: true,
          get: function get() {
            return destinationName;
          },
          set: function set(newDestinationName) {
            if (typeof newDestinationName === "string") destinationName = newDestinationName;else throw new Error(format(ERROR.INVALID_ARGUMENT, [newDestinationName, "newDestinationName"]));
          }
        },
        "qos": {
          enumerable: true,
          get: function get() {
            return qos;
          },
          set: function set(newQos) {
            if (newQos === 0 || newQos === 1 || newQos === 2) qos = newQos;else throw new Error("Invalid argument:" + newQos);
          }
        },
        "retained": {
          enumerable: true,
          get: function get() {
            return retained;
          },
          set: function set(newRetained) {
            if (typeof newRetained === "boolean") retained = newRetained;else throw new Error(format(ERROR.INVALID_ARGUMENT, [newRetained, "newRetained"]));
          }
        },
        "topic": {
          enumerable: true,
          get: function get() {
            return destinationName;
          },
          set: function set(newTopic) {
            destinationName = newTopic;
          }
        },
        "duplicate": {
          enumerable: true,
          get: function get() {
            return duplicate;
          },
          set: function set(newDuplicate) {
            duplicate = newDuplicate;
          }
        }
      });
    }; // Module contents.


    return {
      Client: Client,
      Message: Message
    }; // eslint-disable-next-line no-nested-ternary
  }(typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});

  return PahoMQTT;
});

/***/ }),

/***/ 78638:
/*!**********************************************************!*\
  !*** ./node_modules/zen-observable-ts/lib/bundle.esm.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Observable": function() { return /* binding */ Observable; }
/* harmony export */ });
/* harmony import */ var zen_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zen-observable */ 20209);
/* harmony import */ var zen_observable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(zen_observable__WEBPACK_IMPORTED_MODULE_0__);

var Observable = (zen_observable__WEBPACK_IMPORTED_MODULE_0___default());
/* harmony default export */ __webpack_exports__["default"] = (Observable);


/***/ }),

/***/ 20209:
/*!**********************************************!*\
  !*** ./node_modules/zen-observable/index.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/Observable.js */ 37530).Observable;

/***/ }),

/***/ 37530:
/*!*******************************************************!*\
  !*** ./node_modules/zen-observable/lib/Observable.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Observable = void 0;

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
} // === Symbol Support ===


var hasSymbols = function hasSymbols() {
  return typeof Symbol === 'function';
};

var hasSymbol = function hasSymbol(name) {
  return hasSymbols() && Boolean(Symbol[name]);
};

var getSymbol = function getSymbol(name) {
  return hasSymbol(name) ? Symbol[name] : '@@' + name;
};

if (hasSymbols() && !hasSymbol('observable')) {
  Symbol.observable = Symbol('observable');
}

var SymbolIterator = getSymbol('iterator');
var SymbolObservable = getSymbol('observable');
var SymbolSpecies = getSymbol('species'); // === Abstract Operations ===

function getMethod(obj, key) {
  var value = obj[key];
  if (value == null) return undefined;
  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');
  return value;
}

function getSpecies(obj) {
  var ctor = obj.constructor;

  if (ctor !== undefined) {
    ctor = ctor[SymbolSpecies];

    if (ctor === null) {
      ctor = undefined;
    }
  }

  return ctor !== undefined ? ctor : Observable;
}

function isObservable(x) {
  return x instanceof Observable; // SPEC: Brand check
}

function hostReportError(e) {
  if (hostReportError.log) {
    hostReportError.log(e);
  } else {
    setTimeout(function () {
      throw e;
    });
  }
}

function enqueue(fn) {
  Promise.resolve().then(function () {
    try {
      fn();
    } catch (e) {
      hostReportError(e);
    }
  });
}

function cleanupSubscription(subscription) {
  var cleanup = subscription._cleanup;
  if (cleanup === undefined) return;
  subscription._cleanup = undefined;

  if (!cleanup) {
    return;
  }

  try {
    if (typeof cleanup === 'function') {
      cleanup();
    } else {
      var unsubscribe = getMethod(cleanup, 'unsubscribe');

      if (unsubscribe) {
        unsubscribe.call(cleanup);
      }
    }
  } catch (e) {
    hostReportError(e);
  }
}

function closeSubscription(subscription) {
  subscription._observer = undefined;
  subscription._queue = undefined;
  subscription._state = 'closed';
}

function flushSubscription(subscription) {
  var queue = subscription._queue;

  if (!queue) {
    return;
  }

  subscription._queue = undefined;
  subscription._state = 'ready';

  for (var i = 0; i < queue.length; ++i) {
    notifySubscription(subscription, queue[i].type, queue[i].value);
    if (subscription._state === 'closed') break;
  }
}

function notifySubscription(subscription, type, value) {
  subscription._state = 'running';
  var observer = subscription._observer;

  try {
    var m = getMethod(observer, type);

    switch (type) {
      case 'next':
        if (m) m.call(observer, value);
        break;

      case 'error':
        closeSubscription(subscription);
        if (m) m.call(observer, value);else throw value;
        break;

      case 'complete':
        closeSubscription(subscription);
        if (m) m.call(observer);
        break;
    }
  } catch (e) {
    hostReportError(e);
  }

  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';
}

function onNotify(subscription, type, value) {
  if (subscription._state === 'closed') return;

  if (subscription._state === 'buffering') {
    subscription._queue.push({
      type: type,
      value: value
    });

    return;
  }

  if (subscription._state !== 'ready') {
    subscription._state = 'buffering';
    subscription._queue = [{
      type: type,
      value: value
    }];
    enqueue(function () {
      return flushSubscription(subscription);
    });
    return;
  }

  notifySubscription(subscription, type, value);
}

var Subscription = /*#__PURE__*/function () {
  function Subscription(observer, subscriber) {
    _classCallCheck(this, Subscription); // ASSERT: observer is an object
    // ASSERT: subscriber is callable


    this._cleanup = undefined;
    this._observer = observer;
    this._queue = undefined;
    this._state = 'initializing';
    var subscriptionObserver = new SubscriptionObserver(this);

    try {
      this._cleanup = subscriber.call(undefined, subscriptionObserver);
    } catch (e) {
      subscriptionObserver.error(e);
    }

    if (this._state === 'initializing') this._state = 'ready';
  }

  _createClass(Subscription, [{
    key: "unsubscribe",
    value: function unsubscribe() {
      if (this._state !== 'closed') {
        closeSubscription(this);
        cleanupSubscription(this);
      }
    }
  }, {
    key: "closed",
    get: function get() {
      return this._state === 'closed';
    }
  }]);

  return Subscription;
}();

var SubscriptionObserver = /*#__PURE__*/function () {
  function SubscriptionObserver(subscription) {
    _classCallCheck(this, SubscriptionObserver);

    this._subscription = subscription;
  }

  _createClass(SubscriptionObserver, [{
    key: "next",
    value: function next(value) {
      onNotify(this._subscription, 'next', value);
    }
  }, {
    key: "error",
    value: function error(value) {
      onNotify(this._subscription, 'error', value);
    }
  }, {
    key: "complete",
    value: function complete() {
      onNotify(this._subscription, 'complete');
    }
  }, {
    key: "closed",
    get: function get() {
      return this._subscription._state === 'closed';
    }
  }]);

  return SubscriptionObserver;
}();

var Observable = /*#__PURE__*/function () {
  function Observable(subscriber) {
    _classCallCheck(this, Observable);

    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');
    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');
    this._subscriber = subscriber;
  }

  _createClass(Observable, [{
    key: "subscribe",
    value: function subscribe(observer) {
      if (typeof observer !== 'object' || observer === null) {
        observer = {
          next: observer,
          error: arguments[1],
          complete: arguments[2]
        };
      }

      return new Subscription(observer, this._subscriber);
    }
  }, {
    key: "forEach",
    value: function forEach(fn) {
      var _this = this;

      return new Promise(function (resolve, reject) {
        if (typeof fn !== 'function') {
          reject(new TypeError(fn + ' is not a function'));
          return;
        }

        function done() {
          subscription.unsubscribe();
          resolve();
        }

        var subscription = _this.subscribe({
          next: function next(value) {
            try {
              fn(value, done);
            } catch (e) {
              reject(e);
              subscription.unsubscribe();
            }
          },
          error: reject,
          complete: resolve
        });
      });
    }
  }, {
    key: "map",
    value: function map(fn) {
      var _this2 = this;

      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');
      var C = getSpecies(this);
      return new C(function (observer) {
        return _this2.subscribe({
          next: function next(value) {
            try {
              value = fn(value);
            } catch (e) {
              return observer.error(e);
            }

            observer.next(value);
          },
          error: function error(e) {
            observer.error(e);
          },
          complete: function complete() {
            observer.complete();
          }
        });
      });
    }
  }, {
    key: "filter",
    value: function filter(fn) {
      var _this3 = this;

      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');
      var C = getSpecies(this);
      return new C(function (observer) {
        return _this3.subscribe({
          next: function next(value) {
            try {
              if (!fn(value)) return;
            } catch (e) {
              return observer.error(e);
            }

            observer.next(value);
          },
          error: function error(e) {
            observer.error(e);
          },
          complete: function complete() {
            observer.complete();
          }
        });
      });
    }
  }, {
    key: "reduce",
    value: function reduce(fn) {
      var _this4 = this;

      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');
      var C = getSpecies(this);
      var hasSeed = arguments.length > 1;
      var hasValue = false;
      var seed = arguments[1];
      var acc = seed;
      return new C(function (observer) {
        return _this4.subscribe({
          next: function next(value) {
            var first = !hasValue;
            hasValue = true;

            if (!first || hasSeed) {
              try {
                acc = fn(acc, value);
              } catch (e) {
                return observer.error(e);
              }
            } else {
              acc = value;
            }
          },
          error: function error(e) {
            observer.error(e);
          },
          complete: function complete() {
            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));
            observer.next(acc);
            observer.complete();
          }
        });
      });
    }
  }, {
    key: "concat",
    value: function concat() {
      var _this5 = this;

      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {
        sources[_key] = arguments[_key];
      }

      var C = getSpecies(this);
      return new C(function (observer) {
        var subscription;
        var index = 0;

        function startNext(next) {
          subscription = next.subscribe({
            next: function next(v) {
              observer.next(v);
            },
            error: function error(e) {
              observer.error(e);
            },
            complete: function complete() {
              if (index === sources.length) {
                subscription = undefined;
                observer.complete();
              } else {
                startNext(C.from(sources[index++]));
              }
            }
          });
        }

        startNext(_this5);
        return function () {
          if (subscription) {
            subscription.unsubscribe();
            subscription = undefined;
          }
        };
      });
    }
  }, {
    key: "flatMap",
    value: function flatMap(fn) {
      var _this6 = this;

      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');
      var C = getSpecies(this);
      return new C(function (observer) {
        var subscriptions = [];

        var outer = _this6.subscribe({
          next: function next(value) {
            if (fn) {
              try {
                value = fn(value);
              } catch (e) {
                return observer.error(e);
              }
            }

            var inner = C.from(value).subscribe({
              next: function next(value) {
                observer.next(value);
              },
              error: function error(e) {
                observer.error(e);
              },
              complete: function complete() {
                var i = subscriptions.indexOf(inner);
                if (i >= 0) subscriptions.splice(i, 1);
                completeIfDone();
              }
            });
            subscriptions.push(inner);
          },
          error: function error(e) {
            observer.error(e);
          },
          complete: function complete() {
            completeIfDone();
          }
        });

        function completeIfDone() {
          if (outer.closed && subscriptions.length === 0) observer.complete();
        }

        return function () {
          subscriptions.forEach(function (s) {
            return s.unsubscribe();
          });
          outer.unsubscribe();
        };
      });
    }
  }, {
    key: SymbolObservable,
    value: function value() {
      return this;
    }
  }], [{
    key: "from",
    value: function from(x) {
      var C = typeof this === 'function' ? this : Observable;
      if (x == null) throw new TypeError(x + ' is not an object');
      var method = getMethod(x, SymbolObservable);

      if (method) {
        var observable = method.call(x);
        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');
        if (isObservable(observable) && observable.constructor === C) return observable;
        return new C(function (observer) {
          return observable.subscribe(observer);
        });
      }

      if (hasSymbol('iterator')) {
        method = getMethod(x, SymbolIterator);

        if (method) {
          return new C(function (observer) {
            enqueue(function () {
              if (observer.closed) return;
              var _iteratorNormalCompletion = true;
              var _didIteratorError = false;
              var _iteratorError = undefined;

              try {
                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var _item = _step.value;
                  observer.next(_item);
                  if (observer.closed) return;
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }

              observer.complete();
            });
          });
        }
      }

      if (Array.isArray(x)) {
        return new C(function (observer) {
          enqueue(function () {
            if (observer.closed) return;

            for (var i = 0; i < x.length; ++i) {
              observer.next(x[i]);
              if (observer.closed) return;
            }

            observer.complete();
          });
        });
      }

      throw new TypeError(x + ' is not observable');
    }
  }, {
    key: "of",
    value: function of() {
      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        items[_key2] = arguments[_key2];
      }

      var C = typeof this === 'function' ? this : Observable;
      return new C(function (observer) {
        enqueue(function () {
          if (observer.closed) return;

          for (var i = 0; i < items.length; ++i) {
            observer.next(items[i]);
            if (observer.closed) return;
          }

          observer.complete();
        });
      });
    }
  }, {
    key: SymbolSpecies,
    get: function get() {
      return this;
    }
  }]);

  return Observable;
}();

exports.Observable = Observable;

if (hasSymbols()) {
  Object.defineProperty(Observable, Symbol('extensions'), {
    value: {
      symbol: SymbolObservable,
      hostReportError: hostReportError
    },
    configurable: true
  });
}

/***/ }),

/***/ 57778:
/*!**************************************!*\
  !*** ./src/app/shared/api.config.ts ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ApiConfig": function() { return /* binding */ ApiConfig; }
/* harmony export */ });
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../environments/environment */ 92340);

var ApiConfig = /** @class */ (function () {
    function ApiConfig() {
    }
    ApiConfig.apiName = _environments_environment__WEBPACK_IMPORTED_MODULE_0__.environment.endpointName;
    ApiConfig.paths = {
        pathGroups: '/group',
        pathGroup: '/group/',
        pathThings: '/thing',
        pathSubscribeOffline: '/subscribe/offline',
        pathAttribute: '/attribute',
        pathThing: '/thing/',
        pathTypes: '/type',
        pathType: '/type/'
    };
    ApiConfig.params = {
        response: true
    };
    return ApiConfig;
}());



/***/ }),

/***/ 93512:
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-crypto/sha256-js/node_modules/tslib/tslib.es6.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 60451:
/*!*****************************************************!*\
  !*** ./node_modules/graphql/error/GraphQLError.mjs ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GraphQLError": function() { return /* binding */ GraphQLError; },
/* harmony export */   "printError": function() { return /* binding */ printError; }
/* harmony export */ });
/* harmony import */ var _jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/isObjectLike.mjs */ 25139);
/* harmony import */ var _polyfills_symbols_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../polyfills/symbols.mjs */ 42963);
/* harmony import */ var _language_location_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/location.mjs */ 68724);
/* harmony import */ var _language_printLocation_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../language/printLocation.mjs */ 62168);
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}





/**
 * A GraphQLError describes an Error found during the parse, validate, or
 * execute phases of performing a GraphQL operation. In addition to a message
 * and stack trace, it also includes information about the locations in a
 * GraphQL document and/or execution result that correspond to the Error.
 */

var GraphQLError = /*#__PURE__*/function (_Error) {
  _inherits(GraphQLError, _Error);

  var _super = _createSuper(GraphQLError);
  /**
   * An array of { line, column } locations within the source GraphQL document
   * which correspond to this error.
   *
   * Errors during validation often contain multiple locations, for example to
   * point out two things with the same name. Errors during execution include a
   * single location, the field which produced the error.
   *
   * Enumerable, and appears in the result of JSON.stringify().
   */

  /**
   * An array describing the JSON-path into the execution response which
   * corresponds to this error. Only included for errors during execution.
   *
   * Enumerable, and appears in the result of JSON.stringify().
   */

  /**
   * An array of GraphQL AST Nodes corresponding to this error.
   */

  /**
   * The source GraphQL document for the first location of this error.
   *
   * Note that if this Error represents more than one node, the source may not
   * represent nodes after the first node.
   */

  /**
   * An array of character offsets within the source GraphQL document
   * which correspond to this error.
   */

  /**
   * The original error thrown from a field resolver during execution.
   */

  /**
   * Extension fields to add to the formatted error.
   */


  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {
    var _nodeLocations, _nodeLocations2, _nodeLocations3;

    var _this;

    _classCallCheck(this, GraphQLError);

    _this = _super.call(this, message);
    _this.name = 'GraphQLError';
    _this.originalError = originalError !== null && originalError !== void 0 ? originalError : undefined; // Compute list of blame nodes.

    _this.nodes = undefinedIfEmpty(Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined);
    var nodeLocations = [];

    for (var _i2 = 0, _ref3 = (_this$nodes = _this.nodes) !== null && _this$nodes !== void 0 ? _this$nodes : []; _i2 < _ref3.length; _i2++) {
      var _this$nodes;

      var _ref4 = _ref3[_i2];
      var loc = _ref4.loc;

      if (loc != null) {
        nodeLocations.push(loc);
      }
    }

    nodeLocations = undefinedIfEmpty(nodeLocations); // Compute locations in the source for the given nodes/positions.

    _this.source = source !== null && source !== void 0 ? source : (_nodeLocations = nodeLocations) === null || _nodeLocations === void 0 ? void 0 : _nodeLocations[0].source;
    _this.positions = positions !== null && positions !== void 0 ? positions : (_nodeLocations2 = nodeLocations) === null || _nodeLocations2 === void 0 ? void 0 : _nodeLocations2.map(function (loc) {
      return loc.start;
    });
    _this.locations = positions && source ? positions.map(function (pos) {
      return (0,_language_location_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocation)(source, pos);
    }) : (_nodeLocations3 = nodeLocations) === null || _nodeLocations3 === void 0 ? void 0 : _nodeLocations3.map(function (loc) {
      return (0,_language_location_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocation)(loc.source, loc.start);
    });
    _this.path = path !== null && path !== void 0 ? path : undefined;
    var originalExtensions = originalError === null || originalError === void 0 ? void 0 : originalError.extensions;

    if (extensions == null && (0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_1__.default)(originalExtensions)) {
      _this.extensions = _objectSpread({}, originalExtensions);
    } else {
      _this.extensions = extensions !== null && extensions !== void 0 ? extensions : {};
    } // By being enumerable, JSON.stringify will include bellow properties in the resulting output.
    // This ensures that the simplest possible GraphQL service adheres to the spec.


    Object.defineProperties(_assertThisInitialized(_this), {
      message: {
        enumerable: true
      },
      locations: {
        enumerable: _this.locations != null
      },
      path: {
        enumerable: _this.path != null
      },
      extensions: {
        enumerable: _this.extensions != null && Object.keys(_this.extensions).length > 0
      },
      name: {
        enumerable: false
      },
      nodes: {
        enumerable: false
      },
      source: {
        enumerable: false
      },
      positions: {
        enumerable: false
      },
      originalError: {
        enumerable: false
      }
    }); // Include (non-enumerable) stack trace.

    if (originalError !== null && originalError !== void 0 && originalError.stack) {
      Object.defineProperty(_assertThisInitialized(_this), 'stack', {
        value: originalError.stack,
        writable: true,
        configurable: true
      });
      return _possibleConstructorReturn(_this);
    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')


    if (Error.captureStackTrace) {
      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);
    } else {
      Object.defineProperty(_assertThisInitialized(_this), 'stack', {
        value: Error().stack,
        writable: true,
        configurable: true
      });
    }

    return _this;
  }

  _createClass(GraphQLError, [{
    key: "toString",
    value: function toString() {
      return printError(this);
    } // FIXME: workaround to not break chai comparisons, should be remove in v16
    // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet

  }, {
    key: _polyfills_symbols_mjs__WEBPACK_IMPORTED_MODULE_2__.SYMBOL_TO_STRING_TAG,
    get: function get() {
      return 'Object';
    }
  }]);

  return GraphQLError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

function undefinedIfEmpty(array) {
  return array === undefined || array.length === 0 ? undefined : array;
}
/**
 * Prints a GraphQLError to a string, representing useful location information
 * about the error's position in the source.
 */


function printError(error) {
  var output = error.message;

  if (error.nodes) {
    for (var _i4 = 0, _error$nodes2 = error.nodes; _i4 < _error$nodes2.length; _i4++) {
      var node = _error$nodes2[_i4];

      if (node.loc) {
        output += '\n\n' + (0,_language_printLocation_mjs__WEBPACK_IMPORTED_MODULE_3__.printLocation)(node.loc);
      }
    }
  } else if (error.source && error.locations) {
    for (var _i6 = 0, _error$locations2 = error.locations; _i6 < _error$locations2.length; _i6++) {
      var location = _error$locations2[_i6];
      output += '\n\n' + (0,_language_printLocation_mjs__WEBPACK_IMPORTED_MODULE_3__.printSourceLocation)(error.source, location);
    }
  }

  return output;
}

/***/ }),

/***/ 9017:
/*!****************************************************!*\
  !*** ./node_modules/graphql/error/syntaxError.mjs ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "syntaxError": function() { return /* binding */ syntaxError; }
/* harmony export */ });
/* harmony import */ var _GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GraphQLError.mjs */ 60451);

/**
 * Produces a GraphQLError representing a syntax error, containing useful
 * descriptive information about the syntax error's position in the source.
 */

function syntaxError(source, position, description) {
  return new _GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError("Syntax Error: ".concat(description), undefined, source, [position]);
}

/***/ }),

/***/ 16969:
/*!********************************************************!*\
  !*** ./node_modules/graphql/jsutils/defineInspect.mjs ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ defineInspect; }
/* harmony export */ });
/* harmony import */ var _invariant_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./invariant.mjs */ 74029);
/* harmony import */ var _nodejsCustomInspectSymbol_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nodejsCustomInspectSymbol.mjs */ 85718);


/**
 * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`
 */

function defineInspect(classObject) {
  var fn = classObject.prototype.toJSON;
  typeof fn === 'function' || (0,_invariant_mjs__WEBPACK_IMPORTED_MODULE_0__.default)(0);
  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')

  if (_nodejsCustomInspectSymbol_mjs__WEBPACK_IMPORTED_MODULE_1__.default) {
    classObject.prototype[_nodejsCustomInspectSymbol_mjs__WEBPACK_IMPORTED_MODULE_1__.default] = fn;
  }
}

/***/ }),

/***/ 50069:
/*!****************************************************!*\
  !*** ./node_modules/graphql/jsutils/devAssert.mjs ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ devAssert; }
/* harmony export */ });
function devAssert(condition, message) {
  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')

  if (!booleanCondition) {
    throw new Error(message);
  }
}

/***/ }),

/***/ 24532:
/*!**************************************************!*\
  !*** ./node_modules/graphql/jsutils/inspect.mjs ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ inspect; }
/* harmony export */ });
/* harmony import */ var _nodejsCustomInspectSymbol_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nodejsCustomInspectSymbol.mjs */ 85718);
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}
/* eslint-disable flowtype/no-weak-types */



var MAX_ARRAY_LENGTH = 10;
var MAX_RECURSIVE_DEPTH = 2;
/**
 * Used to print values in error messages.
 */

function inspect(value) {
  return formatValue(value, []);
}

function formatValue(value, seenValues) {
  switch (_typeof(value)) {
    case 'string':
      return JSON.stringify(value);

    case 'function':
      return value.name ? "[function ".concat(value.name, "]") : '[function]';

    case 'object':
      if (value === null) {
        return 'null';
      }

      return formatObjectValue(value, seenValues);

    default:
      return String(value);
  }
}

function formatObjectValue(value, previouslySeenValues) {
  if (previouslySeenValues.indexOf(value) !== -1) {
    return '[Circular]';
  }

  var seenValues = [].concat(previouslySeenValues, [value]);
  var customInspectFn = getCustomFn(value);

  if (customInspectFn !== undefined) {
    var customValue = customInspectFn.call(value); // check for infinite recursion

    if (customValue !== value) {
      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);
    }
  } else if (Array.isArray(value)) {
    return formatArray(value, seenValues);
  }

  return formatObject(value, seenValues);
}

function formatObject(object, seenValues) {
  var keys = Object.keys(object);

  if (keys.length === 0) {
    return '{}';
  }

  if (seenValues.length > MAX_RECURSIVE_DEPTH) {
    return '[' + getObjectTag(object) + ']';
  }

  var properties = keys.map(function (key) {
    var value = formatValue(object[key], seenValues);
    return key + ': ' + value;
  });
  return '{ ' + properties.join(', ') + ' }';
}

function formatArray(array, seenValues) {
  if (array.length === 0) {
    return '[]';
  }

  if (seenValues.length > MAX_RECURSIVE_DEPTH) {
    return '[Array]';
  }

  var len = Math.min(MAX_ARRAY_LENGTH, array.length);
  var remaining = array.length - len;
  var items = [];

  for (var i = 0; i < len; ++i) {
    items.push(formatValue(array[i], seenValues));
  }

  if (remaining === 1) {
    items.push('... 1 more item');
  } else if (remaining > 1) {
    items.push("... ".concat(remaining, " more items"));
  }

  return '[' + items.join(', ') + ']';
}

function getCustomFn(object) {
  var customInspectFn = object[String(_nodejsCustomInspectSymbol_mjs__WEBPACK_IMPORTED_MODULE_0__.default)];

  if (typeof customInspectFn === 'function') {
    return customInspectFn;
  }

  if (typeof object.inspect === 'function') {
    return object.inspect;
  }
}

function getObjectTag(object) {
  var tag = Object.prototype.toString.call(object).replace(/^\[object /, '').replace(/]$/, '');

  if (tag === 'Object' && typeof object.constructor === 'function') {
    var name = object.constructor.name;

    if (typeof name === 'string' && name !== '') {
      return name;
    }
  }

  return tag;
}

/***/ }),

/***/ 14135:
/*!*****************************************************!*\
  !*** ./node_modules/graphql/jsutils/instanceOf.mjs ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _inspect_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inspect.mjs */ 24532);
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}


/**
 * A replacement for instanceof which includes an error warning when multi-realm
 * constructors are detected.
 */
// See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production
// See: https://webpack.js.org/guides/production/

/* harmony default export */ __webpack_exports__["default"] = ( false ? // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')
// eslint-disable-next-line no-shadow
0 : // eslint-disable-next-line no-shadow
function instanceOf(value, constructor) {
  if (value instanceof constructor) {
    return true;
  }

  if (_typeof(value) === 'object' && value !== null) {
    var _value$constructor;

    var className = constructor.prototype[Symbol.toStringTag];
    var valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.
    Symbol.toStringTag in value ? value[Symbol.toStringTag] : (_value$constructor = value.constructor) === null || _value$constructor === void 0 ? void 0 : _value$constructor.name;

    if (className === valueClassName) {
      var stringifiedValue = (0,_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.default)(value);
      throw new Error("Cannot use ".concat(className, " \"").concat(stringifiedValue, "\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results."));
    }
  }

  return false;
});

/***/ }),

/***/ 74029:
/*!****************************************************!*\
  !*** ./node_modules/graphql/jsutils/invariant.mjs ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ invariant; }
/* harmony export */ });
function invariant(condition, message) {
  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')

  if (!booleanCondition) {
    throw new Error(message != null ? message : 'Unexpected invariant triggered.');
  }
}

/***/ }),

/***/ 25139:
/*!*******************************************************!*\
  !*** ./node_modules/graphql/jsutils/isObjectLike.mjs ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ isObjectLike; }
/* harmony export */ });
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}
/**
 * Return true if `value` is object-like. A value is object-like if it's not
 * `null` and has a `typeof` result of "object".
 */


function isObjectLike(value) {
  return _typeof(value) == 'object' && value !== null;
}

/***/ }),

/***/ 85718:
/*!********************************************************************!*\
  !*** ./node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')
var nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;
/* harmony default export */ __webpack_exports__["default"] = (nodejsCustomInspectSymbol);

/***/ }),

/***/ 16840:
/*!***********************************************!*\
  !*** ./node_modules/graphql/language/ast.mjs ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Location": function() { return /* binding */ Location; },
/* harmony export */   "Token": function() { return /* binding */ Token; },
/* harmony export */   "isNode": function() { return /* binding */ isNode; }
/* harmony export */ });
/* harmony import */ var _jsutils_defineInspect_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/defineInspect.mjs */ 16969);

/**
 * Contains a range of UTF-8 character offsets and token references that
 * identify the region of the source from which the AST derived.
 */

var Location = /*#__PURE__*/function () {
  /**
   * The character offset at which this Node begins.
   */

  /**
   * The character offset at which this Node ends.
   */

  /**
   * The Token at which this Node begins.
   */

  /**
   * The Token at which this Node ends.
   */

  /**
   * The Source document the AST represents.
   */
  function Location(startToken, endToken, source) {
    this.start = startToken.start;
    this.end = endToken.end;
    this.startToken = startToken;
    this.endToken = endToken;
    this.source = source;
  }

  var _proto = Location.prototype;

  _proto.toJSON = function toJSON() {
    return {
      start: this.start,
      end: this.end
    };
  };

  return Location;
}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.

(0,_jsutils_defineInspect_mjs__WEBPACK_IMPORTED_MODULE_0__.default)(Location);
/**
 * Represents a range of characters represented by a lexical token
 * within a Source.
 */

var Token = /*#__PURE__*/function () {
  /**
   * The kind of Token.
   */

  /**
   * The character offset at which this Node begins.
   */

  /**
   * The character offset at which this Node ends.
   */

  /**
   * The 1-indexed line number on which this Token appears.
   */

  /**
   * The 1-indexed column number at which this Token begins.
   */

  /**
   * For non-punctuation tokens, represents the interpreted value of the token.
   */

  /**
   * Tokens exist as nodes in a double-linked-list amongst all tokens
   * including ignored tokens. <SOF> is always the first node and <EOF>
   * the last.
   */
  function Token(kind, start, end, line, column, prev, value) {
    this.kind = kind;
    this.start = start;
    this.end = end;
    this.line = line;
    this.column = column;
    this.value = value;
    this.prev = prev;
    this.next = null;
  }

  var _proto2 = Token.prototype;

  _proto2.toJSON = function toJSON() {
    return {
      kind: this.kind,
      value: this.value,
      line: this.line,
      column: this.column
    };
  };

  return Token;
}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.

(0,_jsutils_defineInspect_mjs__WEBPACK_IMPORTED_MODULE_0__.default)(Token);
/**
 * @internal
 */

function isNode(maybeNode) {
  return maybeNode != null && typeof maybeNode.kind === 'string';
}
/**
 * The list of all possible AST node types.
 */

/***/ }),

/***/ 36258:
/*!*******************************************************!*\
  !*** ./node_modules/graphql/language/blockString.mjs ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dedentBlockStringValue": function() { return /* binding */ dedentBlockStringValue; },
/* harmony export */   "getBlockStringIndentation": function() { return /* binding */ getBlockStringIndentation; },
/* harmony export */   "printBlockString": function() { return /* binding */ printBlockString; }
/* harmony export */ });
/**
 * Produces the value of a block string from its parsed raw value, similar to
 * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.
 *
 * This implements the GraphQL spec's BlockStringValue() static algorithm.
 *
 * @internal
 */
function dedentBlockStringValue(rawString) {
  // Expand a block string's raw value into independent lines.
  var lines = rawString.split(/\r\n|[\n\r]/g); // Remove common indentation from all lines but first.

  var commonIndent = getBlockStringIndentation(rawString);

  if (commonIndent !== 0) {
    for (var i = 1; i < lines.length; i++) {
      lines[i] = lines[i].slice(commonIndent);
    }
  } // Remove leading and trailing blank lines.


  var startLine = 0;

  while (startLine < lines.length && isBlank(lines[startLine])) {
    ++startLine;
  }

  var endLine = lines.length;

  while (endLine > startLine && isBlank(lines[endLine - 1])) {
    --endLine;
  } // Return a string of the lines joined with U+000A.


  return lines.slice(startLine, endLine).join('\n');
}

function isBlank(str) {
  for (var i = 0; i < str.length; ++i) {
    if (str[i] !== ' ' && str[i] !== '\t') {
      return false;
    }
  }

  return true;
}
/**
 * @internal
 */


function getBlockStringIndentation(value) {
  var _commonIndent;

  var isFirstLine = true;
  var isEmptyLine = true;
  var indent = 0;
  var commonIndent = null;

  for (var i = 0; i < value.length; ++i) {
    switch (value.charCodeAt(i)) {
      case 13:
        //  \r
        if (value.charCodeAt(i + 1) === 10) {
          ++i; // skip \r\n as one symbol
        }

      // falls through

      case 10:
        //  \n
        isFirstLine = false;
        isEmptyLine = true;
        indent = 0;
        break;

      case 9: //   \t

      case 32:
        //  <space>
        ++indent;
        break;

      default:
        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {
          commonIndent = indent;
        }

        isEmptyLine = false;
    }
  }

  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;
}
/**
 * Print a block string in the indented block form by adding a leading and
 * trailing blank line. However, if a block string starts with whitespace and is
 * a single-line, adding a leading blank line would strip that whitespace.
 *
 * @internal
 */

function printBlockString(value) {
  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var isSingleLine = value.indexOf('\n') === -1;
  var hasLeadingSpace = value[0] === ' ' || value[0] === '\t';
  var hasTrailingQuote = value[value.length - 1] === '"';
  var hasTrailingSlash = value[value.length - 1] === '\\';
  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;
  var result = ''; // Format a multi-line block quote to account for leading space.

  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {
    result += '\n' + indentation;
  }

  result += indentation ? value.replace(/\n/g, '\n' + indentation) : value;

  if (printAsMultipleLines) {
    result += '\n';
  }

  return '"""' + result.replace(/"""/g, '\\"""') + '"""';
}

/***/ }),

/***/ 70406:
/*!*************************************************************!*\
  !*** ./node_modules/graphql/language/directiveLocation.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DirectiveLocation": function() { return /* binding */ DirectiveLocation; }
/* harmony export */ });
/**
 * The set of allowed directive location values.
 */
var DirectiveLocation = Object.freeze({
  // Request Definitions
  QUERY: 'QUERY',
  MUTATION: 'MUTATION',
  SUBSCRIPTION: 'SUBSCRIPTION',
  FIELD: 'FIELD',
  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',
  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',
  INLINE_FRAGMENT: 'INLINE_FRAGMENT',
  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',
  // Type System Definitions
  SCHEMA: 'SCHEMA',
  SCALAR: 'SCALAR',
  OBJECT: 'OBJECT',
  FIELD_DEFINITION: 'FIELD_DEFINITION',
  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',
  INTERFACE: 'INTERFACE',
  UNION: 'UNION',
  ENUM: 'ENUM',
  ENUM_VALUE: 'ENUM_VALUE',
  INPUT_OBJECT: 'INPUT_OBJECT',
  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'
});
/**
 * The enum type representing the directive location values.
 */

/***/ }),

/***/ 38559:
/*!*************************************************!*\
  !*** ./node_modules/graphql/language/kinds.mjs ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Kind": function() { return /* binding */ Kind; }
/* harmony export */ });
/**
 * The set of allowed kind values for AST nodes.
 */
var Kind = Object.freeze({
  // Name
  NAME: 'Name',
  // Document
  DOCUMENT: 'Document',
  OPERATION_DEFINITION: 'OperationDefinition',
  VARIABLE_DEFINITION: 'VariableDefinition',
  SELECTION_SET: 'SelectionSet',
  FIELD: 'Field',
  ARGUMENT: 'Argument',
  // Fragments
  FRAGMENT_SPREAD: 'FragmentSpread',
  INLINE_FRAGMENT: 'InlineFragment',
  FRAGMENT_DEFINITION: 'FragmentDefinition',
  // Values
  VARIABLE: 'Variable',
  INT: 'IntValue',
  FLOAT: 'FloatValue',
  STRING: 'StringValue',
  BOOLEAN: 'BooleanValue',
  NULL: 'NullValue',
  ENUM: 'EnumValue',
  LIST: 'ListValue',
  OBJECT: 'ObjectValue',
  OBJECT_FIELD: 'ObjectField',
  // Directives
  DIRECTIVE: 'Directive',
  // Types
  NAMED_TYPE: 'NamedType',
  LIST_TYPE: 'ListType',
  NON_NULL_TYPE: 'NonNullType',
  // Type System Definitions
  SCHEMA_DEFINITION: 'SchemaDefinition',
  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',
  // Type Definitions
  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',
  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',
  FIELD_DEFINITION: 'FieldDefinition',
  INPUT_VALUE_DEFINITION: 'InputValueDefinition',
  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',
  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',
  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',
  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',
  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',
  // Directive Definitions
  DIRECTIVE_DEFINITION: 'DirectiveDefinition',
  // Type System Extensions
  SCHEMA_EXTENSION: 'SchemaExtension',
  // Type Extensions
  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',
  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',
  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',
  UNION_TYPE_EXTENSION: 'UnionTypeExtension',
  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',
  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'
});
/**
 * The enum type representing the possible kind values of AST nodes.
 */

/***/ }),

/***/ 93352:
/*!*************************************************!*\
  !*** ./node_modules/graphql/language/lexer.mjs ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Lexer": function() { return /* binding */ Lexer; },
/* harmony export */   "isPunctuatorTokenKind": function() { return /* binding */ isPunctuatorTokenKind; }
/* harmony export */ });
/* harmony import */ var _error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/syntaxError.mjs */ 9017);
/* harmony import */ var _ast_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ast.mjs */ 16840);
/* harmony import */ var _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tokenKind.mjs */ 92800);
/* harmony import */ var _blockString_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./blockString.mjs */ 36258);




/**
 * Given a Source object, creates a Lexer for that source.
 * A Lexer is a stateful stream generator in that every time
 * it is advanced, it returns the next token in the Source. Assuming the
 * source lexes, the final Token emitted by the lexer will be of kind
 * EOF, after which the lexer will repeatedly return the same EOF token
 * whenever called.
 */

var Lexer = /*#__PURE__*/function () {
  /**
   * The previously focused non-ignored token.
   */

  /**
   * The currently focused non-ignored token.
   */

  /**
   * The (1-indexed) line containing the current token.
   */

  /**
   * The character offset at which the current line begins.
   */
  function Lexer(source) {
    var startOfFileToken = new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.SOF, 0, 0, 0, 0, null);
    this.source = source;
    this.lastToken = startOfFileToken;
    this.token = startOfFileToken;
    this.line = 1;
    this.lineStart = 0;
  }
  /**
   * Advances the token stream to the next non-ignored token.
   */


  var _proto = Lexer.prototype;

  _proto.advance = function advance() {
    this.lastToken = this.token;
    var token = this.token = this.lookahead();
    return token;
  }
  /**
   * Looks ahead and returns the next non-ignored token, but does not change
   * the state of Lexer.
   */
  ;

  _proto.lookahead = function lookahead() {
    var token = this.token;

    if (token.kind !== _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.EOF) {
      do {
        var _token$next; // Note: next is only mutable during parsing, so we cast to allow this.


        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);
      } while (token.kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.COMMENT);
    }

    return token;
  };

  return Lexer;
}();
/**
 * @internal
 */

function isPunctuatorTokenKind(kind) {
  return kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BANG || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.DOLLAR || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.AMP || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.PAREN_L || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.PAREN_R || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.SPREAD || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.COLON || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.EQUALS || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.AT || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACKET_L || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACKET_R || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACE_L || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.PIPE || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACE_R;
}

function printCharCode(code) {
  return (// NaN/undefined represents access beyond the end of the file.
    isNaN(code) ? _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.EOF : // Trust JSON for ASCII.
    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.
    "\"\\u".concat(('00' + code.toString(16).toUpperCase()).slice(-4), "\"")
  );
}
/**
 * Gets the next token from the source starting at the given position.
 *
 * This skips over whitespace until it finds the next lexable token, then lexes
 * punctuators immediately or calls the appropriate helper function for more
 * complicated tokens.
 */


function readToken(lexer, prev) {
  var source = lexer.source;
  var body = source.body;
  var bodyLength = body.length;
  var pos = prev.end;

  while (pos < bodyLength) {
    var code = body.charCodeAt(pos);
    var _line = lexer.line;

    var _col = 1 + pos - lexer.lineStart; // SourceCharacter


    switch (code) {
      case 0xfeff: // <BOM>

      case 9: //   \t

      case 32: //  <space>

      case 44:
        //  ,
        ++pos;
        continue;

      case 10:
        //  \n
        ++pos;
        ++lexer.line;
        lexer.lineStart = pos;
        continue;

      case 13:
        //  \r
        if (body.charCodeAt(pos + 1) === 10) {
          pos += 2;
        } else {
          ++pos;
        }

        ++lexer.line;
        lexer.lineStart = pos;
        continue;

      case 33:
        //  !
        return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BANG, pos, pos + 1, _line, _col, prev);

      case 35:
        //  #
        return readComment(source, pos, _line, _col, prev);

      case 36:
        //  $
        return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);

      case 38:
        //  &
        return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.AMP, pos, pos + 1, _line, _col, prev);

      case 40:
        //  (
        return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);

      case 41:
        //  )
        return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);

      case 46:
        //  .
        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {
          return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);
        }

        break;

      case 58:
        //  :
        return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.COLON, pos, pos + 1, _line, _col, prev);

      case 61:
        //  =
        return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);

      case 64:
        //  @
        return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.AT, pos, pos + 1, _line, _col, prev);

      case 91:
        //  [
        return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);

      case 93:
        //  ]
        return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);

      case 123:
        // {
        return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);

      case 124:
        // |
        return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.PIPE, pos, pos + 1, _line, _col, prev);

      case 125:
        // }
        return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);

      case 34:
        //  "
        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {
          return readBlockString(source, pos, _line, _col, prev, lexer);
        }

        return readString(source, pos, _line, _col, prev);

      case 45: //  -

      case 48: //  0

      case 49: //  1

      case 50: //  2

      case 51: //  3

      case 52: //  4

      case 53: //  5

      case 54: //  6

      case 55: //  7

      case 56: //  8

      case 57:
        //  9
        return readNumber(source, pos, code, _line, _col, prev);

      case 65: //  A

      case 66: //  B

      case 67: //  C

      case 68: //  D

      case 69: //  E

      case 70: //  F

      case 71: //  G

      case 72: //  H

      case 73: //  I

      case 74: //  J

      case 75: //  K

      case 76: //  L

      case 77: //  M

      case 78: //  N

      case 79: //  O

      case 80: //  P

      case 81: //  Q

      case 82: //  R

      case 83: //  S

      case 84: //  T

      case 85: //  U

      case 86: //  V

      case 87: //  W

      case 88: //  X

      case 89: //  Y

      case 90: //  Z

      case 95: //  _

      case 97: //  a

      case 98: //  b

      case 99: //  c

      case 100: // d

      case 101: // e

      case 102: // f

      case 103: // g

      case 104: // h

      case 105: // i

      case 106: // j

      case 107: // k

      case 108: // l

      case 109: // m

      case 110: // n

      case 111: // o

      case 112: // p

      case 113: // q

      case 114: // r

      case 115: // s

      case 116: // t

      case 117: // u

      case 118: // v

      case 119: // w

      case 120: // x

      case 121: // y

      case 122:
        // z
        return readName(source, pos, _line, _col, prev);
    }

    throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_2__.syntaxError)(source, pos, unexpectedCharacterMessage(code));
  }

  var line = lexer.line;
  var col = 1 + pos - lexer.lineStart;
  return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.EOF, bodyLength, bodyLength, line, col, prev);
}
/**
 * Report a message that an unexpected character was encountered.
 */


function unexpectedCharacterMessage(code) {
  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {
    return "Cannot contain the invalid character ".concat(printCharCode(code), ".");
  }

  if (code === 39) {
    // '
    return 'Unexpected single quote character (\'), did you mean to use a double quote (")?';
  }

  return "Cannot parse the unexpected character ".concat(printCharCode(code), ".");
}
/**
 * Reads a comment token from the source file.
 *
 * #[\u0009\u0020-\uFFFF]*
 */


function readComment(source, start, line, col, prev) {
  var body = source.body;
  var code;
  var position = start;

  do {
    code = body.charCodeAt(++position);
  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator
  code > 0x001f || code === 0x0009));

  return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));
}
/**
 * Reads a number token from the source file, either a float
 * or an int depending on whether a decimal point appears.
 *
 * Int:   -?(0|[1-9][0-9]*)
 * Float: -?(0|[1-9][0-9]*)(\.[0-9]+)?((E|e)(+|-)?[0-9]+)?
 */


function readNumber(source, start, firstCode, line, col, prev) {
  var body = source.body;
  var code = firstCode;
  var position = start;
  var isFloat = false;

  if (code === 45) {
    // -
    code = body.charCodeAt(++position);
  }

  if (code === 48) {
    // 0
    code = body.charCodeAt(++position);

    if (code >= 48 && code <= 57) {
      throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_2__.syntaxError)(source, position, "Invalid number, unexpected digit after 0: ".concat(printCharCode(code), "."));
    }
  } else {
    position = readDigits(source, position, code);
    code = body.charCodeAt(position);
  }

  if (code === 46) {
    // .
    isFloat = true;
    code = body.charCodeAt(++position);
    position = readDigits(source, position, code);
    code = body.charCodeAt(position);
  }

  if (code === 69 || code === 101) {
    // E e
    isFloat = true;
    code = body.charCodeAt(++position);

    if (code === 43 || code === 45) {
      // + -
      code = body.charCodeAt(++position);
    }

    position = readDigits(source, position, code);
    code = body.charCodeAt(position);
  } // Numbers cannot be followed by . or NameStart


  if (code === 46 || isNameStart(code)) {
    throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_2__.syntaxError)(source, position, "Invalid number, expected digit but got: ".concat(printCharCode(code), "."));
  }

  return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(isFloat ? _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.FLOAT : _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.INT, start, position, line, col, prev, body.slice(start, position));
}
/**
 * Returns the new position in the source after reading digits.
 */


function readDigits(source, start, firstCode) {
  var body = source.body;
  var position = start;
  var code = firstCode;

  if (code >= 48 && code <= 57) {
    // 0 - 9
    do {
      code = body.charCodeAt(++position);
    } while (code >= 48 && code <= 57); // 0 - 9


    return position;
  }

  throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_2__.syntaxError)(source, position, "Invalid number, expected digit but got: ".concat(printCharCode(code), "."));
}
/**
 * Reads a string token from the source file.
 *
 * "([^"\\\u000A\u000D]|(\\(u[0-9a-fA-F]{4}|["\\/bfnrt])))*"
 */


function readString(source, start, line, col, prev) {
  var body = source.body;
  var position = start + 1;
  var chunkStart = position;
  var code = 0;
  var value = '';

  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator
  code !== 0x000a && code !== 0x000d) {
    // Closing Quote (")
    if (code === 34) {
      value += body.slice(chunkStart, position);
      return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.STRING, start, position + 1, line, col, prev, value);
    } // SourceCharacter


    if (code < 0x0020 && code !== 0x0009) {
      throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_2__.syntaxError)(source, position, "Invalid character within String: ".concat(printCharCode(code), "."));
    }

    ++position;

    if (code === 92) {
      // \
      value += body.slice(chunkStart, position - 1);
      code = body.charCodeAt(position);

      switch (code) {
        case 34:
          value += '"';
          break;

        case 47:
          value += '/';
          break;

        case 92:
          value += '\\';
          break;

        case 98:
          value += '\b';
          break;

        case 102:
          value += '\f';
          break;

        case 110:
          value += '\n';
          break;

        case 114:
          value += '\r';
          break;

        case 116:
          value += '\t';
          break;

        case 117:
          {
            // uXXXX
            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));

            if (charCode < 0) {
              var invalidSequence = body.slice(position + 1, position + 5);
              throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_2__.syntaxError)(source, position, "Invalid character escape sequence: \\u".concat(invalidSequence, "."));
            }

            value += String.fromCharCode(charCode);
            position += 4;
            break;
          }

        default:
          throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_2__.syntaxError)(source, position, "Invalid character escape sequence: \\".concat(String.fromCharCode(code), "."));
      }

      ++position;
      chunkStart = position;
    }
  }

  throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_2__.syntaxError)(source, position, 'Unterminated string.');
}
/**
 * Reads a block string token from the source file.
 *
 * """("?"?(\\"""|\\(?!=""")|[^"\\]))*"""
 */


function readBlockString(source, start, line, col, prev, lexer) {
  var body = source.body;
  var position = start + 3;
  var chunkStart = position;
  var code = 0;
  var rawValue = '';

  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {
    // Closing Triple-Quote (""")
    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {
      rawValue += body.slice(chunkStart, position);
      return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, (0,_blockString_mjs__WEBPACK_IMPORTED_MODULE_3__.dedentBlockStringValue)(rawValue));
    } // SourceCharacter


    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {
      throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_2__.syntaxError)(source, position, "Invalid character within String: ".concat(printCharCode(code), "."));
    }

    if (code === 10) {
      // new line
      ++position;
      ++lexer.line;
      lexer.lineStart = position;
    } else if (code === 13) {
      // carriage return
      if (body.charCodeAt(position + 1) === 10) {
        position += 2;
      } else {
        ++position;
      }

      ++lexer.line;
      lexer.lineStart = position;
    } else if ( // Escape Triple-Quote (\""")
    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {
      rawValue += body.slice(chunkStart, position) + '"""';
      position += 4;
      chunkStart = position;
    } else {
      ++position;
    }
  }

  throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_2__.syntaxError)(source, position, 'Unterminated string.');
}
/**
 * Converts four hexadecimal chars to the integer that the
 * string represents. For example, uniCharCode('0','0','0','f')
 * will return 15, and uniCharCode('0','0','f','f') returns 255.
 *
 * Returns a negative number on error, if a char was invalid.
 *
 * This is implemented by noting that char2hex() returns -1 on error,
 * which means the result of ORing the char2hex() will also be negative.
 */


function uniCharCode(a, b, c, d) {
  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);
}
/**
 * Converts a hex character to its integer value.
 * '0' becomes 0, '9' becomes 9
 * 'A' becomes 10, 'F' becomes 15
 * 'a' becomes 10, 'f' becomes 15
 *
 * Returns -1 on error.
 */


function char2hex(a) {
  return a >= 48 && a <= 57 ? a - 48 // 0-9
  : a >= 65 && a <= 70 ? a - 55 // A-F
  : a >= 97 && a <= 102 ? a - 87 // a-f
  : -1;
}
/**
 * Reads an alphanumeric + underscore name from the source.
 *
 * [_A-Za-z][_0-9A-Za-z]*
 */


function readName(source, start, line, col, prev) {
  var body = source.body;
  var bodyLength = body.length;
  var position = start + 1;
  var code = 0;

  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _
  code >= 48 && code <= 57 || // 0-9
  code >= 65 && code <= 90 || // A-Z
  code >= 97 && code <= 122) // a-z
  ) {
    ++position;
  }

  return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));
} // _ A-Z a-z


function isNameStart(code) {
  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;
}

/***/ }),

/***/ 68724:
/*!****************************************************!*\
  !*** ./node_modules/graphql/language/location.mjs ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getLocation": function() { return /* binding */ getLocation; }
/* harmony export */ });
/**
 * Represents a location in a Source.
 */

/**
 * Takes a Source and a UTF-8 character offset, and returns the corresponding
 * line and column as a SourceLocation.
 */
function getLocation(source, position) {
  var lineRegexp = /\r\n|[\n\r]/g;
  var line = 1;
  var column = position + 1;
  var match;

  while ((match = lineRegexp.exec(source.body)) && match.index < position) {
    line += 1;
    column = position + 1 - (match.index + match[0].length);
  }

  return {
    line: line,
    column: column
  };
}

/***/ }),

/***/ 59532:
/*!**************************************************!*\
  !*** ./node_modules/graphql/language/parser.mjs ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parse": function() { return /* binding */ parse; },
/* harmony export */   "parseValue": function() { return /* binding */ parseValue; },
/* harmony export */   "parseType": function() { return /* binding */ parseType; },
/* harmony export */   "Parser": function() { return /* binding */ Parser; }
/* harmony export */ });
/* harmony import */ var _error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/syntaxError.mjs */ 9017);
/* harmony import */ var _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kinds.mjs */ 38559);
/* harmony import */ var _ast_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ast.mjs */ 16840);
/* harmony import */ var _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tokenKind.mjs */ 92800);
/* harmony import */ var _source_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./source.mjs */ 35912);
/* harmony import */ var _directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./directiveLocation.mjs */ 70406);
/* harmony import */ var _lexer_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lexer.mjs */ 93352);







/**
 * Configuration options to control parser behavior
 */

/**
 * Given a GraphQL source, parses it into a Document.
 * Throws GraphQLError if a syntax error is encountered.
 */

function parse(source, options) {
  var parser = new Parser(source, options);
  return parser.parseDocument();
}
/**
 * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for
 * that value.
 * Throws GraphQLError if a syntax error is encountered.
 *
 * This is useful within tools that operate upon GraphQL Values directly and
 * in isolation of complete GraphQL documents.
 *
 * Consider providing the results to the utility function: valueFromAST().
 */

function parseValue(source, options) {
  var parser = new Parser(source, options);
  parser.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.SOF);
  var value = parser.parseValueLiteral(false);
  parser.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EOF);
  return value;
}
/**
 * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for
 * that type.
 * Throws GraphQLError if a syntax error is encountered.
 *
 * This is useful within tools that operate upon GraphQL Types directly and
 * in isolation of complete GraphQL documents.
 *
 * Consider providing the results to the utility function: typeFromAST().
 */

function parseType(source, options) {
  var parser = new Parser(source, options);
  parser.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.SOF);
  var type = parser.parseTypeReference();
  parser.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EOF);
  return type;
}
/**
 * This class is exported only to assist people in implementing their own parsers
 * without duplicating too much code and should be used only as last resort for cases
 * such as experimental syntax or if certain features could not be contributed upstream.
 *
 * It is still part of the internal API and is versioned, so any changes to it are never
 * considered breaking changes. If you still need to support multiple versions of the
 * library, please use the `versionInfo` variable for version detection.
 *
 * @internal
 */

var Parser = /*#__PURE__*/function () {
  function Parser(source, options) {
    var sourceObj = (0,_source_mjs__WEBPACK_IMPORTED_MODULE_1__.isSource)(source) ? source : new _source_mjs__WEBPACK_IMPORTED_MODULE_1__.Source(source);
    this._lexer = new _lexer_mjs__WEBPACK_IMPORTED_MODULE_2__.Lexer(sourceObj);
    this._options = options;
  }
  /**
   * Converts a name lex token into a name parse node.
   */


  var _proto = Parser.prototype;

  _proto.parseName = function parseName() {
    var token = this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME);
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.NAME,
      value: token.value,
      loc: this.loc(token)
    };
  } // Implements the parsing rules in the Document section.

  /**
   * Document : Definition+
   */
  ;

  _proto.parseDocument = function parseDocument() {
    var start = this._lexer.token;
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.DOCUMENT,
      definitions: this.many(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.SOF, this.parseDefinition, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EOF),
      loc: this.loc(start)
    };
  }
  /**
   * Definition :
   *   - ExecutableDefinition
   *   - TypeSystemDefinition
   *   - TypeSystemExtension
   *
   * ExecutableDefinition :
   *   - OperationDefinition
   *   - FragmentDefinition
   */
  ;

  _proto.parseDefinition = function parseDefinition() {
    if (this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME)) {
      switch (this._lexer.token.value) {
        case 'query':
        case 'mutation':
        case 'subscription':
          return this.parseOperationDefinition();

        case 'fragment':
          return this.parseFragmentDefinition();

        case 'schema':
        case 'scalar':
        case 'type':
        case 'interface':
        case 'union':
        case 'enum':
        case 'input':
        case 'directive':
          return this.parseTypeSystemDefinition();

        case 'extend':
          return this.parseTypeSystemExtension();
      }
    } else if (this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L)) {
      return this.parseOperationDefinition();
    } else if (this.peekDescription()) {
      return this.parseTypeSystemDefinition();
    }

    throw this.unexpected();
  } // Implements the parsing rules in the Operations section.

  /**
   * OperationDefinition :
   *  - SelectionSet
   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet
   */
  ;

  _proto.parseOperationDefinition = function parseOperationDefinition() {
    var start = this._lexer.token;

    if (this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L)) {
      return {
        kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OPERATION_DEFINITION,
        operation: 'query',
        name: undefined,
        variableDefinitions: [],
        directives: [],
        selectionSet: this.parseSelectionSet(),
        loc: this.loc(start)
      };
    }

    var operation = this.parseOperationType();
    var name;

    if (this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME)) {
      name = this.parseName();
    }

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OPERATION_DEFINITION,
      operation: operation,
      name: name,
      variableDefinitions: this.parseVariableDefinitions(),
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet(),
      loc: this.loc(start)
    };
  }
  /**
   * OperationType : one of query mutation subscription
   */
  ;

  _proto.parseOperationType = function parseOperationType() {
    var operationToken = this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME);

    switch (operationToken.value) {
      case 'query':
        return 'query';

      case 'mutation':
        return 'mutation';

      case 'subscription':
        return 'subscription';
    }

    throw this.unexpected(operationToken);
  }
  /**
   * VariableDefinitions : ( VariableDefinition+ )
   */
  ;

  _proto.parseVariableDefinitions = function parseVariableDefinitions() {
    return this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PAREN_L, this.parseVariableDefinition, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PAREN_R);
  }
  /**
   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?
   */
  ;

  _proto.parseVariableDefinition = function parseVariableDefinition() {
    var start = this._lexer.token;
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.VARIABLE_DEFINITION,
      variable: this.parseVariable(),
      type: (this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON), this.parseTypeReference()),
      defaultValue: this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,
      directives: this.parseDirectives(true),
      loc: this.loc(start)
    };
  }
  /**
   * Variable : $ Name
   */
  ;

  _proto.parseVariable = function parseVariable() {
    var start = this._lexer.token;
    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.DOLLAR);
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.VARIABLE,
      name: this.parseName(),
      loc: this.loc(start)
    };
  }
  /**
   * SelectionSet : { Selection+ }
   */
  ;

  _proto.parseSelectionSet = function parseSelectionSet() {
    var start = this._lexer.token;
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.SELECTION_SET,
      selections: this.many(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, this.parseSelection, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R),
      loc: this.loc(start)
    };
  }
  /**
   * Selection :
   *   - Field
   *   - FragmentSpread
   *   - InlineFragment
   */
  ;

  _proto.parseSelection = function parseSelection() {
    return this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.SPREAD) ? this.parseFragment() : this.parseField();
  }
  /**
   * Field : Alias? Name Arguments? Directives? SelectionSet?
   *
   * Alias : Name :
   */
  ;

  _proto.parseField = function parseField() {
    var start = this._lexer.token;
    var nameOrAlias = this.parseName();
    var alias;
    var name;

    if (this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON)) {
      alias = nameOrAlias;
      name = this.parseName();
    } else {
      name = nameOrAlias;
    }

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.FIELD,
      alias: alias,
      name: name,
      arguments: this.parseArguments(false),
      directives: this.parseDirectives(false),
      selectionSet: this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,
      loc: this.loc(start)
    };
  }
  /**
   * Arguments[Const] : ( Argument[?Const]+ )
   */
  ;

  _proto.parseArguments = function parseArguments(isConst) {
    var item = isConst ? this.parseConstArgument : this.parseArgument;
    return this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PAREN_L, item, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PAREN_R);
  }
  /**
   * Argument[Const] : Name : Value[?Const]
   */
  ;

  _proto.parseArgument = function parseArgument() {
    var start = this._lexer.token;
    var name = this.parseName();
    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON);
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.ARGUMENT,
      name: name,
      value: this.parseValueLiteral(false),
      loc: this.loc(start)
    };
  };

  _proto.parseConstArgument = function parseConstArgument() {
    var start = this._lexer.token;
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.ARGUMENT,
      name: this.parseName(),
      value: (this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON), this.parseValueLiteral(true)),
      loc: this.loc(start)
    };
  } // Implements the parsing rules in the Fragments section.

  /**
   * Corresponds to both FragmentSpread and InlineFragment in the spec.
   *
   * FragmentSpread : ... FragmentName Directives?
   *
   * InlineFragment : ... TypeCondition? Directives? SelectionSet
   */
  ;

  _proto.parseFragment = function parseFragment() {
    var start = this._lexer.token;
    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.SPREAD);
    var hasTypeCondition = this.expectOptionalKeyword('on');

    if (!hasTypeCondition && this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME)) {
      return {
        kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.FRAGMENT_SPREAD,
        name: this.parseFragmentName(),
        directives: this.parseDirectives(false),
        loc: this.loc(start)
      };
    }

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INLINE_FRAGMENT,
      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet(),
      loc: this.loc(start)
    };
  }
  /**
   * FragmentDefinition :
   *   - fragment FragmentName on TypeCondition Directives? SelectionSet
   *
   * TypeCondition : NamedType
   */
  ;

  _proto.parseFragmentDefinition = function parseFragmentDefinition() {
    var _this$_options;

    var start = this._lexer.token;
    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes
    // the grammar of FragmentDefinition:
    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet

    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {
      return {
        kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.FRAGMENT_DEFINITION,
        name: this.parseFragmentName(),
        variableDefinitions: this.parseVariableDefinitions(),
        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),
        directives: this.parseDirectives(false),
        selectionSet: this.parseSelectionSet(),
        loc: this.loc(start)
      };
    }

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.FRAGMENT_DEFINITION,
      name: this.parseFragmentName(),
      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet(),
      loc: this.loc(start)
    };
  }
  /**
   * FragmentName : Name but not `on`
   */
  ;

  _proto.parseFragmentName = function parseFragmentName() {
    if (this._lexer.token.value === 'on') {
      throw this.unexpected();
    }

    return this.parseName();
  } // Implements the parsing rules in the Values section.

  /**
   * Value[Const] :
   *   - [~Const] Variable
   *   - IntValue
   *   - FloatValue
   *   - StringValue
   *   - BooleanValue
   *   - NullValue
   *   - EnumValue
   *   - ListValue[?Const]
   *   - ObjectValue[?Const]
   *
   * BooleanValue : one of `true` `false`
   *
   * NullValue : `null`
   *
   * EnumValue : Name but not `true`, `false` or `null`
   */
  ;

  _proto.parseValueLiteral = function parseValueLiteral(isConst) {
    var token = this._lexer.token;

    switch (token.kind) {
      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACKET_L:
        return this.parseList(isConst);

      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L:
        return this.parseObject(isConst);

      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.INT:
        this._lexer.advance();

        return {
          kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INT,
          value: token.value,
          loc: this.loc(token)
        };

      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.FLOAT:
        this._lexer.advance();

        return {
          kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.FLOAT,
          value: token.value,
          loc: this.loc(token)
        };

      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.STRING:
      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BLOCK_STRING:
        return this.parseStringLiteral();

      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME:
        this._lexer.advance();

        switch (token.value) {
          case 'true':
            return {
              kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.BOOLEAN,
              value: true,
              loc: this.loc(token)
            };

          case 'false':
            return {
              kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.BOOLEAN,
              value: false,
              loc: this.loc(token)
            };

          case 'null':
            return {
              kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.NULL,
              loc: this.loc(token)
            };

          default:
            return {
              kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.ENUM,
              value: token.value,
              loc: this.loc(token)
            };
        }

      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.DOLLAR:
        if (!isConst) {
          return this.parseVariable();
        }

        break;
    }

    throw this.unexpected();
  };

  _proto.parseStringLiteral = function parseStringLiteral() {
    var token = this._lexer.token;

    this._lexer.advance();

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.STRING,
      value: token.value,
      block: token.kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BLOCK_STRING,
      loc: this.loc(token)
    };
  }
  /**
   * ListValue[Const] :
   *   - [ ]
   *   - [ Value[?Const]+ ]
   */
  ;

  _proto.parseList = function parseList(isConst) {
    var _this = this;

    var start = this._lexer.token;

    var item = function item() {
      return _this.parseValueLiteral(isConst);
    };

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.LIST,
      values: this.any(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACKET_L, item, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACKET_R),
      loc: this.loc(start)
    };
  }
  /**
   * ObjectValue[Const] :
   *   - { }
   *   - { ObjectField[?Const]+ }
   */
  ;

  _proto.parseObject = function parseObject(isConst) {
    var _this2 = this;

    var start = this._lexer.token;

    var item = function item() {
      return _this2.parseObjectField(isConst);
    };

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OBJECT,
      fields: this.any(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, item, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R),
      loc: this.loc(start)
    };
  }
  /**
   * ObjectField[Const] : Name : Value[?Const]
   */
  ;

  _proto.parseObjectField = function parseObjectField(isConst) {
    var start = this._lexer.token;
    var name = this.parseName();
    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON);
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OBJECT_FIELD,
      name: name,
      value: this.parseValueLiteral(isConst),
      loc: this.loc(start)
    };
  } // Implements the parsing rules in the Directives section.

  /**
   * Directives[Const] : Directive[?Const]+
   */
  ;

  _proto.parseDirectives = function parseDirectives(isConst) {
    var directives = [];

    while (this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.AT)) {
      directives.push(this.parseDirective(isConst));
    }

    return directives;
  }
  /**
   * Directive[Const] : @ Name Arguments[?Const]?
   */
  ;

  _proto.parseDirective = function parseDirective(isConst) {
    var start = this._lexer.token;
    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.AT);
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.DIRECTIVE,
      name: this.parseName(),
      arguments: this.parseArguments(isConst),
      loc: this.loc(start)
    };
  } // Implements the parsing rules in the Types section.

  /**
   * Type :
   *   - NamedType
   *   - ListType
   *   - NonNullType
   */
  ;

  _proto.parseTypeReference = function parseTypeReference() {
    var start = this._lexer.token;
    var type;

    if (this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACKET_L)) {
      type = this.parseTypeReference();
      this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACKET_R);
      type = {
        kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.LIST_TYPE,
        type: type,
        loc: this.loc(start)
      };
    } else {
      type = this.parseNamedType();
    }

    if (this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BANG)) {
      return {
        kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.NON_NULL_TYPE,
        type: type,
        loc: this.loc(start)
      };
    }

    return type;
  }
  /**
   * NamedType : Name
   */
  ;

  _proto.parseNamedType = function parseNamedType() {
    var start = this._lexer.token;
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.NAMED_TYPE,
      name: this.parseName(),
      loc: this.loc(start)
    };
  } // Implements the parsing rules in the Type Definition section.

  /**
   * TypeSystemDefinition :
   *   - SchemaDefinition
   *   - TypeDefinition
   *   - DirectiveDefinition
   *
   * TypeDefinition :
   *   - ScalarTypeDefinition
   *   - ObjectTypeDefinition
   *   - InterfaceTypeDefinition
   *   - UnionTypeDefinition
   *   - EnumTypeDefinition
   *   - InputObjectTypeDefinition
   */
  ;

  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {
    // Many definitions begin with a description and require a lookahead.
    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;

    if (keywordToken.kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME) {
      switch (keywordToken.value) {
        case 'schema':
          return this.parseSchemaDefinition();

        case 'scalar':
          return this.parseScalarTypeDefinition();

        case 'type':
          return this.parseObjectTypeDefinition();

        case 'interface':
          return this.parseInterfaceTypeDefinition();

        case 'union':
          return this.parseUnionTypeDefinition();

        case 'enum':
          return this.parseEnumTypeDefinition();

        case 'input':
          return this.parseInputObjectTypeDefinition();

        case 'directive':
          return this.parseDirectiveDefinition();
      }
    }

    throw this.unexpected(keywordToken);
  };

  _proto.peekDescription = function peekDescription() {
    return this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.STRING) || this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BLOCK_STRING);
  }
  /**
   * Description : StringValue
   */
  ;

  _proto.parseDescription = function parseDescription() {
    if (this.peekDescription()) {
      return this.parseStringLiteral();
    }
  }
  /**
   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }
   */
  ;

  _proto.parseSchemaDefinition = function parseSchemaDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('schema');
    var directives = this.parseDirectives(true);
    var operationTypes = this.many(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, this.parseOperationTypeDefinition, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R);
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.SCHEMA_DEFINITION,
      description: description,
      directives: directives,
      operationTypes: operationTypes,
      loc: this.loc(start)
    };
  }
  /**
   * OperationTypeDefinition : OperationType : NamedType
   */
  ;

  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {
    var start = this._lexer.token;
    var operation = this.parseOperationType();
    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON);
    var type = this.parseNamedType();
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OPERATION_TYPE_DEFINITION,
      operation: operation,
      type: type,
      loc: this.loc(start)
    };
  }
  /**
   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?
   */
  ;

  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('scalar');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.SCALAR_TYPE_DEFINITION,
      description: description,
      name: name,
      directives: directives,
      loc: this.loc(start)
    };
  }
  /**
   * ObjectTypeDefinition :
   *   Description?
   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?
   */
  ;

  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('type');
    var name = this.parseName();
    var interfaces = this.parseImplementsInterfaces();
    var directives = this.parseDirectives(true);
    var fields = this.parseFieldsDefinition();
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OBJECT_TYPE_DEFINITION,
      description: description,
      name: name,
      interfaces: interfaces,
      directives: directives,
      fields: fields,
      loc: this.loc(start)
    };
  }
  /**
   * ImplementsInterfaces :
   *   - implements `&`? NamedType
   *   - ImplementsInterfaces & NamedType
   */
  ;

  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {
    var _this$_options2;

    if (!this.expectOptionalKeyword('implements')) {
      return [];
    }

    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {
      var types = []; // Optional leading ampersand

      this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.AMP);

      do {
        types.push(this.parseNamedType());
      } while (this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.AMP) || this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME));

      return types;
    }

    return this.delimitedMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.AMP, this.parseNamedType);
  }
  /**
   * FieldsDefinition : { FieldDefinition+ }
   */
  ;

  _proto.parseFieldsDefinition = function parseFieldsDefinition() {
    var _this$_options3; // Legacy support for the SDL?


    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L) && this._lexer.lookahead().kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R) {
      this._lexer.advance();

      this._lexer.advance();

      return [];
    }

    return this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, this.parseFieldDefinition, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R);
  }
  /**
   * FieldDefinition :
   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?
   */
  ;

  _proto.parseFieldDefinition = function parseFieldDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    var name = this.parseName();
    var args = this.parseArgumentDefs();
    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON);
    var type = this.parseTypeReference();
    var directives = this.parseDirectives(true);
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.FIELD_DEFINITION,
      description: description,
      name: name,
      arguments: args,
      type: type,
      directives: directives,
      loc: this.loc(start)
    };
  }
  /**
   * ArgumentsDefinition : ( InputValueDefinition+ )
   */
  ;

  _proto.parseArgumentDefs = function parseArgumentDefs() {
    return this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PAREN_L, this.parseInputValueDef, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PAREN_R);
  }
  /**
   * InputValueDefinition :
   *   - Description? Name : Type DefaultValue? Directives[Const]?
   */
  ;

  _proto.parseInputValueDef = function parseInputValueDef() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    var name = this.parseName();
    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON);
    var type = this.parseTypeReference();
    var defaultValue;

    if (this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EQUALS)) {
      defaultValue = this.parseValueLiteral(true);
    }

    var directives = this.parseDirectives(true);
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INPUT_VALUE_DEFINITION,
      description: description,
      name: name,
      type: type,
      defaultValue: defaultValue,
      directives: directives,
      loc: this.loc(start)
    };
  }
  /**
   * InterfaceTypeDefinition :
   *   - Description? interface Name Directives[Const]? FieldsDefinition?
   */
  ;

  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('interface');
    var name = this.parseName();
    var interfaces = this.parseImplementsInterfaces();
    var directives = this.parseDirectives(true);
    var fields = this.parseFieldsDefinition();
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INTERFACE_TYPE_DEFINITION,
      description: description,
      name: name,
      interfaces: interfaces,
      directives: directives,
      fields: fields,
      loc: this.loc(start)
    };
  }
  /**
   * UnionTypeDefinition :
   *   - Description? union Name Directives[Const]? UnionMemberTypes?
   */
  ;

  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('union');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var types = this.parseUnionMemberTypes();
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.UNION_TYPE_DEFINITION,
      description: description,
      name: name,
      directives: directives,
      types: types,
      loc: this.loc(start)
    };
  }
  /**
   * UnionMemberTypes :
   *   - = `|`? NamedType
   *   - UnionMemberTypes | NamedType
   */
  ;

  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {
    return this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EQUALS) ? this.delimitedMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PIPE, this.parseNamedType) : [];
  }
  /**
   * EnumTypeDefinition :
   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?
   */
  ;

  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('enum');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var values = this.parseEnumValuesDefinition();
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.ENUM_TYPE_DEFINITION,
      description: description,
      name: name,
      directives: directives,
      values: values,
      loc: this.loc(start)
    };
  }
  /**
   * EnumValuesDefinition : { EnumValueDefinition+ }
   */
  ;

  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {
    return this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, this.parseEnumValueDefinition, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R);
  }
  /**
   * EnumValueDefinition : Description? EnumValue Directives[Const]?
   *
   * EnumValue : Name
   */
  ;

  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.ENUM_VALUE_DEFINITION,
      description: description,
      name: name,
      directives: directives,
      loc: this.loc(start)
    };
  }
  /**
   * InputObjectTypeDefinition :
   *   - Description? input Name Directives[Const]? InputFieldsDefinition?
   */
  ;

  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('input');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var fields = this.parseInputFieldsDefinition();
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INPUT_OBJECT_TYPE_DEFINITION,
      description: description,
      name: name,
      directives: directives,
      fields: fields,
      loc: this.loc(start)
    };
  }
  /**
   * InputFieldsDefinition : { InputValueDefinition+ }
   */
  ;

  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {
    return this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, this.parseInputValueDef, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R);
  }
  /**
   * TypeSystemExtension :
   *   - SchemaExtension
   *   - TypeExtension
   *
   * TypeExtension :
   *   - ScalarTypeExtension
   *   - ObjectTypeExtension
   *   - InterfaceTypeExtension
   *   - UnionTypeExtension
   *   - EnumTypeExtension
   *   - InputObjectTypeDefinition
   */
  ;

  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {
    var keywordToken = this._lexer.lookahead();

    if (keywordToken.kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME) {
      switch (keywordToken.value) {
        case 'schema':
          return this.parseSchemaExtension();

        case 'scalar':
          return this.parseScalarTypeExtension();

        case 'type':
          return this.parseObjectTypeExtension();

        case 'interface':
          return this.parseInterfaceTypeExtension();

        case 'union':
          return this.parseUnionTypeExtension();

        case 'enum':
          return this.parseEnumTypeExtension();

        case 'input':
          return this.parseInputObjectTypeExtension();
      }
    }

    throw this.unexpected(keywordToken);
  }
  /**
   * SchemaExtension :
   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }
   *  - extend schema Directives[Const]
   */
  ;

  _proto.parseSchemaExtension = function parseSchemaExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('schema');
    var directives = this.parseDirectives(true);
    var operationTypes = this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, this.parseOperationTypeDefinition, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R);

    if (directives.length === 0 && operationTypes.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.SCHEMA_EXTENSION,
      directives: directives,
      operationTypes: operationTypes,
      loc: this.loc(start)
    };
  }
  /**
   * ScalarTypeExtension :
   *   - extend scalar Name Directives[Const]
   */
  ;

  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('scalar');
    var name = this.parseName();
    var directives = this.parseDirectives(true);

    if (directives.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.SCALAR_TYPE_EXTENSION,
      name: name,
      directives: directives,
      loc: this.loc(start)
    };
  }
  /**
   * ObjectTypeExtension :
   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
   *  - extend type Name ImplementsInterfaces? Directives[Const]
   *  - extend type Name ImplementsInterfaces
   */
  ;

  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('type');
    var name = this.parseName();
    var interfaces = this.parseImplementsInterfaces();
    var directives = this.parseDirectives(true);
    var fields = this.parseFieldsDefinition();

    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OBJECT_TYPE_EXTENSION,
      name: name,
      interfaces: interfaces,
      directives: directives,
      fields: fields,
      loc: this.loc(start)
    };
  }
  /**
   * InterfaceTypeExtension :
   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
   *  - extend interface Name ImplementsInterfaces? Directives[Const]
   *  - extend interface Name ImplementsInterfaces
   */
  ;

  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('interface');
    var name = this.parseName();
    var interfaces = this.parseImplementsInterfaces();
    var directives = this.parseDirectives(true);
    var fields = this.parseFieldsDefinition();

    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INTERFACE_TYPE_EXTENSION,
      name: name,
      interfaces: interfaces,
      directives: directives,
      fields: fields,
      loc: this.loc(start)
    };
  }
  /**
   * UnionTypeExtension :
   *   - extend union Name Directives[Const]? UnionMemberTypes
   *   - extend union Name Directives[Const]
   */
  ;

  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('union');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var types = this.parseUnionMemberTypes();

    if (directives.length === 0 && types.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.UNION_TYPE_EXTENSION,
      name: name,
      directives: directives,
      types: types,
      loc: this.loc(start)
    };
  }
  /**
   * EnumTypeExtension :
   *   - extend enum Name Directives[Const]? EnumValuesDefinition
   *   - extend enum Name Directives[Const]
   */
  ;

  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('enum');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var values = this.parseEnumValuesDefinition();

    if (directives.length === 0 && values.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.ENUM_TYPE_EXTENSION,
      name: name,
      directives: directives,
      values: values,
      loc: this.loc(start)
    };
  }
  /**
   * InputObjectTypeExtension :
   *   - extend input Name Directives[Const]? InputFieldsDefinition
   *   - extend input Name Directives[Const]
   */
  ;

  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('input');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var fields = this.parseInputFieldsDefinition();

    if (directives.length === 0 && fields.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INPUT_OBJECT_TYPE_EXTENSION,
      name: name,
      directives: directives,
      fields: fields,
      loc: this.loc(start)
    };
  }
  /**
   * DirectiveDefinition :
   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations
   */
  ;

  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('directive');
    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.AT);
    var name = this.parseName();
    var args = this.parseArgumentDefs();
    var repeatable = this.expectOptionalKeyword('repeatable');
    this.expectKeyword('on');
    var locations = this.parseDirectiveLocations();
    return {
      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.DIRECTIVE_DEFINITION,
      description: description,
      name: name,
      arguments: args,
      repeatable: repeatable,
      locations: locations,
      loc: this.loc(start)
    };
  }
  /**
   * DirectiveLocations :
   *   - `|`? DirectiveLocation
   *   - DirectiveLocations | DirectiveLocation
   */
  ;

  _proto.parseDirectiveLocations = function parseDirectiveLocations() {
    return this.delimitedMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PIPE, this.parseDirectiveLocation);
  }
  /*
   * DirectiveLocation :
   *   - ExecutableDirectiveLocation
   *   - TypeSystemDirectiveLocation
   *
   * ExecutableDirectiveLocation : one of
   *   `QUERY`
   *   `MUTATION`
   *   `SUBSCRIPTION`
   *   `FIELD`
   *   `FRAGMENT_DEFINITION`
   *   `FRAGMENT_SPREAD`
   *   `INLINE_FRAGMENT`
   *
   * TypeSystemDirectiveLocation : one of
   *   `SCHEMA`
   *   `SCALAR`
   *   `OBJECT`
   *   `FIELD_DEFINITION`
   *   `ARGUMENT_DEFINITION`
   *   `INTERFACE`
   *   `UNION`
   *   `ENUM`
   *   `ENUM_VALUE`
   *   `INPUT_OBJECT`
   *   `INPUT_FIELD_DEFINITION`
   */
  ;

  _proto.parseDirectiveLocation = function parseDirectiveLocation() {
    var start = this._lexer.token;
    var name = this.parseName();

    if (_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation[name.value] !== undefined) {
      return name;
    }

    throw this.unexpected(start);
  } // Core parsing utility functions

  /**
   * Returns a location object, used to identify the place in the source that created a given parsed object.
   */
  ;

  _proto.loc = function loc(startToken) {
    var _this$_options4;

    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {
      return new _ast_mjs__WEBPACK_IMPORTED_MODULE_5__.Location(startToken, this._lexer.lastToken, this._lexer.source);
    }
  }
  /**
   * Determines if the next token is of a given kind
   */
  ;

  _proto.peek = function peek(kind) {
    return this._lexer.token.kind === kind;
  }
  /**
   * If the next token is of the given kind, return that token after advancing the lexer.
   * Otherwise, do not change the parser state and throw an error.
   */
  ;

  _proto.expectToken = function expectToken(kind) {
    var token = this._lexer.token;

    if (token.kind === kind) {
      this._lexer.advance();

      return token;
    }

    throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_6__.syntaxError)(this._lexer.source, token.start, "Expected ".concat(getTokenKindDesc(kind), ", found ").concat(getTokenDesc(token), "."));
  }
  /**
   * If the next token is of the given kind, return that token after advancing the lexer.
   * Otherwise, do not change the parser state and return undefined.
   */
  ;

  _proto.expectOptionalToken = function expectOptionalToken(kind) {
    var token = this._lexer.token;

    if (token.kind === kind) {
      this._lexer.advance();

      return token;
    }

    return undefined;
  }
  /**
   * If the next token is a given keyword, advance the lexer.
   * Otherwise, do not change the parser state and throw an error.
   */
  ;

  _proto.expectKeyword = function expectKeyword(value) {
    var token = this._lexer.token;

    if (token.kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME && token.value === value) {
      this._lexer.advance();
    } else {
      throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_6__.syntaxError)(this._lexer.source, token.start, "Expected \"".concat(value, "\", found ").concat(getTokenDesc(token), "."));
    }
  }
  /**
   * If the next token is a given keyword, return "true" after advancing the lexer.
   * Otherwise, do not change the parser state and return "false".
   */
  ;

  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {
    var token = this._lexer.token;

    if (token.kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME && token.value === value) {
      this._lexer.advance();

      return true;
    }

    return false;
  }
  /**
   * Helper function for creating an error when an unexpected lexed token is encountered.
   */
  ;

  _proto.unexpected = function unexpected(atToken) {
    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;
    return (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_6__.syntaxError)(this._lexer.source, token.start, "Unexpected ".concat(getTokenDesc(token), "."));
  }
  /**
   * Returns a possibly empty list of parse nodes, determined by the parseFn.
   * This list begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  ;

  _proto.any = function any(openKind, parseFn, closeKind) {
    this.expectToken(openKind);
    var nodes = [];

    while (!this.expectOptionalToken(closeKind)) {
      nodes.push(parseFn.call(this));
    }

    return nodes;
  }
  /**
   * Returns a list of parse nodes, determined by the parseFn.
   * It can be empty only if open token is missing otherwise it will always return non-empty list
   * that begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  ;

  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {
    if (this.expectOptionalToken(openKind)) {
      var nodes = [];

      do {
        nodes.push(parseFn.call(this));
      } while (!this.expectOptionalToken(closeKind));

      return nodes;
    }

    return [];
  }
  /**
   * Returns a non-empty list of parse nodes, determined by the parseFn.
   * This list begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  ;

  _proto.many = function many(openKind, parseFn, closeKind) {
    this.expectToken(openKind);
    var nodes = [];

    do {
      nodes.push(parseFn.call(this));
    } while (!this.expectOptionalToken(closeKind));

    return nodes;
  }
  /**
   * Returns a non-empty list of parse nodes, determined by the parseFn.
   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.
   * Advances the parser to the next lex token after last item in the list.
   */
  ;

  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {
    this.expectOptionalToken(delimiterKind);
    var nodes = [];

    do {
      nodes.push(parseFn.call(this));
    } while (this.expectOptionalToken(delimiterKind));

    return nodes;
  };

  return Parser;
}();
/**
 * A helper function to describe a token as a string for debugging.
 */

function getTokenDesc(token) {
  var value = token.value;
  return getTokenKindDesc(token.kind) + (value != null ? " \"".concat(value, "\"") : '');
}
/**
 * A helper function to describe a token kind as a string for debugging.
 */


function getTokenKindDesc(kind) {
  return (0,_lexer_mjs__WEBPACK_IMPORTED_MODULE_2__.isPunctuatorTokenKind)(kind) ? "\"".concat(kind, "\"") : kind;
}

/***/ }),

/***/ 62168:
/*!*********************************************************!*\
  !*** ./node_modules/graphql/language/printLocation.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "printLocation": function() { return /* binding */ printLocation; },
/* harmony export */   "printSourceLocation": function() { return /* binding */ printSourceLocation; }
/* harmony export */ });
/* harmony import */ var _location_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./location.mjs */ 68724);

/**
 * Render a helpful description of the location in the GraphQL Source document.
 */

function printLocation(location) {
  return printSourceLocation(location.source, (0,_location_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocation)(location.source, location.start));
}
/**
 * Render a helpful description of the location in the GraphQL Source document.
 */

function printSourceLocation(source, sourceLocation) {
  var firstLineColumnOffset = source.locationOffset.column - 1;
  var body = whitespace(firstLineColumnOffset) + source.body;
  var lineIndex = sourceLocation.line - 1;
  var lineOffset = source.locationOffset.line - 1;
  var lineNum = sourceLocation.line + lineOffset;
  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;
  var columnNum = sourceLocation.column + columnOffset;
  var locationStr = "".concat(source.name, ":").concat(lineNum, ":").concat(columnNum, "\n");
  var lines = body.split(/\r\n|[\n\r]/g);
  var locationLine = lines[lineIndex]; // Special case for minified documents

  if (locationLine.length > 120) {
    var subLineIndex = Math.floor(columnNum / 80);
    var subLineColumnNum = columnNum % 80;
    var subLines = [];

    for (var i = 0; i < locationLine.length; i += 80) {
      subLines.push(locationLine.slice(i, i + 80));
    }

    return locationStr + printPrefixedLines([["".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {
      return ['', subLine];
    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));
  }

  return locationStr + printPrefixedLines([// Lines specified like this: ["prefix", "string"],
  ["".concat(lineNum - 1), lines[lineIndex - 1]], ["".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], ["".concat(lineNum + 1), lines[lineIndex + 1]]]);
}

function printPrefixedLines(lines) {
  var existingLines = lines.filter(function (_ref) {
    var _ = _ref[0],
        line = _ref[1];
    return line !== undefined;
  });
  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {
    var prefix = _ref2[0];
    return prefix.length;
  }));
  return existingLines.map(function (_ref3) {
    var prefix = _ref3[0],
        line = _ref3[1];
    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');
  }).join('\n');
}

function whitespace(len) {
  return Array(len + 1).join(' ');
}

function leftPad(len, str) {
  return whitespace(len - str.length) + str;
}

/***/ }),

/***/ 91555:
/*!***************************************************!*\
  !*** ./node_modules/graphql/language/printer.mjs ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "print": function() { return /* binding */ print; }
/* harmony export */ });
/* harmony import */ var _visitor_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./visitor.mjs */ 86880);
/* harmony import */ var _blockString_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blockString.mjs */ 36258);


/**
 * Converts an AST into a string, using one set of reasonable
 * formatting rules.
 */

function print(ast) {
  return (0,_visitor_mjs__WEBPACK_IMPORTED_MODULE_0__.visit)(ast, {
    leave: printDocASTReducer
  });
}
var MAX_LINE_LENGTH = 80; // TODO: provide better type coverage in future

var printDocASTReducer = {
  Name: function Name(node) {
    return node.value;
  },
  Variable: function Variable(node) {
    return '$' + node.name;
  },
  // Document
  Document: function Document(node) {
    return join(node.definitions, '\n\n') + '\n';
  },
  OperationDefinition: function OperationDefinition(node) {
    var op = node.operation;
    var name = node.name;
    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');
    var directives = join(node.directives, ' ');
    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use
    // the query short form.

    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');
  },
  VariableDefinition: function VariableDefinition(_ref) {
    var variable = _ref.variable,
        type = _ref.type,
        defaultValue = _ref.defaultValue,
        directives = _ref.directives;
    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));
  },
  SelectionSet: function SelectionSet(_ref2) {
    var selections = _ref2.selections;
    return block(selections);
  },
  Field: function Field(_ref3) {
    var alias = _ref3.alias,
        name = _ref3.name,
        args = _ref3.arguments,
        directives = _ref3.directives,
        selectionSet = _ref3.selectionSet;
    var prefix = wrap('', alias, ': ') + name;
    var argsLine = prefix + wrap('(', join(args, ', '), ')');

    if (argsLine.length > MAX_LINE_LENGTH) {
      argsLine = prefix + wrap('(\n', indent(join(args, '\n')), '\n)');
    }

    return join([argsLine, join(directives, ' '), selectionSet], ' ');
  },
  Argument: function Argument(_ref4) {
    var name = _ref4.name,
        value = _ref4.value;
    return name + ': ' + value;
  },
  // Fragments
  FragmentSpread: function FragmentSpread(_ref5) {
    var name = _ref5.name,
        directives = _ref5.directives;
    return '...' + name + wrap(' ', join(directives, ' '));
  },
  InlineFragment: function InlineFragment(_ref6) {
    var typeCondition = _ref6.typeCondition,
        directives = _ref6.directives,
        selectionSet = _ref6.selectionSet;
    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');
  },
  FragmentDefinition: function FragmentDefinition(_ref7) {
    var name = _ref7.name,
        typeCondition = _ref7.typeCondition,
        variableDefinitions = _ref7.variableDefinitions,
        directives = _ref7.directives,
        selectionSet = _ref7.selectionSet;
    return (// Note: fragment variable definitions are experimental and may be changed
      // or removed in the future.
      "fragment ".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), " ") + "on ".concat(typeCondition, " ").concat(wrap('', join(directives, ' '), ' ')) + selectionSet
    );
  },
  // Value
  IntValue: function IntValue(_ref8) {
    var value = _ref8.value;
    return value;
  },
  FloatValue: function FloatValue(_ref9) {
    var value = _ref9.value;
    return value;
  },
  StringValue: function StringValue(_ref10, key) {
    var value = _ref10.value,
        isBlockString = _ref10.block;
    return isBlockString ? (0,_blockString_mjs__WEBPACK_IMPORTED_MODULE_1__.printBlockString)(value, key === 'description' ? '' : '  ') : JSON.stringify(value);
  },
  BooleanValue: function BooleanValue(_ref11) {
    var value = _ref11.value;
    return value ? 'true' : 'false';
  },
  NullValue: function NullValue() {
    return 'null';
  },
  EnumValue: function EnumValue(_ref12) {
    var value = _ref12.value;
    return value;
  },
  ListValue: function ListValue(_ref13) {
    var values = _ref13.values;
    return '[' + join(values, ', ') + ']';
  },
  ObjectValue: function ObjectValue(_ref14) {
    var fields = _ref14.fields;
    return '{' + join(fields, ', ') + '}';
  },
  ObjectField: function ObjectField(_ref15) {
    var name = _ref15.name,
        value = _ref15.value;
    return name + ': ' + value;
  },
  // Directive
  Directive: function Directive(_ref16) {
    var name = _ref16.name,
        args = _ref16.arguments;
    return '@' + name + wrap('(', join(args, ', '), ')');
  },
  // Type
  NamedType: function NamedType(_ref17) {
    var name = _ref17.name;
    return name;
  },
  ListType: function ListType(_ref18) {
    var type = _ref18.type;
    return '[' + type + ']';
  },
  NonNullType: function NonNullType(_ref19) {
    var type = _ref19.type;
    return type + '!';
  },
  // Type System Definitions
  SchemaDefinition: addDescription(function (_ref20) {
    var directives = _ref20.directives,
        operationTypes = _ref20.operationTypes;
    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');
  }),
  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {
    var operation = _ref21.operation,
        type = _ref21.type;
    return operation + ': ' + type;
  },
  ScalarTypeDefinition: addDescription(function (_ref22) {
    var name = _ref22.name,
        directives = _ref22.directives;
    return join(['scalar', name, join(directives, ' ')], ' ');
  }),
  ObjectTypeDefinition: addDescription(function (_ref23) {
    var name = _ref23.name,
        interfaces = _ref23.interfaces,
        directives = _ref23.directives,
        fields = _ref23.fields;
    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');
  }),
  FieldDefinition: addDescription(function (_ref24) {
    var name = _ref24.name,
        args = _ref24.arguments,
        type = _ref24.type,
        directives = _ref24.directives;
    return name + (hasMultilineItems(args) ? wrap('(\n', indent(join(args, '\n')), '\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));
  }),
  InputValueDefinition: addDescription(function (_ref25) {
    var name = _ref25.name,
        type = _ref25.type,
        defaultValue = _ref25.defaultValue,
        directives = _ref25.directives;
    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');
  }),
  InterfaceTypeDefinition: addDescription(function (_ref26) {
    var name = _ref26.name,
        interfaces = _ref26.interfaces,
        directives = _ref26.directives,
        fields = _ref26.fields;
    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');
  }),
  UnionTypeDefinition: addDescription(function (_ref27) {
    var name = _ref27.name,
        directives = _ref27.directives,
        types = _ref27.types;
    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');
  }),
  EnumTypeDefinition: addDescription(function (_ref28) {
    var name = _ref28.name,
        directives = _ref28.directives,
        values = _ref28.values;
    return join(['enum', name, join(directives, ' '), block(values)], ' ');
  }),
  EnumValueDefinition: addDescription(function (_ref29) {
    var name = _ref29.name,
        directives = _ref29.directives;
    return join([name, join(directives, ' ')], ' ');
  }),
  InputObjectTypeDefinition: addDescription(function (_ref30) {
    var name = _ref30.name,
        directives = _ref30.directives,
        fields = _ref30.fields;
    return join(['input', name, join(directives, ' '), block(fields)], ' ');
  }),
  DirectiveDefinition: addDescription(function (_ref31) {
    var name = _ref31.name,
        args = _ref31.arguments,
        repeatable = _ref31.repeatable,
        locations = _ref31.locations;
    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\n', indent(join(args, '\n')), '\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');
  }),
  SchemaExtension: function SchemaExtension(_ref32) {
    var directives = _ref32.directives,
        operationTypes = _ref32.operationTypes;
    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');
  },
  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {
    var name = _ref33.name,
        directives = _ref33.directives;
    return join(['extend scalar', name, join(directives, ' ')], ' ');
  },
  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {
    var name = _ref34.name,
        interfaces = _ref34.interfaces,
        directives = _ref34.directives,
        fields = _ref34.fields;
    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');
  },
  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {
    var name = _ref35.name,
        interfaces = _ref35.interfaces,
        directives = _ref35.directives,
        fields = _ref35.fields;
    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');
  },
  UnionTypeExtension: function UnionTypeExtension(_ref36) {
    var name = _ref36.name,
        directives = _ref36.directives,
        types = _ref36.types;
    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');
  },
  EnumTypeExtension: function EnumTypeExtension(_ref37) {
    var name = _ref37.name,
        directives = _ref37.directives,
        values = _ref37.values;
    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');
  },
  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {
    var name = _ref38.name,
        directives = _ref38.directives,
        fields = _ref38.fields;
    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');
  }
};

function addDescription(cb) {
  return function (node) {
    return join([node.description, cb(node)], '\n');
  };
}
/**
 * Given maybeArray, print an empty string if it is null or empty, otherwise
 * print all items together separated by separator if provided
 */


function join(maybeArray) {
  var _maybeArray$filter$jo;

  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {
    return x;
  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';
}
/**
 * Given array, print each item on its own line, wrapped in an
 * indented "{ }" block.
 */


function block(array) {
  return wrap('{\n', indent(join(array, '\n')), '\n}');
}
/**
 * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.
 */


function wrap(start, maybeString) {
  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';
}

function indent(str) {
  return wrap('  ', str.replace(/\n/g, '\n  '));
}

function isMultiline(str) {
  return str.indexOf('\n') !== -1;
}

function hasMultilineItems(maybeArray) {
  return maybeArray != null && maybeArray.some(isMultiline);
}

/***/ }),

/***/ 35912:
/*!**************************************************!*\
  !*** ./node_modules/graphql/language/source.mjs ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Source": function() { return /* binding */ Source; },
/* harmony export */   "isSource": function() { return /* binding */ isSource; }
/* harmony export */ });
/* harmony import */ var _polyfills_symbols_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../polyfills/symbols.mjs */ 42963);
/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ 24532);
/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ 50069);
/* harmony import */ var _jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/instanceOf.mjs */ 14135);
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}





/**
 * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are
 * optional, but they are useful for clients who store GraphQL documents in source files.
 * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might
 * be useful for `name` to be `"Foo.graphql"` and location to be `{ line: 40, column: 1 }`.
 * The `line` and `column` properties in `locationOffset` are 1-indexed.
 */

var Source = /*#__PURE__*/function () {
  function Source(body) {
    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';
    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
      line: 1,
      column: 1
    };
    typeof body === 'string' || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__.default)(0, "Body must be a string. Received: ".concat((0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__.default)(body), "."));
    this.body = body;
    this.name = name;
    this.locationOffset = locationOffset;
    this.locationOffset.line > 0 || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__.default)(0, 'line in locationOffset is 1-indexed and must be positive.');
    this.locationOffset.column > 0 || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__.default)(0, 'column in locationOffset is 1-indexed and must be positive.');
  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet


  _createClass(Source, [{
    key: _polyfills_symbols_mjs__WEBPACK_IMPORTED_MODULE_2__.SYMBOL_TO_STRING_TAG,
    get: function get() {
      return 'Source';
    }
  }]);

  return Source;
}();
/**
 * Test if the given value is a Source object.
 *
 * @internal
 */
// eslint-disable-next-line no-redeclare

function isSource(source) {
  return (0,_jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_3__.default)(source, Source);
}

/***/ }),

/***/ 92800:
/*!*****************************************************!*\
  !*** ./node_modules/graphql/language/tokenKind.mjs ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TokenKind": function() { return /* binding */ TokenKind; }
/* harmony export */ });
/**
 * An exported enum describing the different kinds of tokens that the
 * lexer emits.
 */
var TokenKind = Object.freeze({
  SOF: '<SOF>',
  EOF: '<EOF>',
  BANG: '!',
  DOLLAR: '$',
  AMP: '&',
  PAREN_L: '(',
  PAREN_R: ')',
  SPREAD: '...',
  COLON: ':',
  EQUALS: '=',
  AT: '@',
  BRACKET_L: '[',
  BRACKET_R: ']',
  BRACE_L: '{',
  PIPE: '|',
  BRACE_R: '}',
  NAME: 'Name',
  INT: 'Int',
  FLOAT: 'Float',
  STRING: 'String',
  BLOCK_STRING: 'BlockString',
  COMMENT: 'Comment'
});
/**
 * The enum type representing the token kinds values.
 */

/***/ }),

/***/ 86880:
/*!***************************************************!*\
  !*** ./node_modules/graphql/language/visitor.mjs ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QueryDocumentKeys": function() { return /* binding */ QueryDocumentKeys; },
/* harmony export */   "BREAK": function() { return /* binding */ BREAK; },
/* harmony export */   "visit": function() { return /* binding */ visit; },
/* harmony export */   "visitInParallel": function() { return /* binding */ visitInParallel; },
/* harmony export */   "getVisitFn": function() { return /* binding */ getVisitFn; }
/* harmony export */ });
/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ 24532);
/* harmony import */ var _ast_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ast.mjs */ 16840);


/**
 * A visitor is provided to visit, it contains the collection of
 * relevant functions to be called during the visitor's traversal.
 */

var QueryDocumentKeys = {
  Name: [],
  Document: ['definitions'],
  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],
  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],
  Variable: ['name'],
  SelectionSet: ['selections'],
  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],
  Argument: ['name', 'value'],
  FragmentSpread: ['name', 'directives'],
  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],
  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed
  // or removed in the future.
  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],
  IntValue: [],
  FloatValue: [],
  StringValue: [],
  BooleanValue: [],
  NullValue: [],
  EnumValue: [],
  ListValue: ['values'],
  ObjectValue: ['fields'],
  ObjectField: ['name', 'value'],
  Directive: ['name', 'arguments'],
  NamedType: ['name'],
  ListType: ['type'],
  NonNullType: ['type'],
  SchemaDefinition: ['description', 'directives', 'operationTypes'],
  OperationTypeDefinition: ['type'],
  ScalarTypeDefinition: ['description', 'name', 'directives'],
  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],
  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],
  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],
  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],
  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],
  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],
  EnumValueDefinition: ['description', 'name', 'directives'],
  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],
  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],
  SchemaExtension: ['directives', 'operationTypes'],
  ScalarTypeExtension: ['name', 'directives'],
  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],
  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],
  UnionTypeExtension: ['name', 'directives', 'types'],
  EnumTypeExtension: ['name', 'directives', 'values'],
  InputObjectTypeExtension: ['name', 'directives', 'fields']
};
var BREAK = Object.freeze({});
/**
 * visit() will walk through an AST using a depth-first traversal, calling
 * the visitor's enter function at each node in the traversal, and calling the
 * leave function after visiting that node and all of its child nodes.
 *
 * By returning different values from the enter and leave functions, the
 * behavior of the visitor can be altered, including skipping over a sub-tree of
 * the AST (by returning false), editing the AST by returning a value or null
 * to remove the value, or to stop the whole traversal by returning BREAK.
 *
 * When using visit() to edit an AST, the original AST will not be modified, and
 * a new version of the AST with the changes applied will be returned from the
 * visit function.
 *
 *     const editedAST = visit(ast, {
 *       enter(node, key, parent, path, ancestors) {
 *         // @return
 *         //   undefined: no action
 *         //   false: skip visiting this node
 *         //   visitor.BREAK: stop visiting altogether
 *         //   null: delete this node
 *         //   any value: replace this node with the returned value
 *       },
 *       leave(node, key, parent, path, ancestors) {
 *         // @return
 *         //   undefined: no action
 *         //   false: no action
 *         //   visitor.BREAK: stop visiting altogether
 *         //   null: delete this node
 *         //   any value: replace this node with the returned value
 *       }
 *     });
 *
 * Alternatively to providing enter() and leave() functions, a visitor can
 * instead provide functions named the same as the kinds of AST nodes, or
 * enter/leave visitors at a named key, leading to four permutations of the
 * visitor API:
 *
 * 1) Named visitors triggered when entering a node of a specific kind.
 *
 *     visit(ast, {
 *       Kind(node) {
 *         // enter the "Kind" node
 *       }
 *     })
 *
 * 2) Named visitors that trigger upon entering and leaving a node of
 *    a specific kind.
 *
 *     visit(ast, {
 *       Kind: {
 *         enter(node) {
 *           // enter the "Kind" node
 *         }
 *         leave(node) {
 *           // leave the "Kind" node
 *         }
 *       }
 *     })
 *
 * 3) Generic visitors that trigger upon entering and leaving any node.
 *
 *     visit(ast, {
 *       enter(node) {
 *         // enter any node
 *       },
 *       leave(node) {
 *         // leave any node
 *       }
 *     })
 *
 * 4) Parallel visitors for entering and leaving nodes of a specific kind.
 *
 *     visit(ast, {
 *       enter: {
 *         Kind(node) {
 *           // enter the "Kind" node
 *         }
 *       },
 *       leave: {
 *         Kind(node) {
 *           // leave the "Kind" node
 *         }
 *       }
 *     })
 */

function visit(root, visitor) {
  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;
  /* eslint-disable no-undef-init */

  var stack = undefined;
  var inArray = Array.isArray(root);
  var keys = [root];
  var index = -1;
  var edits = [];
  var node = undefined;
  var key = undefined;
  var parent = undefined;
  var path = [];
  var ancestors = [];
  var newRoot = root;
  /* eslint-enable no-undef-init */

  do {
    index++;
    var isLeaving = index === keys.length;
    var isEdited = isLeaving && edits.length !== 0;

    if (isLeaving) {
      key = ancestors.length === 0 ? undefined : path[path.length - 1];
      node = parent;
      parent = ancestors.pop();

      if (isEdited) {
        if (inArray) {
          node = node.slice();
        } else {
          var clone = {};

          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {
            var k = _Object$keys2[_i2];
            clone[k] = node[k];
          }

          node = clone;
        }

        var editOffset = 0;

        for (var ii = 0; ii < edits.length; ii++) {
          var editKey = edits[ii][0];
          var editValue = edits[ii][1];

          if (inArray) {
            editKey -= editOffset;
          }

          if (inArray && editValue === null) {
            node.splice(editKey, 1);
            editOffset++;
          } else {
            node[editKey] = editValue;
          }
        }
      }

      index = stack.index;
      keys = stack.keys;
      edits = stack.edits;
      inArray = stack.inArray;
      stack = stack.prev;
    } else {
      key = parent ? inArray ? index : keys[index] : undefined;
      node = parent ? parent[key] : newRoot;

      if (node === null || node === undefined) {
        continue;
      }

      if (parent) {
        path.push(key);
      }
    }

    var result = void 0;

    if (!Array.isArray(node)) {
      if (!(0,_ast_mjs__WEBPACK_IMPORTED_MODULE_0__.isNode)(node)) {
        throw new Error("Invalid AST Node: ".concat((0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__.default)(node), "."));
      }

      var visitFn = getVisitFn(visitor, node.kind, isLeaving);

      if (visitFn) {
        result = visitFn.call(visitor, node, key, parent, path, ancestors);

        if (result === BREAK) {
          break;
        }

        if (result === false) {
          if (!isLeaving) {
            path.pop();
            continue;
          }
        } else if (result !== undefined) {
          edits.push([key, result]);

          if (!isLeaving) {
            if ((0,_ast_mjs__WEBPACK_IMPORTED_MODULE_0__.isNode)(result)) {
              node = result;
            } else {
              path.pop();
              continue;
            }
          }
        }
      }
    }

    if (result === undefined && isEdited) {
      edits.push([key, node]);
    }

    if (isLeaving) {
      path.pop();
    } else {
      var _visitorKeys$node$kin;

      stack = {
        inArray: inArray,
        index: index,
        keys: keys,
        edits: edits,
        prev: stack
      };
      inArray = Array.isArray(node);
      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];
      index = -1;
      edits = [];

      if (parent) {
        ancestors.push(parent);
      }

      parent = node;
    }
  } while (stack !== undefined);

  if (edits.length !== 0) {
    newRoot = edits[edits.length - 1][1];
  }

  return newRoot;
}
/**
 * Creates a new visitor instance which delegates to many visitors to run in
 * parallel. Each visitor will be visited for each node before moving on.
 *
 * If a prior visitor edits a node, no following visitors will see that node.
 */

function visitInParallel(visitors) {
  var skipping = new Array(visitors.length);
  return {
    enter: function enter(node) {
      for (var i = 0; i < visitors.length; i++) {
        if (skipping[i] == null) {
          var fn = getVisitFn(visitors[i], node.kind,
          /* isLeaving */
          false);

          if (fn) {
            var result = fn.apply(visitors[i], arguments);

            if (result === false) {
              skipping[i] = node;
            } else if (result === BREAK) {
              skipping[i] = BREAK;
            } else if (result !== undefined) {
              return result;
            }
          }
        }
      }
    },
    leave: function leave(node) {
      for (var i = 0; i < visitors.length; i++) {
        if (skipping[i] == null) {
          var fn = getVisitFn(visitors[i], node.kind,
          /* isLeaving */
          true);

          if (fn) {
            var result = fn.apply(visitors[i], arguments);

            if (result === BREAK) {
              skipping[i] = BREAK;
            } else if (result !== undefined && result !== false) {
              return result;
            }
          }
        } else if (skipping[i] === node) {
          skipping[i] = null;
        }
      }
    }
  };
}
/**
 * Given a visitor instance, if it is leaving or not, and a node kind, return
 * the function the visitor runtime should call.
 */

function getVisitFn(visitor, kind, isLeaving) {
  var kindVisitor = visitor[kind];

  if (kindVisitor) {
    if (!isLeaving && typeof kindVisitor === 'function') {
      // { Kind() {} }
      return kindVisitor;
    }

    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;

    if (typeof kindSpecificVisitor === 'function') {
      // { Kind: { enter() {}, leave() {} } }
      return kindSpecificVisitor;
    }
  } else {
    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;

    if (specificVisitor) {
      if (typeof specificVisitor === 'function') {
        // { enter() {}, leave() {} }
        return specificVisitor;
      }

      var specificKindVisitor = specificVisitor[kind];

      if (typeof specificKindVisitor === 'function') {
        // { enter: { Kind() {} }, leave: { Kind() {} } }
        return specificKindVisitor;
      }
    }
  }
}

/***/ }),

/***/ 42963:
/*!****************************************************!*\
  !*** ./node_modules/graphql/polyfills/symbols.mjs ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SYMBOL_ITERATOR": function() { return /* binding */ SYMBOL_ITERATOR; },
/* harmony export */   "SYMBOL_ASYNC_ITERATOR": function() { return /* binding */ SYMBOL_ASYNC_ITERATOR; },
/* harmony export */   "SYMBOL_TO_STRING_TAG": function() { return /* binding */ SYMBOL_TO_STRING_TAG; }
/* harmony export */ });
// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator
// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')
var SYMBOL_ITERATOR = typeof Symbol === 'function' && Symbol.iterator != null ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator
// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')

var SYMBOL_ASYNC_ITERATOR = typeof Symbol === 'function' && Symbol.asyncIterator != null ? Symbol.asyncIterator : '@@asyncIterator'; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')

var SYMBOL_TO_STRING_TAG = typeof Symbol === 'function' && Symbol.toStringTag != null ? Symbol.toStringTag : '@@toStringTag';

/***/ }),

/***/ 63262:
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/package.json ***!
  \***************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"@aws-sdk/client-cloudwatch-logs","description":"AWS SDK for JavaScript Cloudwatch Logs Client for Node.js, Browser and React Native","version":"3.6.1","scripts":{"clean":"yarn remove-definitions && yarn remove-dist && yarn remove-documentation","build-documentation":"yarn remove-documentation && typedoc ./","prepublishOnly":"yarn build","pretest":"yarn build:cjs","remove-definitions":"rimraf ./types","remove-dist":"rimraf ./dist","remove-documentation":"rimraf ./docs","test":"exit 0","build:cjs":"tsc -p tsconfig.json","build:es":"tsc -p tsconfig.es.json","build":"yarn build:cjs && yarn build:es","postbuild":"downlevel-dts types types/ts3.4"},"main":"./dist/cjs/index.js","types":"./types/index.d.ts","module":"./dist/es/index.js","browser":{"./runtimeConfig":"./runtimeConfig.browser"},"react-native":{"./runtimeConfig":"./runtimeConfig.native"},"sideEffects":false,"dependencies":{"@aws-crypto/sha256-browser":"^1.0.0","@aws-crypto/sha256-js":"^1.0.0","@aws-sdk/config-resolver":"3.6.1","@aws-sdk/credential-provider-node":"3.6.1","@aws-sdk/fetch-http-handler":"3.6.1","@aws-sdk/hash-node":"3.6.1","@aws-sdk/invalid-dependency":"3.6.1","@aws-sdk/middleware-content-length":"3.6.1","@aws-sdk/middleware-host-header":"3.6.1","@aws-sdk/middleware-logger":"3.6.1","@aws-sdk/middleware-retry":"3.6.1","@aws-sdk/middleware-serde":"3.6.1","@aws-sdk/middleware-signing":"3.6.1","@aws-sdk/middleware-stack":"3.6.1","@aws-sdk/middleware-user-agent":"3.6.1","@aws-sdk/node-config-provider":"3.6.1","@aws-sdk/node-http-handler":"3.6.1","@aws-sdk/protocol-http":"3.6.1","@aws-sdk/smithy-client":"3.6.1","@aws-sdk/types":"3.6.1","@aws-sdk/url-parser":"3.6.1","@aws-sdk/url-parser-native":"3.6.1","@aws-sdk/util-base64-browser":"3.6.1","@aws-sdk/util-base64-node":"3.6.1","@aws-sdk/util-body-length-browser":"3.6.1","@aws-sdk/util-body-length-node":"3.6.1","@aws-sdk/util-user-agent-browser":"3.6.1","@aws-sdk/util-user-agent-node":"3.6.1","@aws-sdk/util-utf8-browser":"3.6.1","@aws-sdk/util-utf8-node":"3.6.1","tslib":"^2.0.0"},"devDependencies":{"@aws-sdk/client-documentation-generator":"3.6.1","@types/node":"^12.7.5","downlevel-dts":"0.7.0","jest":"^26.1.0","rimraf":"^3.0.0","typedoc":"^0.19.2","typescript":"~4.1.2"},"engines":{"node":">=10.0.0"},"typesVersions":{"<4.0":{"types/*":["types/ts3.4/*"]}},"author":{"name":"AWS SDK for JavaScript Team","url":"https://aws.amazon.com/javascript/"},"license":"Apache-2.0","homepage":"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-cloudwatch-logs","repository":{"type":"git","url":"https://github.com/aws/aws-sdk-js-v3.git","directory":"clients/client-cloudwatch-logs"}}');

/***/ })

}]);
//# sourceMappingURL=default-node_modules_aws-amplify_api_lib-esm_API_js-src_app_shared_api_config_ts.js.map