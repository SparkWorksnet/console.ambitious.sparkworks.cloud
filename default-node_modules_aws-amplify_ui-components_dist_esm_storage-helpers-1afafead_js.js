(self["webpackChunksparkworks_console"] = self["webpackChunksparkworks_console"] || []).push([["default-node_modules_aws-amplify_ui-components_dist_esm_storage-helpers-1afafead_js"],{

/***/ 40036:
/*!**************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/Storage.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Storage": function() { return /* binding */ Storage; }
/* harmony export */ });
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-amplify/core */ 90118);
/* harmony import */ var _providers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./providers */ 61812);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ 61172);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _providers_AWSS3UploadTask__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./providers/AWSS3UploadTask */ 30445);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __read = undefined && undefined.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};





var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.ConsoleLogger('StorageClass');
var DEFAULT_PROVIDER = 'AWSS3';
/**
 * Provide storage methods to use AWS S3
 */

var Storage = function () {
  /**
   * Initialize Storage
   * @param {Object} config - Configuration object for storage
   */
  function Storage() {
    this._config = {};
    this._pluggables = [];
    this._cancelTokenSourceMap = new WeakMap();
    logger.debug('Storage Options', this._config);
    this.get = this.get.bind(this);
    this.put = this.put.bind(this);
    this.remove = this.remove.bind(this);
    this.list = this.list.bind(this);
  }

  Storage.prototype.getModuleName = function () {
    return 'Storage';
  };
  /**
   * add plugin into Storage category
   * @param {Object} pluggable - an instance of the plugin
   */


  Storage.prototype.addPluggable = function (pluggable) {
    if (pluggable && pluggable.getCategory() === 'Storage') {
      this._pluggables.push(pluggable);

      var config = {};
      config = pluggable.configure(this._config[pluggable.getProviderName()]);
      return config;
    }
  };
  /**
   * Get the plugin object
   * @param providerName - the name of the plugin
   */


  Storage.prototype.getPluggable = function (providerName) {
    var pluggable = this._pluggables.find(function (pluggable) {
      return pluggable.getProviderName() === providerName;
    });

    if (pluggable === undefined) {
      logger.debug('No plugin found with providerName', providerName);
      return null;
    } else return pluggable;
  };
  /**
   * Remove the plugin object
   * @param providerName - the name of the plugin
   */


  Storage.prototype.removePluggable = function (providerName) {
    this._pluggables = this._pluggables.filter(function (pluggable) {
      return pluggable.getProviderName() !== providerName;
    });
    return;
  };
  /**
   * Configure Storage
   * @param {Object} config - Configuration object for storage
   * @return {Object} - Current configuration
   */


  Storage.prototype.configure = function (config) {
    var _this = this;

    logger.debug('configure Storage');
    if (!config) return this._config;
    var amplifyConfig = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__.Parser.parseMobilehubConfig(config);
    var storageKeysFromConfig = Object.keys(amplifyConfig.Storage);
    var storageArrayKeys = ['bucket', 'region', 'level', 'track', 'customPrefix', 'serverSideEncryption', 'SSECustomerAlgorithm', 'SSECustomerKey', 'SSECustomerKeyMD5', 'SSEKMSKeyId'];

    var isInStorageArrayKeys = function isInStorageArrayKeys(k) {
      return storageArrayKeys.some(function (x) {
        return x === k;
      });
    };

    var checkConfigKeysFromArray = function checkConfigKeysFromArray(k) {
      return k.find(function (k) {
        return isInStorageArrayKeys(k);
      });
    };

    if (storageKeysFromConfig && checkConfigKeysFromArray(storageKeysFromConfig) && !amplifyConfig.Storage[DEFAULT_PROVIDER]) {
      amplifyConfig.Storage[DEFAULT_PROVIDER] = {};
    }

    Object.entries(amplifyConfig.Storage).map(function (_a) {
      var _b = __read(_a, 2),
          key = _b[0],
          value = _b[1];

      if (key && isInStorageArrayKeys(key) && value !== undefined) {
        amplifyConfig.Storage[DEFAULT_PROVIDER][key] = value;
        delete amplifyConfig.Storage[key];
      }
    }); // only update new values for each provider

    Object.keys(amplifyConfig.Storage).forEach(function (providerName) {
      if (typeof amplifyConfig.Storage[providerName] !== 'string') {
        _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), amplifyConfig.Storage[providerName]);
      }
    });

    this._pluggables.forEach(function (pluggable) {
      pluggable.configure(_this._config[pluggable.getProviderName()]);
    });

    if (this._pluggables.length === 0) {
      this.addPluggable(new _providers__WEBPACK_IMPORTED_MODULE_3__.AWSS3Provider());
    }

    return this._config;
  };

  Storage.prototype.getCancellableTokenSource = function () {
    return axios__WEBPACK_IMPORTED_MODULE_0___default().CancelToken.source();
  };

  Storage.prototype.updateRequestToBeCancellable = function (request, cancelTokenSource) {
    this._cancelTokenSourceMap.set(request, cancelTokenSource);
  };

  Storage.prototype.isUploadTask = function (x) {
    return typeof x !== 'undefined' && typeof x['pause'] === 'function' && typeof x['resume'] === 'function';
  };

  Storage.prototype.cancel = function (request, message) {
    if (request instanceof _providers_AWSS3UploadTask__WEBPACK_IMPORTED_MODULE_4__.AWSS3UploadTask) {
      return request._cancel();
    }

    var cancelTokenSource = this._cancelTokenSourceMap.get(request);

    if (cancelTokenSource) {
      cancelTokenSource.cancel(message);
    } else {
      logger.debug('The request does not map to any cancel token');
    }
  };

  Storage.prototype.copy = function (src, dest, config) {
    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;

    var prov = this._pluggables.find(function (pluggable) {
      return pluggable.getProviderName() === provider;
    });

    if (prov === undefined) {
      logger.debug('No plugin found with providerName', provider);
      return Promise.reject('No plugin found in Storage for the provider');
    }

    var cancelTokenSource = this.getCancellableTokenSource();

    if (typeof prov.copy !== 'function') {
      return Promise.reject(".copy is not implemented on provider " + prov.getProviderName());
    }

    var responsePromise = prov.copy(src, dest, __assign(__assign({}, config), {
      cancelTokenSource: cancelTokenSource
    }));
    this.updateRequestToBeCancellable(responsePromise, cancelTokenSource);
    return responsePromise;
  };

  Storage.prototype.get = function (key, config) {
    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;

    var prov = this._pluggables.find(function (pluggable) {
      return pluggable.getProviderName() === provider;
    });

    if (prov === undefined) {
      logger.debug('No plugin found with providerName', provider);
      return Promise.reject('No plugin found in Storage for the provider');
    }

    var cancelTokenSource = this.getCancellableTokenSource();
    var responsePromise = prov.get(key, __assign(__assign({}, config), {
      cancelTokenSource: cancelTokenSource
    }));
    this.updateRequestToBeCancellable(responsePromise, cancelTokenSource);
    return responsePromise;
  };

  Storage.prototype.isCancelError = function (error) {
    return axios__WEBPACK_IMPORTED_MODULE_0___default().isCancel(error);
  };

  Storage.prototype.put = function (key, object, config) {
    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;

    var prov = this._pluggables.find(function (pluggable) {
      return pluggable.getProviderName() === provider;
    });

    if (prov === undefined) {
      logger.debug('No plugin found with providerName', provider);
      return Promise.reject('No plugin found in Storage for the provider');
    }

    var cancelTokenSource = this.getCancellableTokenSource();
    var response = prov.put(key, object, __assign(__assign({}, config), {
      cancelTokenSource: cancelTokenSource
    }));

    if (!this.isUploadTask(response)) {
      this.updateRequestToBeCancellable(response, cancelTokenSource);
    }

    return response;
  };

  Storage.prototype.remove = function (key, config) {
    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;

    var prov = this._pluggables.find(function (pluggable) {
      return pluggable.getProviderName() === provider;
    });

    if (prov === undefined) {
      logger.debug('No plugin found with providerName', provider);
      return Promise.reject('No plugin found in Storage for the provider');
    }

    return prov.remove(key, config);
  };

  Storage.prototype.list = function (path, config) {
    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;

    var prov = this._pluggables.find(function (pluggable) {
      return pluggable.getProviderName() === provider;
    });

    if (prov === undefined) {
      logger.debug('No plugin found with providerName', provider);
      return Promise.reject('No plugin found in Storage for the provider');
    }

    return prov.list(path, config);
  };

  return Storage;
}();


/**
 * @deprecated use named import
 */

/* harmony default export */ __webpack_exports__["default"] = (Storage);

/***/ }),

/***/ 11624:
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/common/S3ClientUtils.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getPrefix": function() { return /* binding */ getPrefix; },
/* harmony export */   "createPrefixMiddleware": function() { return /* binding */ createPrefixMiddleware; },
/* harmony export */   "autoAdjustClockskewMiddleware": function() { return /* binding */ autoAdjustClockskewMiddleware; },
/* harmony export */   "autoAdjustClockskewMiddlewareOptions": function() { return /* binding */ autoAdjustClockskewMiddlewareOptions; },
/* harmony export */   "prefixMiddlewareOptions": function() { return /* binding */ prefixMiddlewareOptions; },
/* harmony export */   "credentialsProvider": function() { return /* binding */ credentialsProvider; },
/* harmony export */   "createS3Client": function() { return /* binding */ createS3Client; }
/* harmony export */ });
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-amplify/core */ 75001);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-amplify/core */ 99433);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 49551);
/* harmony import */ var _providers_axios_http_handler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../providers/axios-http-handler */ 99836);
/* harmony import */ var _StorageConstants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./StorageConstants */ 72354);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};





var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('S3ClientUtils'); // placeholder credentials in order to satisfy type requirement, always results in 403 when used

var INVALID_CRED = {
  accessKeyId: '',
  secretAccessKey: ''
};
var getPrefix = function getPrefix(config) {
  var credentials = config.credentials,
      level = config.level,
      customPrefix = config.customPrefix,
      identityId = config.identityId;
  var resolvedCustomPrefix = customPrefix || {};
  var resolvedIdentityId = identityId || credentials.identityId;
  var privatePath = (resolvedCustomPrefix.private !== undefined ? resolvedCustomPrefix.private : 'private/') + resolvedIdentityId + '/';
  var protectedPath = (resolvedCustomPrefix.protected !== undefined ? resolvedCustomPrefix.protected : 'protected/') + resolvedIdentityId + '/';
  var publicPath = resolvedCustomPrefix.public !== undefined ? resolvedCustomPrefix.public : 'public/';

  switch (level) {
    case 'private':
      return privatePath;

    case 'protected':
      return protectedPath;

    default:
      return publicPath;
  }
};
var createPrefixMiddleware = function createPrefixMiddleware(opt, key) {
  return function (next, _context) {
    return function (args) {
      return __awaiter(void 0, void 0, void 0, function () {
        var credentials, cred, prefix, clonedInput, result;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              return [4
              /*yield*/
              , _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.Credentials.get()];

            case 1:
              credentials = _a.sent();
              cred = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.Credentials.shear(credentials);
              prefix = getPrefix(__assign(__assign({}, opt), {
                credentials: cred
              }));
              clonedInput = Object.assign({}, args.input);

              if (Object.prototype.hasOwnProperty.call(args.input, 'Key')) {
                clonedInput.Key = prefix + key;
                args.input = clonedInput;
              } else if (Object.prototype.hasOwnProperty.call(args.input, 'Prefix')) {
                clonedInput.Prefix = prefix + key;
                args.input = clonedInput;
              }

              result = next(args);
              return [2
              /*return*/
              , result];
          }
        });
      });
    };
  };
};

var isTimeSkewedError = function isTimeSkewedError(err) {
  return err.ServerTime && typeof err.Code === 'string' && err.Code === 'RequestTimeTooSkewed';
}; // we want to take the S3Client config in parameter so we can modify it's systemClockOffset


var autoAdjustClockskewMiddleware = function autoAdjustClockskewMiddleware(config) {
  return function (next, _context) {
    return function (args) {
      return __awaiter(void 0, void 0, void 0, function () {
        var err_1, serverDate;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              _a.trys.push([0, 2,, 3]);

              return [4
              /*yield*/
              , next(args)];

            case 1:
              return [2
              /*return*/
              , _a.sent()];

            case 2:
              err_1 = _a.sent();

              if (isTimeSkewedError(err_1)) {
                serverDate = new Date(err_1.ServerTime);
                config.systemClockOffset = serverDate.getTime() - Date.now();
              }

              throw err_1;

            case 3:
              return [2
              /*return*/
              ];
          }
        });
      });
    };
  };
};
var autoAdjustClockskewMiddlewareOptions = {
  step: 'finalizeRequest',
  name: 'autoAdjustClockskewMiddleware'
};
var prefixMiddlewareOptions = {
  step: 'initialize',
  name: 'addPrefixMiddleware'
};
var credentialsProvider = function credentialsProvider() {
  return __awaiter(void 0, void 0, void 0, function () {
    var credentials, cred, error_1;
    return __generator(this, function (_a) {
      switch (_a.label) {
        case 0:
          _a.trys.push([0, 2,, 3]);

          return [4
          /*yield*/
          , _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.Credentials.get()];

        case 1:
          credentials = _a.sent();
          if (!credentials) return [2
          /*return*/
          , INVALID_CRED];
          cred = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.Credentials.shear(credentials);
          logger.debug('credentials provider get credentials', cred);
          return [2
          /*return*/
          , cred];

        case 2:
          error_1 = _a.sent();
          logger.warn('credentials provider error', error_1);
          return [2
          /*return*/
          , INVALID_CRED];

        case 3:
          return [2
          /*return*/
          ];
      }
    });
  });
};
var createS3Client = function createS3Client(config, emitter) {
  var region = config.region,
      cancelTokenSource = config.cancelTokenSource,
      dangerouslyConnectToHttpEndpointForTesting = config.dangerouslyConnectToHttpEndpointForTesting,
      useAccelerateEndpoint = config.useAccelerateEndpoint;
  var localTestingConfig = {};

  if (dangerouslyConnectToHttpEndpointForTesting) {
    localTestingConfig = {
      endpoint: _StorageConstants__WEBPACK_IMPORTED_MODULE_2__.localTestingStorageEndpoint,
      tls: false,
      bucketEndpoint: false,
      forcePathStyle: true
    };
  }

  var s3client = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_3__.S3Client(__assign(__assign({
    region: region,
    // Using provider instead of a static credentials, so that if an upload task was in progress, but credentials gets
    // changed or invalidated (e.g user signed out), the subsequent requests will fail.
    credentials: credentialsProvider,
    customUserAgent: (0,_aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__.getAmplifyUserAgent)()
  }, localTestingConfig), {
    requestHandler: new _providers_axios_http_handler__WEBPACK_IMPORTED_MODULE_5__.AxiosHttpHandler({}, emitter, cancelTokenSource),
    useAccelerateEndpoint: useAccelerateEndpoint
  }));
  s3client.middlewareStack.remove(_StorageConstants__WEBPACK_IMPORTED_MODULE_2__.SET_CONTENT_LENGTH_HEADER);
  return s3client;
};

/***/ }),

/***/ 72354:
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/common/StorageConstants.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AMPLIFY_SYMBOL": function() { return /* binding */ AMPLIFY_SYMBOL; },
/* harmony export */   "SET_CONTENT_LENGTH_HEADER": function() { return /* binding */ SET_CONTENT_LENGTH_HEADER; },
/* harmony export */   "localTestingStorageEndpoint": function() { return /* binding */ localTestingStorageEndpoint; },
/* harmony export */   "UPLOADS_STORAGE_KEY": function() { return /* binding */ UPLOADS_STORAGE_KEY; }
/* harmony export */ });
var AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';
var SET_CONTENT_LENGTH_HEADER = 'contentLengthMiddleware';
var localTestingStorageEndpoint = 'http://localhost:20005';
var UPLOADS_STORAGE_KEY = '__uploadInProgress';

/***/ }),

/***/ 11316:
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/common/StorageErrorStrings.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StorageErrorStrings": function() { return /* binding */ StorageErrorStrings; },
/* harmony export */   "AWSS3ProviderMultipartCopierErrors": function() { return /* binding */ AWSS3ProviderMultipartCopierErrors; },
/* harmony export */   "AWSS3ProviderUploadErrorStrings": function() { return /* binding */ AWSS3ProviderUploadErrorStrings; }
/* harmony export */ });
var StorageErrorStrings;

(function (StorageErrorStrings) {
  StorageErrorStrings["NO_CREDENTIALS"] = "No credentials";
  StorageErrorStrings["NO_SRC_KEY"] = "source param should be an object with the property \"key\" with value of type string";
  StorageErrorStrings["NO_DEST_KEY"] = "destination param should be an object with the property \"key\" with value of type string";
  StorageErrorStrings["INVALID_BLOB"] = "Object must be an instance of Blob";
})(StorageErrorStrings || (StorageErrorStrings = {}));

var AWSS3ProviderMultipartCopierErrors;

(function (AWSS3ProviderMultipartCopierErrors) {
  AWSS3ProviderMultipartCopierErrors["CLEANUP_FAILED"] = "Multipart copy clean up failed";
  AWSS3ProviderMultipartCopierErrors["NO_OBJECT_FOUND"] = "Object does not exist";
  AWSS3ProviderMultipartCopierErrors["INVALID_QUEUESIZE"] = "Queue size must be a positive number";
  AWSS3ProviderMultipartCopierErrors["NO_COPYSOURCE"] = "You must specify a copy source";
  AWSS3ProviderMultipartCopierErrors["MAX_NUM_PARTS_EXCEEDED"] = "Only a maximum of 10000 parts are allowed";
})(AWSS3ProviderMultipartCopierErrors || (AWSS3ProviderMultipartCopierErrors = {}));

var AWSS3ProviderUploadErrorStrings;

(function (AWSS3ProviderUploadErrorStrings) {
  AWSS3ProviderUploadErrorStrings["UPLOAD_PAUSED_MESSAGE"] = "paused";
})(AWSS3ProviderUploadErrorStrings || (AWSS3ProviderUploadErrorStrings = {}));

/***/ }),

/***/ 44393:
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/common/StorageUtils.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "byteLength": function() { return /* binding */ byteLength; },
/* harmony export */   "dispatchStorageEvent": function() { return /* binding */ dispatchStorageEvent; },
/* harmony export */   "isFile": function() { return /* binding */ isFile; },
/* harmony export */   "isBlob": function() { return /* binding */ isBlob; }
/* harmony export */ });
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 20686);
/* harmony import */ var _StorageConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StorageConstants */ 72354);


var byteLength = function byteLength(x) {
  if (typeof x === 'string') {
    return x.length;
  } else if (isArrayBuffer(x)) {
    return x.byteLength;
  } else if (isBlob(x)) {
    return x.size;
  } else {
    throw new Error('Cannot determine byte length of ' + x);
  }
};
var dispatchStorageEvent = function dispatchStorageEvent(track, event, attrs, metrics, message) {
  if (track) {
    var data = {
      attrs: attrs
    };

    if (metrics) {
      data['metrics'] = metrics;
    }

    _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.Hub.dispatch('storage', {
      event: event,
      data: data,
      message: message
    }, 'Storage', _StorageConstants__WEBPACK_IMPORTED_MODULE_1__.AMPLIFY_SYMBOL);
  }
};
var isFile = function isFile(x) {
  return typeof x !== 'undefined' && x instanceof File;
};
var isBlob = function isBlob(x) {
  return typeof x !== 'undefined' && x instanceof Blob;
};

var isArrayBuffer = function isArrayBuffer(x) {
  return typeof x !== 'undefined' && x instanceof ArrayBuffer;
};

/***/ }),

/***/ 37484:
/*!************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Storage": function() { return /* binding */ Storage; },
/* harmony export */   "StorageClass": function() { return /* reexport safe */ _Storage__WEBPACK_IMPORTED_MODULE_1__.Storage; },
/* harmony export */   "AWSS3Provider": function() { return /* reexport safe */ _providers__WEBPACK_IMPORTED_MODULE_3__.AWSS3Provider; }
/* harmony export */ });
/* harmony import */ var _Storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Storage */ 40036);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-amplify/core */ 94758);
/* harmony import */ var _providers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./providers */ 81681);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};



var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('Storage');
var _instance = null;

var getInstance = function getInstance() {
  if (_instance) {
    return _instance;
  }

  logger.debug('Create Storage Instance, debug');
  _instance = new _Storage__WEBPACK_IMPORTED_MODULE_1__.Storage();
  _instance.vault = new _Storage__WEBPACK_IMPORTED_MODULE_1__.Storage();
  var old_configure = _instance.configure;

  _instance.configure = function (options) {
    logger.debug('storage configure called');

    var vaultConfig = __assign({}, old_configure.call(_instance, options)); // set level private for each provider for the vault


    Object.keys(vaultConfig).forEach(function (providerName) {
      if (typeof vaultConfig[providerName] !== 'string') {
        vaultConfig[providerName] = __assign(__assign({}, vaultConfig[providerName]), {
          level: 'private'
        });
      }
    });
    logger.debug('storage vault configure called');

    _instance.vault.configure(vaultConfig);
  };

  return _instance;
};

var Storage = getInstance();
_aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__.Amplify.register(Storage);
/**
 * @deprecated use named import
 */

/* harmony default export */ __webpack_exports__["default"] = (Storage);



/***/ }),

/***/ 61812:
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3Provider.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AWSS3Provider": function() { return /* binding */ AWSS3Provider; }
/* harmony export */ });
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-amplify/core */ 90710);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-amplify/core */ 20686);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aws-amplify/core */ 90118);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @aws-amplify/core */ 75001);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 71623);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 19813);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 76912);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 79974);
/* harmony import */ var _aws_sdk_util_format_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-format-url */ 9385);
/* harmony import */ var _aws_sdk_util_create_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/util-create-request */ 21823);
/* harmony import */ var _aws_sdk_s3_request_presigner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/s3-request-presigner */ 83474);
/* harmony import */ var _axios_http_handler__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./axios-http-handler */ 99836);
/* harmony import */ var _common_StorageErrorStrings__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../common/StorageErrorStrings */ 11316);
/* harmony import */ var _common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../common/StorageUtils */ 44393);
/* harmony import */ var _common_S3ClientUtils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../common/S3ClientUtils */ 11624);
/* harmony import */ var _AWSS3ProviderManagedUpload__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./AWSS3ProviderManagedUpload */ 50835);
/* harmony import */ var _AWSS3UploadTask__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./AWSS3UploadTask */ 30445);
/* harmony import */ var _common_StorageConstants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/StorageConstants */ 72354);
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! events */ 87508);
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_3__);
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};
/*
 * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */















var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__.ConsoleLogger('AWSS3Provider');
var DEFAULT_STORAGE_LEVEL = 'public';
var DEFAULT_PRESIGN_EXPIRATION = 900;
/**
 * Provide storage methods to use AWS S3
 */

var AWSS3Provider = function () {
  /**
   * Initialize Storage with AWS configurations
   * @param {Object} config - Configuration object for storage
   */
  function AWSS3Provider(config) {
    var _this = this;

    this._config = config ? config : {};
    this._storage = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_5__.StorageHelper().getStorage();
    _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__.Hub.listen('auth', function (data) {
      var payload = data.payload;

      if (payload.event === 'signOut' || payload.event === 'signIn') {
        _this._storage.removeItem(_common_StorageConstants__WEBPACK_IMPORTED_MODULE_7__.UPLOADS_STORAGE_KEY);
      }
    });
    logger.debug('Storage Options', this._config);
  }
  /**
   * get the category of the plugin
   */


  AWSS3Provider.prototype.getCategory = function () {
    return AWSS3Provider.CATEGORY;
  };
  /**
   * get provider name of the plugin
   */


  AWSS3Provider.prototype.getProviderName = function () {
    return AWSS3Provider.PROVIDER_NAME;
  };
  /**
   * Configure Storage part with aws configuration
   * @param {Object} config - Configuration of the Storage
   * @return {Object} - Current configuration
   */


  AWSS3Provider.prototype.configure = function (config) {
    logger.debug('configure Storage', config);
    if (!config) return this._config;
    var amplifyConfig = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_8__.Parser.parseMobilehubConfig(config);
    this._config = Object.assign({}, this._config, amplifyConfig.Storage);

    if (!this._config.bucket) {
      logger.debug('Do not have bucket yet');
    }

    return this._config;
  };

  AWSS3Provider.prototype.startResumableUpload = function (addTaskInput, config) {
    var s3Client = addTaskInput.s3Client,
        emitter = addTaskInput.emitter,
        key = addTaskInput.key,
        file = addTaskInput.file,
        params = addTaskInput.params;
    var progressCallback = config.progressCallback,
        completeCallback = config.completeCallback,
        errorCallback = config.errorCallback,
        _a = config.track,
        track = _a === void 0 ? false : _a;

    if (!(file instanceof Blob)) {
      throw new Error(_common_StorageErrorStrings__WEBPACK_IMPORTED_MODULE_9__.StorageErrorStrings.INVALID_BLOB);
    }

    emitter.on(_AWSS3UploadTask__WEBPACK_IMPORTED_MODULE_10__.TaskEvents.UPLOAD_PROGRESS, function (event) {
      if (progressCallback) {
        if (typeof progressCallback === 'function') {
          progressCallback(event);
        } else {
          logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);
        }
      }
    });
    emitter.on(_AWSS3UploadTask__WEBPACK_IMPORTED_MODULE_10__.TaskEvents.UPLOAD_COMPLETE, function (event) {
      if (completeCallback) {
        if (typeof completeCallback === 'function') {
          completeCallback(event);
        } else {
          logger.warn('completeCallback should be a function, not a ' + typeof completeCallback);
        }
      }
    });
    emitter.on(_AWSS3UploadTask__WEBPACK_IMPORTED_MODULE_10__.TaskEvents.ERROR, function (err) {
      if (errorCallback) {
        if (typeof errorCallback === 'function') {
          errorCallback(err);
        } else {
          logger.warn('errorCallback should be a function, not a ' + typeof errorCallback);
        }
      }
    }); // we want to keep this function sync so we defer this promise to AWSS3UploadTask to resolve when it's needed
    // when its doing a final check with _listSingleFile function

    var prefixPromise = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__.Credentials.get().then(function (credentials) {
      var cred = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__.Credentials.shear(credentials);
      return (0,_common_S3ClientUtils__WEBPACK_IMPORTED_MODULE_12__.getPrefix)(__assign(__assign({}, config), {
        credentials: cred
      }));
    });
    var task = new _AWSS3UploadTask__WEBPACK_IMPORTED_MODULE_10__.AWSS3UploadTask({
      s3Client: s3Client,
      file: file,
      emitter: emitter,
      level: config.level,
      storage: this._storage,
      params: params,
      prefixPromise: prefixPromise
    });
    (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__.dispatchStorageEvent)(track, 'upload', {
      method: 'put',
      result: 'success'
    }, null, "Upload Task created successfully for " + key); // automatically start the upload task

    task.resume();
    return task;
  };
  /**
   * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across
   * different level or identityId (if source object's level is 'protected').
   *
   * @async
   * @param {S3CopySource} src - Key and optionally access level and identityId of the source object.
   * @param {S3CopyDestination} dest - Key and optionally access level of the destination object.
   * @param {S3ProviderCopyConfig} [config] - Optional configuration for s3 commands.
   * @return {Promise<S3ProviderCopyOutput>} The key of the copied object.
   */


  AWSS3Provider.prototype.copy = function (src, dest, config) {
    return __awaiter(this, void 0, void 0, function () {
      var credentialsOK, opt, acl, bucket, cacheControl, expires, track, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, _a, srcLevel, srcIdentityId, srcKey, _b, destLevel, destKey, srcPrefix, destPrefix, finalSrcKey, finalDestKey, params, s3, error_1;

      return __generator(this, function (_c) {
        switch (_c.label) {
          case 0:
            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 1:
            credentialsOK = _c.sent();

            if (!credentialsOK || !this._isWithCredentials(this._config)) {
              throw new Error(_common_StorageErrorStrings__WEBPACK_IMPORTED_MODULE_9__.StorageErrorStrings.NO_CREDENTIALS);
            }

            opt = Object.assign({}, this._config, config);
            acl = opt.acl, bucket = opt.bucket, cacheControl = opt.cacheControl, expires = opt.expires, track = opt.track, serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;
            _a = src.level, srcLevel = _a === void 0 ? DEFAULT_STORAGE_LEVEL : _a, srcIdentityId = src.identityId, srcKey = src.key;
            _b = dest.level, destLevel = _b === void 0 ? DEFAULT_STORAGE_LEVEL : _b, destKey = dest.key;

            if (!srcKey || typeof srcKey !== 'string') {
              throw new Error(_common_StorageErrorStrings__WEBPACK_IMPORTED_MODULE_9__.StorageErrorStrings.NO_SRC_KEY);
            }

            if (!destKey || typeof destKey !== 'string') {
              throw new Error(_common_StorageErrorStrings__WEBPACK_IMPORTED_MODULE_9__.StorageErrorStrings.NO_DEST_KEY);
            }

            if (srcLevel !== 'protected' && srcIdentityId) {
              logger.warn("You may copy files from another user if the source level is \"protected\", currently it's " + srcLevel);
            }

            srcPrefix = this._prefix(__assign(__assign(__assign({}, opt), {
              level: srcLevel
            }), srcIdentityId && {
              identityId: srcIdentityId
            }));
            destPrefix = this._prefix(__assign(__assign({}, opt), {
              level: destLevel
            }));
            finalSrcKey = bucket + "/" + srcPrefix + srcKey;
            finalDestKey = "" + destPrefix + destKey;
            logger.debug("copying " + finalSrcKey + " to " + finalDestKey);
            params = {
              Bucket: bucket,
              CopySource: finalSrcKey,
              Key: finalDestKey,
              // Copies over metadata like contentType as well
              MetadataDirective: 'COPY'
            };
            if (cacheControl) params.CacheControl = cacheControl;
            if (expires) params.Expires = expires;

            if (serverSideEncryption) {
              params.ServerSideEncryption = serverSideEncryption;
            }

            if (SSECustomerAlgorithm) {
              params.SSECustomerAlgorithm = SSECustomerAlgorithm;
            }

            if (SSECustomerKey) {
              params.SSECustomerKey = SSECustomerKey;
            }

            if (SSECustomerKeyMD5) {
              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;
            }

            if (SSEKMSKeyId) {
              params.SSEKMSKeyId = SSEKMSKeyId;
            }

            if (acl) params.ACL = acl;
            s3 = this._createNewS3Client(opt);
            _c.label = 2;

          case 2:
            _c.trys.push([2, 4,, 5]);

            return [4
            /*yield*/
            , s3.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_14__.CopyObjectCommand(params))];

          case 3:
            _c.sent();

            (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__.dispatchStorageEvent)(track, 'copy', {
              method: 'copy',
              result: 'success'
            }, null, "Copy success from " + srcKey + " to " + destKey);
            return [2
            /*return*/
            , {
              key: destKey
            }];

          case 4:
            error_1 = _c.sent();
            (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__.dispatchStorageEvent)(track, 'copy', {
              method: 'copy',
              result: 'failed'
            }, null, "Copy failed from " + srcKey + " to " + destKey);
            throw error_1;

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSS3Provider.prototype.get = function (key, config) {
    return __awaiter(this, void 0, void 0, function () {
      var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, progressCallback, prefix, final_key, emitter, s3, params, getObjectCommand, response, error_2, signer, request, url, _a, error_3;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 1:
            credentialsOK = _b.sent();

            if (!credentialsOK || !this._isWithCredentials(this._config)) {
              throw new Error(_common_StorageErrorStrings__WEBPACK_IMPORTED_MODULE_9__.StorageErrorStrings.NO_CREDENTIALS);
            }

            opt = Object.assign({}, this._config, config);
            bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, progressCallback = opt.progressCallback;
            prefix = this._prefix(opt);
            final_key = prefix + key;
            emitter = new events__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
            s3 = this._createNewS3Client(opt, emitter);
            logger.debug('get ' + key + ' from ' + final_key);
            params = {
              Bucket: bucket,
              Key: final_key
            }; // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property

            if (cacheControl) params.ResponseCacheControl = cacheControl;
            if (contentDisposition) params.ResponseContentDisposition = contentDisposition;
            if (contentEncoding) params.ResponseContentEncoding = contentEncoding;
            if (contentLanguage) params.ResponseContentLanguage = contentLanguage;
            if (contentType) params.ResponseContentType = contentType;

            if (SSECustomerAlgorithm) {
              params.SSECustomerAlgorithm = SSECustomerAlgorithm;
            }

            if (SSECustomerKey) {
              params.SSECustomerKey = SSECustomerKey;
            }

            if (SSECustomerKeyMD5) {
              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;
            }

            if (!(download === true)) return [3
            /*break*/
            , 5];
            getObjectCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_15__.GetObjectCommand(params);
            _b.label = 2;

          case 2:
            _b.trys.push([2, 4,, 5]);

            if (progressCallback) {
              if (typeof progressCallback === 'function') {
                emitter.on(_axios_http_handler__WEBPACK_IMPORTED_MODULE_16__.SEND_DOWNLOAD_PROGRESS_EVENT, function (progress) {
                  progressCallback(progress);
                });
              } else {
                logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);
              }
            }

            return [4
            /*yield*/
            , s3.send(getObjectCommand)];

          case 3:
            response = _b.sent();
            emitter.removeAllListeners(_axios_http_handler__WEBPACK_IMPORTED_MODULE_16__.SEND_DOWNLOAD_PROGRESS_EVENT);
            (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__.dispatchStorageEvent)(track, 'download', {
              method: 'get',
              result: 'success'
            }, {
              fileSize: Number(response.Body['size'] || response.Body['length'])
            }, "Download success for " + key);
            return [2
            /*return*/
            , response];

          case 4:
            error_2 = _b.sent();
            (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__.dispatchStorageEvent)(track, 'download', {
              method: 'get',
              result: 'failed'
            }, null, "Download failed with " + error_2.message);
            throw error_2;

          case 5:
            _b.trys.push([5, 8,, 9]);

            signer = new _aws_sdk_s3_request_presigner__WEBPACK_IMPORTED_MODULE_2__.S3RequestPresigner(__assign({}, s3.config));
            return [4
            /*yield*/
            , (0,_aws_sdk_util_create_request__WEBPACK_IMPORTED_MODULE_1__.createRequest)(s3, new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_15__.GetObjectCommand(params))];

          case 6:
            request = _b.sent();
            _a = _aws_sdk_util_format_url__WEBPACK_IMPORTED_MODULE_0__.formatUrl;
            return [4
            /*yield*/
            , signer.presign(request, {
              expiresIn: expires || DEFAULT_PRESIGN_EXPIRATION
            })];

          case 7:
            url = _a.apply(void 0, [_b.sent()]);
            (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__.dispatchStorageEvent)(track, 'getSignedUrl', {
              method: 'get',
              result: 'success'
            }, null, "Signed URL: " + url);
            return [2
            /*return*/
            , url];

          case 8:
            error_3 = _b.sent();
            logger.warn('get signed url error', error_3);
            (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__.dispatchStorageEvent)(track, 'getSignedUrl', {
              method: 'get',
              result: 'failed'
            }, null, "Could not get a signed URL for " + key);
            throw error_3;

          case 9:
            return [2
            /*return*/
            ];
        }
      });
    });
  };
  /**
   * Put a file in S3 bucket specified to configure method
   * @param key - key of the object
   * @param object - File to be put in Amazon S3 bucket
   * @param [config] - Optional configuration for the underlying S3 command
   * @return an instance of AWSS3UploadTask or a promise that resolves to an object with the new object's key on
   * success.
   */


  AWSS3Provider.prototype.put = function (key, object, config) {
    var opt = Object.assign({}, this._config, config);
    var bucket = opt.bucket,
        track = opt.track,
        progressCallback = opt.progressCallback,
        level = opt.level,
        resumable = opt.resumable;
    var contentType = opt.contentType,
        contentDisposition = opt.contentDisposition,
        contentEncoding = opt.contentEncoding,
        cacheControl = opt.cacheControl,
        expires = opt.expires,
        metadata = opt.metadata,
        tagging = opt.tagging,
        acl = opt.acl;
    var serverSideEncryption = opt.serverSideEncryption,
        SSECustomerAlgorithm = opt.SSECustomerAlgorithm,
        SSECustomerKey = opt.SSECustomerKey,
        SSECustomerKeyMD5 = opt.SSECustomerKeyMD5,
        SSEKMSKeyId = opt.SSEKMSKeyId;
    var type = contentType ? contentType : 'binary/octet-stream';
    var params = {
      Bucket: bucket,
      Key: key,
      Body: object,
      ContentType: type
    };

    if (cacheControl) {
      params.CacheControl = cacheControl;
    }

    if (contentDisposition) {
      params.ContentDisposition = contentDisposition;
    }

    if (contentEncoding) {
      params.ContentEncoding = contentEncoding;
    }

    if (expires) {
      params.Expires = expires;
    }

    if (metadata) {
      params.Metadata = metadata;
    }

    if (tagging) {
      params.Tagging = tagging;
    }

    if (serverSideEncryption) {
      params.ServerSideEncryption = serverSideEncryption;
    }

    if (SSECustomerAlgorithm) {
      params.SSECustomerAlgorithm = SSECustomerAlgorithm;
    }

    if (SSECustomerKey) {
      params.SSECustomerKey = SSECustomerKey;
    }

    if (SSECustomerKeyMD5) {
      params.SSECustomerKeyMD5 = SSECustomerKeyMD5;
    }

    if (SSEKMSKeyId) {
      params.SSEKMSKeyId = SSEKMSKeyId;
    }

    var emitter = new events__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
    var uploader = new _AWSS3ProviderManagedUpload__WEBPACK_IMPORTED_MODULE_17__.AWSS3ProviderManagedUpload(params, opt, emitter);

    if (acl) {
      params.ACL = acl;
    }

    if (resumable === true) {
      var s3Client = this._createNewS3Client(opt); // we are using aws sdk middleware to inject the prefix to key, this way we don't have to call
      // this._ensureCredentials() which allows us to make this function sync so we can return non-Promise like UploadTask


      s3Client.middlewareStack.add((0,_common_S3ClientUtils__WEBPACK_IMPORTED_MODULE_12__.createPrefixMiddleware)(opt, key), _common_S3ClientUtils__WEBPACK_IMPORTED_MODULE_12__.prefixMiddlewareOptions);
      var addTaskInput = {
        bucket: bucket,
        key: key,
        s3Client: s3Client,
        file: object,
        emitter: emitter,
        accessLevel: level,
        params: params
      }; // explicitly asserting the type here as Typescript could not infer that resumable is of type true

      return this.startResumableUpload(addTaskInput, config);
    }

    try {
      if (progressCallback) {
        if (typeof progressCallback === 'function') {
          emitter.on(_axios_http_handler__WEBPACK_IMPORTED_MODULE_16__.SEND_UPLOAD_PROGRESS_EVENT, function (progress) {
            progressCallback(progress);
          });
        } else {
          logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);
        }
      }

      return uploader.upload().then(function (response) {
        logger.debug('upload result', response);
        (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__.dispatchStorageEvent)(track, 'upload', {
          method: 'put',
          result: 'success'
        }, null, "Upload success for " + key);
        return {
          key: key
        };
      });
    } catch (error) {
      logger.warn('error uploading', error);
      (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__.dispatchStorageEvent)(track, 'upload', {
        method: 'put',
        result: 'failed'
      }, null, "Error uploading " + key);
      throw error;
    }
  };
  /**
   * Remove the object for specified key
   * @param {string} key - key of the object
   * @param {S3ProviderRemoveConfig} [config] - Optional configuration for the underlying S3 command
   * @return {Promise<S3ProviderRemoveOutput>} - Promise resolves upon successful removal of the object
   */


  AWSS3Provider.prototype.remove = function (key, config) {
    return __awaiter(this, void 0, void 0, function () {
      var credentialsOK, opt, bucket, track, prefix, final_key, s3, params, deleteObjectCommand, response, error_4;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 1:
            credentialsOK = _a.sent();

            if (!credentialsOK || !this._isWithCredentials(this._config)) {
              throw new Error(_common_StorageErrorStrings__WEBPACK_IMPORTED_MODULE_9__.StorageErrorStrings.NO_CREDENTIALS);
            }

            opt = Object.assign({}, this._config, config);
            bucket = opt.bucket, track = opt.track;
            prefix = this._prefix(opt);
            final_key = prefix + key;
            s3 = this._createNewS3Client(opt);
            logger.debug('remove ' + key + ' from ' + final_key);
            params = {
              Bucket: bucket,
              Key: final_key
            };
            deleteObjectCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_18__.DeleteObjectCommand(params);
            _a.label = 2;

          case 2:
            _a.trys.push([2, 4,, 5]);

            return [4
            /*yield*/
            , s3.send(deleteObjectCommand)];

          case 3:
            response = _a.sent();
            (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__.dispatchStorageEvent)(track, 'delete', {
              method: 'remove',
              result: 'success'
            }, null, "Deleted " + key + " successfully");
            return [2
            /*return*/
            , response];

          case 4:
            error_4 = _a.sent();
            (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__.dispatchStorageEvent)(track, 'delete', {
              method: 'remove',
              result: 'failed'
            }, null, "Deletion of " + key + " failed with " + error_4);
            throw error_4;

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  };
  /**
   * List bucket objects relative to the level and prefix specified
   * @param {string} path - the path that contains objects
   * @param {S3ProviderListConfig} [config] - Optional configuration for the underlying S3 command
   * @return {Promise<S3ProviderListOutput>} - Promise resolves to list of keys, eTags, lastModified and file size for
   * all objects in path
   */


  AWSS3Provider.prototype.list = function (path, config) {
    return __awaiter(this, void 0, void 0, function () {
      var credentialsOK, opt, bucket, track, maxKeys, prefix, final_path, s3, params, listObjectsCommand, response, list, error_5;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this._ensureCredentials()];

          case 1:
            credentialsOK = _a.sent();

            if (!credentialsOK || !this._isWithCredentials(this._config)) {
              throw new Error(_common_StorageErrorStrings__WEBPACK_IMPORTED_MODULE_9__.StorageErrorStrings.NO_CREDENTIALS);
            }

            opt = Object.assign({}, this._config, config);
            bucket = opt.bucket, track = opt.track, maxKeys = opt.maxKeys;
            prefix = this._prefix(opt);
            final_path = prefix + path;
            s3 = this._createNewS3Client(opt);
            logger.debug('list ' + path + ' from ' + final_path);
            params = {
              Bucket: bucket,
              Prefix: final_path,
              MaxKeys: maxKeys
            };
            listObjectsCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_19__.ListObjectsCommand(params);
            _a.label = 2;

          case 2:
            _a.trys.push([2, 4,, 5]);

            return [4
            /*yield*/
            , s3.send(listObjectsCommand)];

          case 3:
            response = _a.sent();
            list = [];

            if (response && response.Contents) {
              list = response.Contents.map(function (item) {
                return {
                  key: item.Key.substr(prefix.length),
                  eTag: item.ETag,
                  lastModified: item.LastModified,
                  size: item.Size
                };
              });
            }

            (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__.dispatchStorageEvent)(track, 'list', {
              method: 'list',
              result: 'success'
            }, null, list.length + " items returned from list operation");
            logger.debug('list', list);
            return [2
            /*return*/
            , list];

          case 4:
            error_5 = _a.sent();
            logger.warn('list error', error_5);
            (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_13__.dispatchStorageEvent)(track, 'list', {
              method: 'list',
              result: 'failed'
            }, null, "Listing items failed: " + error_5.message);
            throw error_5;

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSS3Provider.prototype._ensureCredentials = function () {
    return __awaiter(this, void 0, void 0, function () {
      var credentials, cred, error_6;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            _a.trys.push([0, 2,, 3]);

            return [4
            /*yield*/
            , _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__.Credentials.get()];

          case 1:
            credentials = _a.sent();
            if (!credentials) return [2
            /*return*/
            , false];
            cred = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__.Credentials.shear(credentials);
            logger.debug('set credentials for storage', cred);
            this._config.credentials = cred;
            return [2
            /*return*/
            , true];

          case 2:
            error_6 = _a.sent();
            logger.warn('ensure credentials error', error_6);
            return [2
            /*return*/
            , false];

          case 3:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSS3Provider.prototype._isWithCredentials = function (config) {
    return typeof config === 'object' && config.hasOwnProperty('credentials');
  };

  AWSS3Provider.prototype._prefix = function (config) {
    var credentials = config.credentials,
        level = config.level;
    var customPrefix = config.customPrefix || {};
    var identityId = config.identityId || credentials.identityId;
    var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') + identityId + '/';
    var protectedPath = (customPrefix.protected !== undefined ? customPrefix.protected : 'protected/') + identityId + '/';
    var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';

    switch (level) {
      case 'private':
        return privatePath;

      case 'protected':
        return protectedPath;

      default:
        return publicPath;
    }
  };
  /**
   * Creates an S3 client with new V3 aws sdk
   */


  AWSS3Provider.prototype._createNewS3Client = function (config, emitter) {
    var s3client = (0,_common_S3ClientUtils__WEBPACK_IMPORTED_MODULE_12__.createS3Client)(config, emitter);
    s3client.middlewareStack.add((0,_common_S3ClientUtils__WEBPACK_IMPORTED_MODULE_12__.autoAdjustClockskewMiddleware)(s3client.config), _common_S3ClientUtils__WEBPACK_IMPORTED_MODULE_12__.autoAdjustClockskewMiddlewareOptions);
    return s3client;
  };

  AWSS3Provider.CATEGORY = 'Storage';
  AWSS3Provider.PROVIDER_NAME = 'AWSS3';
  return AWSS3Provider;
}();


/**
 * @deprecated use named import
 */

/* harmony default export */ __webpack_exports__["default"] = (AWSS3Provider);

/***/ }),

/***/ 50835:
/*!*******************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3ProviderManagedUpload.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AWSS3ProviderManagedUpload": function() { return /* binding */ AWSS3ProviderManagedUpload; }
/* harmony export */ });
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 4391);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 1346);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 45677);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 10);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 59549);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 65674);
/* harmony import */ var _axios_http_handler__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./axios-http-handler */ 99836);
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ 87508);
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_S3ClientUtils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../common/S3ClientUtils */ 11624);
/*
 * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};






var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.ConsoleLogger('AWSS3ProviderManagedUpload');

var AWSS3ProviderManagedUpload = function () {
  function AWSS3ProviderManagedUpload(params, opts, emitter) {
    // Defaults
    this.minPartSize = 5 * 1024 * 1024; // in MB

    this.queueSize = 4; // Data for current upload

    this.body = null;
    this.params = null;
    this.opts = null;
    this.completedParts = [];
    this.cancel = false; // Progress reporting

    this.bytesUploaded = 0;
    this.totalBytesToUpload = 0;
    this.emitter = null;
    this.params = params;
    this.opts = opts;
    this.emitter = emitter;
    this.s3client = this._createNewS3Client(opts, emitter);
  }

  AWSS3ProviderManagedUpload.prototype.upload = function () {
    return __awaiter(this, void 0, void 0, function () {
      var _a, putObjectCommand, uploadId, numberOfPartsToUpload, parts, start;

      var _this = this;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            _a = this;
            return [4
            /*yield*/
            , this.validateAndSanitizeBody(this.params.Body)];

          case 1:
            _a.body = _b.sent();
            this.totalBytesToUpload = this.byteLength(this.body);
            if (!(this.totalBytesToUpload <= this.minPartSize)) return [3
            /*break*/
            , 2]; // Multipart upload is not required. Upload the sanitized body as is

            this.params.Body = this.body;
            putObjectCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_2__.PutObjectCommand(this.params);
            return [2
            /*return*/
            , this.s3client.send(putObjectCommand)];

          case 2:
            return [4
            /*yield*/
            , this.createMultiPartUpload()];

          case 3:
            uploadId = _b.sent();
            numberOfPartsToUpload = Math.ceil(this.totalBytesToUpload / this.minPartSize);
            parts = this.createParts();
            start = 0;
            _b.label = 4;

          case 4:
            if (!(start < numberOfPartsToUpload)) return [3
            /*break*/
            , 9];
            /** This first block will try to cancel the upload if the cancel
             *	request came before any parts uploads have started.
             **/

            return [4
            /*yield*/
            , this.checkIfUploadCancelled(uploadId)];

          case 5:
            /** This first block will try to cancel the upload if the cancel
             *	request came before any parts uploads have started.
             **/
            _b.sent(); // Upload as many as `queueSize` parts simultaneously


            return [4
            /*yield*/
            , this.uploadParts(uploadId, parts.slice(start, start + this.queueSize))];

          case 6:
            // Upload as many as `queueSize` parts simultaneously
            _b.sent();
            /** Call cleanup a second time in case there were part upload requests
             *  in flight. This is to ensure that all parts are cleaned up.
             */


            return [4
            /*yield*/
            , this.checkIfUploadCancelled(uploadId)];

          case 7:
            /** Call cleanup a second time in case there were part upload requests
             *  in flight. This is to ensure that all parts are cleaned up.
             */
            _b.sent();

            _b.label = 8;

          case 8:
            start += this.queueSize;
            return [3
            /*break*/
            , 4];

          case 9:
            parts.map(function (part) {
              _this.removeEventListener(part);
            });
            return [4
            /*yield*/
            , this.finishMultiPartUpload(uploadId)];

          case 10:
            // Step 3: Finalize the upload such that S3 can recreate the file
            return [2
            /*return*/
            , _b.sent()];
        }
      });
    });
  };

  AWSS3ProviderManagedUpload.prototype.createParts = function () {
    var parts = [];

    for (var bodyStart = 0; bodyStart < this.totalBytesToUpload;) {
      var bodyEnd = Math.min(bodyStart + this.minPartSize, this.totalBytesToUpload);
      parts.push({
        bodyPart: this.body.slice(bodyStart, bodyEnd),
        partNumber: parts.length + 1,
        emitter: new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter(),
        _lastUploadedBytes: 0
      });
      bodyStart += this.minPartSize;
    }

    return parts;
  };

  AWSS3ProviderManagedUpload.prototype.createMultiPartUpload = function () {
    return __awaiter(this, void 0, void 0, function () {
      var createMultiPartUploadCommand, response;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            createMultiPartUploadCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_3__.CreateMultipartUploadCommand(this.params);
            return [4
            /*yield*/
            , this.s3client.send(createMultiPartUploadCommand)];

          case 1:
            response = _a.sent();
            logger.debug(response.UploadId);
            return [2
            /*return*/
            , response.UploadId];
        }
      });
    });
  };
  /**
   * @private Not to be extended outside of tests
   * @VisibleFotTesting
   */


  AWSS3ProviderManagedUpload.prototype.uploadParts = function (uploadId, parts) {
    return __awaiter(this, void 0, void 0, function () {
      var allResults, i, error_1;

      var _this = this;

      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            _a.trys.push([0, 2,, 3]);

            return [4
            /*yield*/
            , Promise.all(parts.map(function (part) {
              return __awaiter(_this, void 0, void 0, function () {
                var options, _a, Key, Bucket, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, res;

                return __generator(this, function (_b) {
                  switch (_b.label) {
                    case 0:
                      this.setupEventListener(part);
                      options = {
                        emitter: part.emitter
                      };
                      _a = this.params, Key = _a.Key, Bucket = _a.Bucket, SSECustomerAlgorithm = _a.SSECustomerAlgorithm, SSECustomerKey = _a.SSECustomerKey, SSECustomerKeyMD5 = _a.SSECustomerKeyMD5;
                      return [4
                      /*yield*/
                      , this.s3client.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_4__.UploadPartCommand(__assign(__assign(__assign({
                        PartNumber: part.partNumber,
                        Body: part.bodyPart,
                        UploadId: uploadId,
                        Key: Key,
                        Bucket: Bucket
                      }, SSECustomerAlgorithm && {
                        SSECustomerAlgorithm: SSECustomerAlgorithm
                      }), SSECustomerKey && {
                        SSECustomerKey: SSECustomerKey
                      }), SSECustomerKeyMD5 && {
                        SSECustomerKeyMD5: SSECustomerKeyMD5
                      })), options)];

                    case 1:
                      res = _b.sent();
                      return [2
                      /*return*/
                      , res];
                  }
                });
              });
            }))];

          case 1:
            allResults = _a.sent(); // The order of resolved promises is the same as input promise order.

            for (i = 0; i < allResults.length; i++) {
              this.completedParts.push({
                PartNumber: parts[i].partNumber,
                ETag: allResults[i].ETag
              });
            }

            return [3
            /*break*/
            , 3];

          case 2:
            error_1 = _a.sent();
            logger.error('error happened while uploading a part. Cancelling the multipart upload', error_1);
            this.cancelUpload();
            return [2
            /*return*/
            ];

          case 3:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSS3ProviderManagedUpload.prototype.finishMultiPartUpload = function (uploadId) {
    return __awaiter(this, void 0, void 0, function () {
      var input, completeUploadCommand, data, error_2;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            input = {
              Bucket: this.params.Bucket,
              Key: this.params.Key,
              UploadId: uploadId,
              MultipartUpload: {
                Parts: this.completedParts
              }
            };
            completeUploadCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_5__.CompleteMultipartUploadCommand(input);
            _a.label = 1;

          case 1:
            _a.trys.push([1, 3,, 4]);

            return [4
            /*yield*/
            , this.s3client.send(completeUploadCommand)];

          case 2:
            data = _a.sent();
            return [2
            /*return*/
            , data.Key];

          case 3:
            error_2 = _a.sent();
            logger.error('error happened while finishing the upload. Cancelling the multipart upload', error_2);
            this.cancelUpload();
            return [2
            /*return*/
            ];

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSS3ProviderManagedUpload.prototype.checkIfUploadCancelled = function (uploadId) {
    return __awaiter(this, void 0, void 0, function () {
      var errorMessage, error_3;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (!this.cancel) return [3
            /*break*/
            , 5];
            errorMessage = 'Upload was cancelled.';
            _a.label = 1;

          case 1:
            _a.trys.push([1, 3,, 4]);

            return [4
            /*yield*/
            , this.cleanup(uploadId)];

          case 2:
            _a.sent();

            return [3
            /*break*/
            , 4];

          case 3:
            error_3 = _a.sent();
            errorMessage += " " + error_3.message;
            return [3
            /*break*/
            , 4];

          case 4:
            throw new Error(errorMessage);

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSS3ProviderManagedUpload.prototype.cancelUpload = function () {
    this.cancel = true;
  };

  AWSS3ProviderManagedUpload.prototype.cleanup = function (uploadId) {
    return __awaiter(this, void 0, void 0, function () {
      var input, data;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            // Reset this's state
            this.body = null;
            this.completedParts = [];
            this.bytesUploaded = 0;
            this.totalBytesToUpload = 0;
            input = {
              Bucket: this.params.Bucket,
              Key: this.params.Key,
              UploadId: uploadId
            };
            return [4
            /*yield*/
            , this.s3client.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_6__.AbortMultipartUploadCommand(input))];

          case 1:
            _a.sent();

            return [4
            /*yield*/
            , this.s3client.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_7__.ListPartsCommand(input))];

          case 2:
            data = _a.sent();

            if (data && data.Parts && data.Parts.length > 0) {
              throw new Error('Multi Part upload clean up failed');
            }

            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSS3ProviderManagedUpload.prototype.removeEventListener = function (part) {
    part.emitter.removeAllListeners(_axios_http_handler__WEBPACK_IMPORTED_MODULE_8__.SEND_UPLOAD_PROGRESS_EVENT);
    part.emitter.removeAllListeners(_axios_http_handler__WEBPACK_IMPORTED_MODULE_8__.SEND_DOWNLOAD_PROGRESS_EVENT);
  };

  AWSS3ProviderManagedUpload.prototype.setupEventListener = function (part) {
    var _this = this;

    part.emitter.on(_axios_http_handler__WEBPACK_IMPORTED_MODULE_8__.SEND_UPLOAD_PROGRESS_EVENT, function (progress) {
      _this.progressChanged(part.partNumber, progress.loaded - part._lastUploadedBytes);

      part._lastUploadedBytes = progress.loaded;
    });
  };

  AWSS3ProviderManagedUpload.prototype.progressChanged = function (partNumber, incrementalUpdate) {
    this.bytesUploaded += incrementalUpdate;
    this.emitter.emit(_axios_http_handler__WEBPACK_IMPORTED_MODULE_8__.SEND_UPLOAD_PROGRESS_EVENT, {
      loaded: this.bytesUploaded,
      total: this.totalBytesToUpload,
      part: partNumber,
      key: this.params.Key
    });
  };

  AWSS3ProviderManagedUpload.prototype.byteLength = function (input) {
    if (input === null || input === undefined) return 0;

    if (typeof input.byteLength === 'number') {
      return input.byteLength;
    } else if (typeof input.length === 'number') {
      return input.length;
    } else if (typeof input.size === 'number') {
      return input.size;
    } else if (typeof input.path === 'string') {
      /* NodeJs Support
      return require('fs').lstatSync(input.path).size;
      */
    } else {
      throw new Error('Cannot determine length of ' + input);
    }
  };

  AWSS3ProviderManagedUpload.prototype.validateAndSanitizeBody = function (body) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        if (this.isGenericObject(body)) {
          // Any javascript object
          return [2
          /*return*/
          , JSON.stringify(body)];
        } else {
          // Files, arrayBuffer etc
          return [2
          /*return*/
          , body];
        }

        return [2
        /*return*/
        ];
      });
    });
  };

  AWSS3ProviderManagedUpload.prototype.isGenericObject = function (body) {
    if (body !== null && typeof body === 'object') {
      try {
        return !(this.byteLength(body) >= 0);
      } catch (error) {
        // If we cannot determine the length of the body, consider it
        // as a generic object and upload a stringified version of it
        return true;
      }
    }

    return false;
  };

  AWSS3ProviderManagedUpload.prototype._createNewS3Client = function (config, emitter) {
    var s3client = (0,_common_S3ClientUtils__WEBPACK_IMPORTED_MODULE_9__.createS3Client)(config, emitter);
    s3client.middlewareStack.add((0,_common_S3ClientUtils__WEBPACK_IMPORTED_MODULE_9__.createPrefixMiddleware)(this.opts, this.params.Key), _common_S3ClientUtils__WEBPACK_IMPORTED_MODULE_9__.prefixMiddlewareOptions);
    s3client.middlewareStack.add((0,_common_S3ClientUtils__WEBPACK_IMPORTED_MODULE_9__.autoAdjustClockskewMiddleware)(s3client.config), _common_S3ClientUtils__WEBPACK_IMPORTED_MODULE_9__.autoAdjustClockskewMiddlewareOptions);
    return s3client;
  };

  return AWSS3ProviderManagedUpload;
}();



/***/ }),

/***/ 30445:
/*!********************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3UploadTask.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AWSS3UploadTaskState": function() { return /* binding */ AWSS3UploadTaskState; },
/* harmony export */   "TaskEvents": function() { return /* binding */ TaskEvents; },
/* harmony export */   "AWSS3UploadTask": function() { return /* binding */ AWSS3UploadTask; }
/* harmony export */ });
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 5777);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 65674);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 10);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 45677);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 1346);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 59549);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ 61172);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _common_StorageUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/StorageUtils */ 44393);
/* harmony import */ var _common_StorageErrorStrings__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/StorageErrorStrings */ 11316);
/* harmony import */ var _common_StorageConstants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/StorageConstants */ 72354);
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = undefined && undefined.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __read = undefined && undefined.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};

var __spread = undefined && undefined.__spread || function () {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read(arguments[i]));
  }

  return ar;
};







var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.ConsoleLogger('AWSS3UploadTask');
var AWSS3UploadTaskState;

(function (AWSS3UploadTaskState) {
  AWSS3UploadTaskState[AWSS3UploadTaskState["INIT"] = 0] = "INIT";
  AWSS3UploadTaskState[AWSS3UploadTaskState["IN_PROGRESS"] = 1] = "IN_PROGRESS";
  AWSS3UploadTaskState[AWSS3UploadTaskState["PAUSED"] = 2] = "PAUSED";
  AWSS3UploadTaskState[AWSS3UploadTaskState["CANCELLED"] = 3] = "CANCELLED";
  AWSS3UploadTaskState[AWSS3UploadTaskState["COMPLETED"] = 4] = "COMPLETED";
})(AWSS3UploadTaskState || (AWSS3UploadTaskState = {}));

var TaskEvents;

(function (TaskEvents) {
  TaskEvents["CANCEL"] = "cancel";
  TaskEvents["UPLOAD_COMPLETE"] = "uploadComplete";
  TaskEvents["UPLOAD_PROGRESS"] = "uploadPartProgress";
  TaskEvents["ERROR"] = "error";
})(TaskEvents || (TaskEvents = {})); // maximum number of parts per upload request according the S3 spec,
// see: https://docs.aws.amazon.com/AmazonS3/latest/userguide/qfacts.html


var MAX_PARTS = 10000; // 5MB in bytes

var PART_SIZE = 5 * 1024 * 1024;
var DEFAULT_QUEUE_SIZE = 4;

function comparePartNumber(a, b) {
  return a.PartNumber - b.PartNumber;
}

var AWSS3UploadTask = function () {
  function AWSS3UploadTask(_a) {
    var s3Client = _a.s3Client,
        file = _a.file,
        emitter = _a.emitter,
        storage = _a.storage,
        params = _a.params,
        level = _a.level,
        prefixPromise = _a.prefixPromise;
    this.partSize = PART_SIZE;
    this.queueSize = DEFAULT_QUEUE_SIZE;
    this.inProgress = [];
    this.completedParts = [];
    this.queued = [];
    this.bytesUploaded = 0;
    this.totalBytes = 0;
    this.state = AWSS3UploadTaskState.INIT;
    this.prefixPromise = prefixPromise;
    this.s3client = s3Client;
    this.s3client.middlewareStack.remove(_common_StorageConstants__WEBPACK_IMPORTED_MODULE_2__.SET_CONTENT_LENGTH_HEADER);
    this.storage = storage;
    this.storageSync = Promise.resolve();

    if (typeof this.storage['sync'] === 'function') {
      this.storageSync = this.storage['sync']();
    }

    this.params = params;
    this.file = file;
    this.totalBytes = this.file.size;
    this.bytesUploaded = 0;
    this.emitter = emitter;
    this.queued = [];
    this.fileId = this._getFileId(level);

    this._validateParams(); // event emitter will re-throw an error if an event emits an error unless there's a listener, attaching a no-op
    // function to it unless user adds their own onError callback


    this.emitter.on(TaskEvents.ERROR, function () {});
  }

  Object.defineProperty(AWSS3UploadTask.prototype, "percent", {
    get: function get() {
      return this.bytesUploaded / this.totalBytes * 100;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(AWSS3UploadTask.prototype, "isInProgress", {
    get: function get() {
      return this.state === AWSS3UploadTaskState.IN_PROGRESS;
    },
    enumerable: true,
    configurable: true
  });

  AWSS3UploadTask.prototype._listSingleFile = function (_a) {
    var key = _a.key,
        bucket = _a.bucket;
    return __awaiter(this, void 0, void 0, function () {
      var listObjectRes, _b, Contents, prefix, obj;

      return __generator(this, function (_c) {
        switch (_c.label) {
          case 0:
            return [4
            /*yield*/
            , this.s3client.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_3__.ListObjectsV2Command({
              Bucket: bucket,
              Prefix: key
            }))];

          case 1:
            listObjectRes = _c.sent();
            _b = listObjectRes.Contents, Contents = _b === void 0 ? [] : _b;
            return [4
            /*yield*/
            , this.prefixPromise];

          case 2:
            prefix = _c.sent();
            obj = Contents.find(function (o) {
              return o.Key === "" + prefix + key;
            });
            return [2
            /*return*/
            , obj];
        }
      });
    });
  };

  AWSS3UploadTask.prototype._getFileId = function (level) {
    // We should check if it's a File first because File is also instance of a Blob
    if ((0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_4__.isFile)(this.file)) {
      return [this.file.name, this.file.lastModified, this.file.size, this.file.type, this.params.Bucket, level, this.params.Key].join('-');
    } else {
      return [this.file.size, this.file.type, this.params.Bucket, level, this.params.Key].join('-');
    }
  };

  AWSS3UploadTask.prototype._findCachedUploadParts = function () {
    return __awaiter(this, void 0, void 0, function () {
      var uploadRequests, cachedUploadFileData, listPartsOutput;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this._listCachedUploadTasks()];

          case 1:
            uploadRequests = _a.sent();

            if (Object.keys(uploadRequests).length === 0 || !Object.prototype.hasOwnProperty.call(uploadRequests, this.fileId)) {
              return [2
              /*return*/
              , {
                parts: [],
                uploadId: null
              }];
            }

            cachedUploadFileData = uploadRequests[this.fileId];
            cachedUploadFileData.lastTouched = Date.now();
            this.storage.setItem(_common_StorageConstants__WEBPACK_IMPORTED_MODULE_2__.UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));
            return [4
            /*yield*/
            , this.s3client.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_5__.ListPartsCommand({
              Bucket: this.params.Bucket,
              Key: this.params.Key,
              UploadId: cachedUploadFileData.uploadId
            }))];

          case 2:
            listPartsOutput = _a.sent();
            return [2
            /*return*/
            , {
              parts: listPartsOutput.Parts || [],
              uploadId: cachedUploadFileData.uploadId
            }];
        }
      });
    });
  };

  AWSS3UploadTask.prototype._emitEvent = function (event, payload) {
    this.emitter.emit(event, payload);
  };

  AWSS3UploadTask.prototype._validateParams = function () {
    if (this.file.size / this.partSize > MAX_PARTS) {
      throw new Error("Too many parts. Number of parts is " + this.file.size / this.partSize + ", maximum is " + MAX_PARTS + ".");
    }
  };

  AWSS3UploadTask.prototype._listCachedUploadTasks = function () {
    return __awaiter(this, void 0, void 0, function () {
      var tasks;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this.storageSync];

          case 1:
            _a.sent();

            tasks = this.storage.getItem(_common_StorageConstants__WEBPACK_IMPORTED_MODULE_2__.UPLOADS_STORAGE_KEY) || '{}';
            return [2
            /*return*/
            , JSON.parse(tasks)];
        }
      });
    });
  };

  AWSS3UploadTask.prototype._cache = function (fileMetadata) {
    return __awaiter(this, void 0, void 0, function () {
      var uploadRequests;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this._listCachedUploadTasks()];

          case 1:
            uploadRequests = _a.sent();
            uploadRequests[this.fileId] = fileMetadata;
            this.storage.setItem(_common_StorageConstants__WEBPACK_IMPORTED_MODULE_2__.UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSS3UploadTask.prototype._isCached = function () {
    return __awaiter(this, void 0, void 0, function () {
      var _a, _b;

      return __generator(this, function (_c) {
        switch (_c.label) {
          case 0:
            _b = (_a = Object.prototype.hasOwnProperty).call;
            return [4
            /*yield*/
            , this._listCachedUploadTasks()];

          case 1:
            return [2
            /*return*/
            , _b.apply(_a, [_c.sent(), this.fileId])];
        }
      });
    });
  };

  AWSS3UploadTask.prototype._removeFromCache = function () {
    return __awaiter(this, void 0, void 0, function () {
      var uploadRequests;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this._listCachedUploadTasks()];

          case 1:
            uploadRequests = _a.sent();
            delete uploadRequests[this.fileId];
            this.storage.setItem(_common_StorageConstants__WEBPACK_IMPORTED_MODULE_2__.UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSS3UploadTask.prototype._onPartUploadCompletion = function (_a) {
    var eTag = _a.eTag,
        partNumber = _a.partNumber,
        chunk = _a.chunk;
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_b) {
        this.completedParts.push({
          ETag: eTag,
          PartNumber: partNumber
        });
        this.bytesUploaded += (0,_common_StorageUtils__WEBPACK_IMPORTED_MODULE_4__.byteLength)(chunk);

        this._emitEvent(TaskEvents.UPLOAD_PROGRESS, {
          loaded: this.bytesUploaded,
          total: this.totalBytes
        }); // Remove the completed item from the inProgress array


        this.inProgress = this.inProgress.filter(function (job) {
          return job.uploadPartInput.PartNumber !== partNumber;
        });
        if (this.queued.length && this.state !== AWSS3UploadTaskState.PAUSED) this._startNextPart();
        if (this._isDone()) this._completeUpload();
        return [2
        /*return*/
        ];
      });
    });
  };

  AWSS3UploadTask.prototype._completeUpload = function () {
    return __awaiter(this, void 0, void 0, function () {
      var err_1;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            _a.trys.push([0, 2,, 3]);

            return [4
            /*yield*/
            , this.s3client.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_6__.CompleteMultipartUploadCommand({
              Bucket: this.params.Bucket,
              Key: this.params.Key,
              UploadId: this.uploadId,
              MultipartUpload: {
                // Parts are not always completed in order, we need to manually sort them
                Parts: this.completedParts.sort(comparePartNumber)
              }
            }))];

          case 1:
            _a.sent();

            this._verifyFileSize();

            this._emitEvent(TaskEvents.UPLOAD_COMPLETE, {
              key: this.params.Bucket + "/" + this.params.Key
            });

            this._removeFromCache();

            this.state = AWSS3UploadTaskState.COMPLETED;
            return [3
            /*break*/
            , 3];

          case 2:
            err_1 = _a.sent();
            logger.error('error completing upload', err_1);

            this._emitEvent(TaskEvents.ERROR, err_1);

            return [3
            /*break*/
            , 3];

          case 3:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSS3UploadTask.prototype._makeUploadPartRequest = function (input, cancelTokenSource) {
    return __awaiter(this, void 0, void 0, function () {
      var res, err_2;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            _a.trys.push([0, 3,, 4]);

            return [4
            /*yield*/
            , this.s3client.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_7__.UploadPartCommand(input), {
              cancelTokenSource: cancelTokenSource
            })];

          case 1:
            res = _a.sent();
            return [4
            /*yield*/
            , this._onPartUploadCompletion({
              eTag: res.ETag,
              partNumber: input.PartNumber,
              chunk: input.Body
            })];

          case 2:
            _a.sent();

            return [3
            /*break*/
            , 4];

          case 3:
            err_2 = _a.sent();

            if (this.state === AWSS3UploadTaskState.PAUSED) {
              logger.log('upload paused');
            } else if (this.state === AWSS3UploadTaskState.CANCELLED) {
              logger.log('upload aborted');
            } else {
              logger.error('error starting next part of upload: ', err_2);
            } // axios' cancel will also throw an error, however we don't need to emit an event in that case as it's an
            // expected behavior


            if (!axios__WEBPACK_IMPORTED_MODULE_0___default().isCancel(err_2) && err_2.message !== _common_StorageErrorStrings__WEBPACK_IMPORTED_MODULE_8__.AWSS3ProviderUploadErrorStrings.UPLOAD_PAUSED_MESSAGE) {
              this._emitEvent(TaskEvents.ERROR, err_2);

              this.pause();
            }

            return [3
            /*break*/
            , 4];

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSS3UploadTask.prototype._startNextPart = function () {
    if (this.queued.length > 0 && this.state !== AWSS3UploadTaskState.PAUSED) {
      var cancelTokenSource = axios__WEBPACK_IMPORTED_MODULE_0___default().CancelToken.source();
      var nextPart = this.queued.shift();
      this.inProgress.push({
        uploadPartInput: nextPart,
        s3Request: this._makeUploadPartRequest(nextPart, cancelTokenSource),
        cancel: cancelTokenSource.cancel
      });
    }
  };
  /**
   * Verify on S3 side that the file size matches the one on the client side.
   *
   * @async
   * @throws throws an error if the file size does not match between local copy of the file and the file on s3.
   */


  AWSS3UploadTask.prototype._verifyFileSize = function () {
    return __awaiter(this, void 0, void 0, function () {
      var obj, valid;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this._listSingleFile({
              key: this.params.Key,
              bucket: this.params.Bucket
            })];

          case 1:
            obj = _a.sent();
            valid = Boolean(obj && obj.Size === this.file.size);

            if (!valid) {
              throw new Error('File size does not match between local file and file on s3');
            }

            return [2
            /*return*/
            , valid];
        }
      });
    });
  };

  AWSS3UploadTask.prototype._isDone = function () {
    return !this.queued.length && !this.inProgress.length && this.bytesUploaded === this.totalBytes;
  };

  AWSS3UploadTask.prototype._createParts = function () {
    var size = this.file.size;
    var parts = [];

    for (var bodyStart = 0; bodyStart < size;) {
      var bodyEnd = Math.min(bodyStart + this.partSize, size);
      parts.push({
        Body: this.file.slice(bodyStart, bodyEnd),
        Key: this.params.Key,
        Bucket: this.params.Bucket,
        PartNumber: parts.length + 1,
        UploadId: this.uploadId
      });
      bodyStart += this.partSize;
    }

    return parts;
  };

  AWSS3UploadTask.prototype._initCachedUploadParts = function (cachedParts) {
    this.bytesUploaded += cachedParts.reduce(function (acc, part) {
      return acc + part.Size;
    }, 0); // Find the set of part numbers that have already been uploaded

    var uploadedPartNumSet = new Set(cachedParts.map(function (part) {
      return part.PartNumber;
    }));
    this.queued = this.queued.filter(function (part) {
      return !uploadedPartNumSet.has(part.PartNumber);
    });
    this.completedParts = cachedParts.map(function (part) {
      return {
        PartNumber: part.PartNumber,
        ETag: part.ETag
      };
    });

    this._emitEvent(TaskEvents.UPLOAD_PROGRESS, {
      loaded: this.bytesUploaded,
      total: this.totalBytes
    });
  };

  AWSS3UploadTask.prototype._initMultipartUpload = function () {
    return __awaiter(this, void 0, void 0, function () {
      var res;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this.s3client.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_9__.CreateMultipartUploadCommand(this.params))];

          case 1:
            res = _a.sent();

            this._cache({
              uploadId: res.UploadId,
              lastTouched: Date.now(),
              bucket: this.params.Bucket,
              key: this.params.Key,
              fileName: this.file instanceof File ? this.file.name : ''
            });

            return [2
            /*return*/
            , res.UploadId];
        }
      });
    });
  };

  AWSS3UploadTask.prototype._initializeUploadTask = function () {
    return __awaiter(this, void 0, void 0, function () {
      var _a, parts, uploadId, uploadId, err_3;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            this.state = AWSS3UploadTaskState.IN_PROGRESS;
            _b.label = 1;

          case 1:
            _b.trys.push([1, 7,, 8]);

            return [4
            /*yield*/
            , this._isCached()];

          case 2:
            if (!_b.sent()) return [3
            /*break*/
            , 4];
            return [4
            /*yield*/
            , this._findCachedUploadParts()];

          case 3:
            _a = _b.sent(), parts = _a.parts, uploadId = _a.uploadId;
            this.uploadId = uploadId;
            this.queued = this._createParts();

            this._initCachedUploadParts(parts);

            this._startUpload();

            return [3
            /*break*/
            , 6];

          case 4:
            if (!!this.uploadId) return [3
            /*break*/
            , 6];
            return [4
            /*yield*/
            , this._initMultipartUpload()];

          case 5:
            uploadId = _b.sent();
            this.uploadId = uploadId;
            this.queued = this._createParts();

            this._startUpload();

            _b.label = 6;

          case 6:
            return [3
            /*break*/
            , 8];

          case 7:
            err_3 = _b.sent();

            if (!axios__WEBPACK_IMPORTED_MODULE_0___default().isCancel(err_3)) {
              logger.error('Error initializing the upload task', err_3);
            }

            return [3
            /*break*/
            , 8];

          case 8:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  AWSS3UploadTask.prototype.resume = function () {
    if (this.state === AWSS3UploadTaskState.CANCELLED) {
      logger.warn('This task has already been cancelled');
    } else if (this.state === AWSS3UploadTaskState.COMPLETED) {
      logger.warn('This task has already been completed');
    } else if (this.state === AWSS3UploadTaskState.IN_PROGRESS) {
      logger.warn('Upload task already in progress'); // first time running resume, find any cached parts on s3 or start a new multipart upload request before
      // starting the upload
    } else if (!this.uploadId) {
      this._initializeUploadTask();
    } else {
      this._startUpload();
    }
  };

  AWSS3UploadTask.prototype._startUpload = function () {
    this.state = AWSS3UploadTaskState.IN_PROGRESS;

    for (var i = 0; i < this.queueSize; i++) {
      this._startNextPart();
    }
  };

  AWSS3UploadTask.prototype._cancel = function () {
    return __awaiter(this, void 0, void 0, function () {
      var err_4;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            if (!(this.state === AWSS3UploadTaskState.CANCELLED)) return [3
            /*break*/
            , 1];
            logger.warn('This task has already been cancelled');
            return [2
            /*return*/
            , false];

          case 1:
            if (!(this.state === AWSS3UploadTaskState.COMPLETED)) return [3
            /*break*/
            , 2];
            logger.warn('This task has already been completed');
            return [2
            /*return*/
            , false];

          case 2:
            this.pause();
            this.queued = [];
            this.completedParts = [];
            this.bytesUploaded = 0;
            this.state = AWSS3UploadTaskState.CANCELLED;
            _a.label = 3;

          case 3:
            _a.trys.push([3, 6,, 7]);

            return [4
            /*yield*/
            , this.s3client.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_10__.AbortMultipartUploadCommand({
              Bucket: this.params.Bucket,
              Key: this.params.Key,
              UploadId: this.uploadId
            }))];

          case 4:
            _a.sent();

            return [4
            /*yield*/
            , this._removeFromCache()];

          case 5:
            _a.sent();

            return [2
            /*return*/
            , true];

          case 6:
            err_4 = _a.sent();
            logger.error('Error cancelling upload task', err_4);
            return [2
            /*return*/
            , false];

          case 7:
            return [2
            /*return*/
            ];
        }
      });
    });
  };
  /**
   * pause this particular upload task
   **/


  AWSS3UploadTask.prototype.pause = function () {
    var _a;

    if (this.state === AWSS3UploadTaskState.CANCELLED) {
      logger.warn('This task has already been cancelled');
    } else if (this.state === AWSS3UploadTaskState.COMPLETED) {
      logger.warn('This task has already been completed');
    } else if (this.state === AWSS3UploadTaskState.PAUSED) {
      logger.warn('This task is already paused');
    }

    this.state = AWSS3UploadTaskState.PAUSED; // Use axios cancel token to abort the part request immediately
    // Add the inProgress parts back to pending

    var removedInProgressReq = this.inProgress.splice(0, this.inProgress.length);
    removedInProgressReq.forEach(function (req) {
      req.cancel(_common_StorageErrorStrings__WEBPACK_IMPORTED_MODULE_8__.AWSS3ProviderUploadErrorStrings.UPLOAD_PAUSED_MESSAGE);
    }); // Put all removed in progress parts back into the queue

    (_a = this.queued).unshift.apply(_a, __spread(removedInProgressReq.map(function (req) {
      return req.uploadPartInput;
    })));
  };

  return AWSS3UploadTask;
}();



/***/ }),

/***/ 99836:
/*!***********************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/providers/axios-http-handler.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SEND_UPLOAD_PROGRESS_EVENT": function() { return /* binding */ SEND_UPLOAD_PROGRESS_EVENT; },
/* harmony export */   "SEND_DOWNLOAD_PROGRESS_EVENT": function() { return /* binding */ SEND_DOWNLOAD_PROGRESS_EVENT; },
/* harmony export */   "reactNativeRequestTransformer": function() { return /* binding */ reactNativeRequestTransformer; },
/* harmony export */   "AxiosHttpHandler": function() { return /* binding */ AxiosHttpHandler; }
/* harmony export */ });
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);
/* harmony import */ var _aws_sdk_querystring_builder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/querystring-builder */ 16949);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ 61172);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-amplify/core */ 99433);
/* harmony import */ var _common_StorageErrorStrings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/StorageErrorStrings */ 11316);
/*
 * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __values = undefined && undefined.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

var __read = undefined && undefined.__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
};






var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.ConsoleLogger('axios-http-handler');
var SEND_UPLOAD_PROGRESS_EVENT = 'sendUploadProgress';
var SEND_DOWNLOAD_PROGRESS_EVENT = 'sendDownloadProgress';

function isBlob(body) {
  return typeof Blob !== 'undefined' && body instanceof Blob;
}

var normalizeHeaders = function normalizeHeaders(headers, normalizedName) {
  var e_1, _a;

  try {
    for (var _b = __values(Object.entries(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {
      var _d = __read(_c.value, 2),
          k = _d[0],
          v = _d[1];

      if (k !== normalizedName && k.toUpperCase() === normalizedName.toUpperCase()) {
        headers[normalizedName] = v;
        delete headers[k];
      }
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
    } finally {
      if (e_1) throw e_1.error;
    }
  }
};

var reactNativeRequestTransformer = [function (data, headers) {
  if (isBlob(data)) {
    normalizeHeaders(headers, 'Content-Type');
    normalizeHeaders(headers, 'Accept');
    return data;
  } // Axios' default transformRequest is an array


  return axios__WEBPACK_IMPORTED_MODULE_2___default().defaults.transformRequest[0].call(null, data, headers);
}];

var AxiosHttpHandler = function () {
  function AxiosHttpHandler(httpOptions, emitter, cancelTokenSource) {
    if (httpOptions === void 0) {
      httpOptions = {};
    }

    this.httpOptions = httpOptions;
    this.emitter = emitter;
    this.cancelTokenSource = cancelTokenSource;
  }

  AxiosHttpHandler.prototype.destroy = function () {// Do nothing. TLS and HTTP/2 connection pooling is handled by the
    // browser.
  };

  AxiosHttpHandler.prototype.handle = function (request, options) {
    var requestTimeoutInMs = this.httpOptions.requestTimeout; // prioritize the call specific event emitter, this is useful for multipart upload as each individual parts has
    // their own event emitter, without having to create s3client for every individual calls.

    var emitter = options.emitter || this.emitter;
    var path = request.path;

    if (request.query) {
      var queryString = (0,_aws_sdk_querystring_builder__WEBPACK_IMPORTED_MODULE_1__.buildQueryString)(request.query);

      if (queryString) {
        path += "?" + queryString;
      }
    }

    var port = request.port;
    var url = request.protocol + "//" + request.hostname + (port ? ":" + port : '') + path;
    var axiosRequest = {};
    axiosRequest.url = url;
    axiosRequest.method = request.method;
    axiosRequest.headers = request.headers; // The host header is automatically added by the browser and adding it explicitly in the
    // axios request throws an error https://github.com/aws-amplify/amplify-js/issues/5376
    // This is because the host header is a forbidden header for the http client to set
    // see https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name and
    // https://fetch.spec.whatwg.org/#forbidden-header-name
    // The reason we are removing this header here instead of in the aws-sdk's client
    // middleware is that the host header is required to be in the request signature and if
    // we remove it from the middlewares, then the request fails because the header is added
    // by the browser but is absent from the signature.

    delete axiosRequest.headers['host'];

    if (request.body) {
      axiosRequest.data = request.body;
    } else {
      // Fix for https://github.com/aws-amplify/amplify-js/issues/5432
      // If the POST request body is empty but content-type header is set, axios is forcibly removing it
      // See https://github.com/axios/axios/issues/1535 and refusing to fix it https://github.com/axios/axios/issues/755
      // This change is a workaround to set the data as null (instead of undefined) to prevent axios from
      // removing the content-type header. Link for the source code
      // https://github.com/axios/axios/blob/dc4bc49673943e35280e5df831f5c3d0347a9393/lib/adapters/xhr.js#L121-L123
      if (axiosRequest.headers[Object.keys(axiosRequest.headers).find(function (key) {
        return key.toLowerCase() === 'content-type';
      })]) {
        axiosRequest.data = null;
      }
    }

    if (emitter) {
      axiosRequest.onUploadProgress = function (event) {
        emitter.emit(SEND_UPLOAD_PROGRESS_EVENT, event);
        logger.debug(event);
      };

      axiosRequest.onDownloadProgress = function (event) {
        emitter.emit(SEND_DOWNLOAD_PROGRESS_EVENT, event);
        logger.debug(event);
      };
    } // If a cancel token source is passed down from the provider, allows cancellation of in-flight requests


    if (this.cancelTokenSource) {
      axiosRequest.cancelToken = this.cancelTokenSource.token;
    }

    if (options.cancelTokenSource) {
      axiosRequest.cancelToken = options.cancelTokenSource.token;
    } // From gamma release, aws-sdk now expects all response type to be of blob or streams


    axiosRequest.responseType = 'blob'; // In Axios, Blobs are identified by calling Object.prototype.toString on the object. However, on React Native,
    // calling Object.prototype.toString on a Blob returns '[object Object]' instead of '[object Blob]', which causes
    // Axios to treat Blobs as generic Javascript objects. Therefore we need a to use a custom request transformer
    // to correctly handle Blob in React Native.

    if (_aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__.Platform.isReactNative) {
      axiosRequest.transformRequest = reactNativeRequestTransformer;
    }

    var raceOfPromises = [axios__WEBPACK_IMPORTED_MODULE_2___default().request(axiosRequest).then(function (response) {
      return {
        response: new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpResponse({
          headers: response.headers,
          statusCode: response.status,
          body: response.data
        })
      };
    }).catch(function (error) {
      var _a, _b, _c; // Error


      if (error.message !== _common_StorageErrorStrings__WEBPACK_IMPORTED_MODULE_5__.AWSS3ProviderUploadErrorStrings.UPLOAD_PAUSED_MESSAGE) {
        logger.error(error.message);
      } // for axios' cancel error, we should re-throw it back so it's not considered an s3client error
      // if we return empty, or an abitrary error HttpResponse, it will be hard to debug down the line


      if (axios__WEBPACK_IMPORTED_MODULE_2___default().isCancel(error)) {
        throw error;
      } // otherwise, we should re-construct an HttpResponse from the error, so that it can be passed down to other
      // aws sdk middleware (e.g retry, clock skew correction, error message serializing)


      return {
        response: new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpResponse({
          statusCode: (_a = error.response) === null || _a === void 0 ? void 0 : _a.status,
          body: (_b = error.response) === null || _b === void 0 ? void 0 : _b.data,
          headers: (_c = error.response) === null || _c === void 0 ? void 0 : _c.headers
        })
      };
    }), requestTimeout(requestTimeoutInMs)];
    return Promise.race(raceOfPromises);
  };

  return AxiosHttpHandler;
}();



function requestTimeout(timeoutInMs) {
  if (timeoutInMs === void 0) {
    timeoutInMs = 0;
  }

  return new Promise(function (resolve, reject) {
    if (timeoutInMs) {
      setTimeout(function () {
        var timeoutError = new Error("Request did not complete within " + timeoutInMs + " ms");
        timeoutError.name = 'TimeoutError';
        reject(timeoutError);
      }, timeoutInMs);
    }
  });
}

/***/ }),

/***/ 81681:
/*!**********************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/providers/index.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AWSS3Provider": function() { return /* reexport safe */ _AWSS3Provider__WEBPACK_IMPORTED_MODULE_0__.AWSS3Provider; }
/* harmony export */ });
/* harmony import */ var _AWSS3Provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AWSS3Provider */ 61812);


/***/ }),

/***/ 80754:
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/ui-components/dist/esm/storage-helpers-1afafead.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": function() { return /* binding */ getTextSource; },
/* harmony export */   "c": function() { return /* binding */ calcKey; },
/* harmony export */   "g": function() { return /* binding */ getStorageObject; },
/* harmony export */   "i": function() { return /* binding */ imageFileType; },
/* harmony export */   "p": function() { return /* binding */ putStorageObject; }
/* harmony export */ });
/* harmony import */ var C_Users_qopbo_IdeaProjects_sparkworks_project_awsdatalake_console_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ 19369);
/* harmony import */ var C_Users_qopbo_IdeaProjects_sparkworks_project_awsdatalake_console_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ 38957);
/* harmony import */ var C_Users_qopbo_IdeaProjects_sparkworks_project_awsdatalake_console_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(C_Users_qopbo_IdeaProjects_sparkworks_project_awsdatalake_console_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _constants_c8ecaa24_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants-c8ecaa24.js */ 41591);
/* harmony import */ var _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-amplify/storage */ 37484);




var imageFileType = new Set(['apng', 'bmp', 'gif', 'ico', 'cur', 'jpg', 'jpeg', 'jfif', 'pjpeg', 'pjp', 'png', 'svg', 'tif', 'tiff', 'webp']);

var calcKey = function calcKey(file, fileToKey) {
  var name = file.name,
      size = file.size,
      type = file.type;
  var key = encodeURI(name);

  if (fileToKey) {
    if (typeof fileToKey === 'string') {
      key = fileToKey;
    } else if (typeof fileToKey === 'function') {
      key = fileToKey({
        name: name,
        size: size,
        type: type
      });
    } else {
      key = encodeURI(JSON.stringify(fileToKey));
    }

    if (!key) {
      key = 'empty_key';
    }
  }

  return key.replace(/\s/g, '_');
};

var getStorageObject = /*#__PURE__*/function () {
  var _ref = (0,C_Users_qopbo_IdeaProjects_sparkworks_project_awsdatalake_console_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)( /*#__PURE__*/C_Users_qopbo_IdeaProjects_sparkworks_project_awsdatalake_console_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().mark(function _callee(key, level, track, identityId, logger) {
    var src;
    return C_Users_qopbo_IdeaProjects_sparkworks_project_awsdatalake_console_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!(!_aws_amplify_storage__WEBPACK_IMPORTED_MODULE_3__.Storage || typeof _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_3__.Storage.get !== 'function')) {
              _context.next = 2;
              break;
            }

            throw new Error(_constants_c8ecaa24_js__WEBPACK_IMPORTED_MODULE_2__.d);

          case 2:
            _context.prev = 2;
            _context.next = 5;
            return _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_3__.Storage.get(key, {
              level: level,
              track: track,
              identityId: identityId
            });

          case 5:
            src = _context.sent;
            logger.debug('Storage image get', src);
            return _context.abrupt("return", src);

          case 10:
            _context.prev = 10;
            _context.t0 = _context["catch"](2);
            throw new Error(_context.t0);

          case 13:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[2, 10]]);
  }));

  return function getStorageObject(_x, _x2, _x3, _x4, _x5) {
    return _ref.apply(this, arguments);
  };
}();

var readFileAsync = function readFileAsync(blob) {
  return new Promise(function (resolve, reject) {
    var reader = new FileReader();

    reader.onload = function () {
      resolve(reader.result);
    };

    reader.onerror = function () {
      reject('Failed to read file!');
      reader.abort();
    };

    reader.readAsText(blob);
  });
};

var getTextSource = /*#__PURE__*/function () {
  var _ref2 = (0,C_Users_qopbo_IdeaProjects_sparkworks_project_awsdatalake_console_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)( /*#__PURE__*/C_Users_qopbo_IdeaProjects_sparkworks_project_awsdatalake_console_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().mark(function _callee2(key, level, track, identityId, logger) {
    var textSrc, text;
    return C_Users_qopbo_IdeaProjects_sparkworks_project_awsdatalake_console_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (!(!_aws_amplify_storage__WEBPACK_IMPORTED_MODULE_3__.Storage || typeof _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_3__.Storage.get !== 'function')) {
              _context2.next = 2;
              break;
            }

            throw new Error(_constants_c8ecaa24_js__WEBPACK_IMPORTED_MODULE_2__.d);

          case 2:
            _context2.prev = 2;
            _context2.next = 5;
            return _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_3__.Storage.get(key, {
              download: true,
              level: level,
              track: track,
              identityId: identityId
            });

          case 5:
            textSrc = _context2.sent;
            logger.debug(textSrc);
            _context2.next = 9;
            return readFileAsync(textSrc['Body']);

          case 9:
            text = _context2.sent;
            return _context2.abrupt("return", text);

          case 13:
            _context2.prev = 13;
            _context2.t0 = _context2["catch"](2);
            throw new Error(_context2.t0);

          case 16:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[2, 13]]);
  }));

  return function getTextSource(_x6, _x7, _x8, _x9, _x10) {
    return _ref2.apply(this, arguments);
  };
}();

var putStorageObject = /*#__PURE__*/function () {
  var _ref3 = (0,C_Users_qopbo_IdeaProjects_sparkworks_project_awsdatalake_console_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)( /*#__PURE__*/C_Users_qopbo_IdeaProjects_sparkworks_project_awsdatalake_console_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().mark(function _callee3(key, body, level, track, contentType, logger) {
    var data;
    return C_Users_qopbo_IdeaProjects_sparkworks_project_awsdatalake_console_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            if (!(!_aws_amplify_storage__WEBPACK_IMPORTED_MODULE_3__.Storage || typeof _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_3__.Storage.put !== 'function')) {
              _context3.next = 2;
              break;
            }

            throw new Error(_constants_c8ecaa24_js__WEBPACK_IMPORTED_MODULE_2__.d);

          case 2:
            _context3.prev = 2;
            _context3.next = 5;
            return _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_3__.Storage.put(key, body, {
              contentType: contentType,
              level: level,
              track: track
            });

          case 5:
            data = _context3.sent;
            logger.debug('Upload data', data);
            _context3.next = 12;
            break;

          case 9:
            _context3.prev = 9;
            _context3.t0 = _context3["catch"](2);
            throw new Error(_context3.t0);

          case 12:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, null, [[2, 9]]);
  }));

  return function putStorageObject(_x11, _x12, _x13, _x14, _x15, _x16) {
    return _ref3.apply(this, arguments);
  };
}();



/***/ }),

/***/ 21833:
/*!***********************************************************!*\
  !*** ./node_modules/@aws-crypto/crc32/build/aws_crc32.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
 // Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AwsCrc32 = void 0;

var tslib_1 = __webpack_require__(/*! tslib */ 31098);

var util_1 = __webpack_require__(/*! @aws-crypto/util */ 50007);

var index_1 = __webpack_require__(/*! ./index */ 25926);

var AwsCrc32 = function () {
  function AwsCrc32() {
    this.crc32 = new index_1.Crc32();
  }

  AwsCrc32.prototype.update = function (toHash) {
    if ((0, util_1.isEmptyData)(toHash)) return;
    this.crc32.update((0, util_1.convertToBuffer)(toHash));
  };

  AwsCrc32.prototype.digest = function () {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
      return (0, tslib_1.__generator)(this, function (_a) {
        return [2
        /*return*/
        , (0, util_1.numToUint8)(this.crc32.digest())];
      });
    });
  };

  return AwsCrc32;
}();

exports.AwsCrc32 = AwsCrc32;

/***/ }),

/***/ 25926:
/*!*******************************************************!*\
  !*** ./node_modules/@aws-crypto/crc32/build/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AwsCrc32 = exports.Crc32 = exports.crc32 = void 0;

var tslib_1 = __webpack_require__(/*! tslib */ 31098);

function crc32(data) {
  return new Crc32().update(data).digest();
}

exports.crc32 = crc32;

var Crc32 = function () {
  function Crc32() {
    this.checksum = 0xffffffff;
  }

  Crc32.prototype.update = function (data) {
    var e_1, _a;

    try {
      for (var data_1 = (0, tslib_1.__values)(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
        var byte = data_1_1.value;
        this.checksum = this.checksum >>> 8 ^ lookupTable[(this.checksum ^ byte) & 0xff];
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return this;
  };

  Crc32.prototype.digest = function () {
    return (this.checksum ^ 0xffffffff) >>> 0;
  };

  return Crc32;
}();

exports.Crc32 = Crc32; // prettier-ignore

var lookupTable = Uint32Array.from([0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, 0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, 0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, 0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, 0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, 0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, 0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, 0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, 0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, 0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D]);

var aws_crc32_1 = __webpack_require__(/*! ./aws_crc32 */ 21833);

Object.defineProperty(exports, "AwsCrc32", ({
  enumerable: true,
  get: function get() {
    return aws_crc32_1.AwsCrc32;
  }
}));

/***/ }),

/***/ 18057:
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/chunked-blob-reader/dist/es/index.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "blobReader": function() { return /* binding */ blobReader; }
/* harmony export */ });
function blobReader(blob, onChunk, chunkSize) {
  if (chunkSize === void 0) {
    chunkSize = 1024 * 1024;
  }

  return new Promise(function (resolve, reject) {
    var fileReader = new FileReader();
    fileReader.addEventListener("error", reject);
    fileReader.addEventListener("abort", reject);
    var size = blob.size;
    var totalBytesRead = 0;

    function read() {
      if (totalBytesRead >= size) {
        resolve();
        return;
      }

      fileReader.readAsArrayBuffer(blob.slice(totalBytesRead, Math.min(size, totalBytesRead + chunkSize)));
    }

    fileReader.addEventListener("load", function (event) {
      var result = event.target.result;
      onChunk(new Uint8Array(result));
      totalBytesRead += result.byteLength; // read the next block

      read();
    }); // kick off the read

    read();
  });
}

/***/ }),

/***/ 49551:
/*!*************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/S3Client.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "S3Client": function() { return /* binding */ S3Client; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _runtimeConfig__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./runtimeConfig */ 11572);
/* harmony import */ var _aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/config-resolver */ 98140);
/* harmony import */ var _aws_sdk_eventstream_serde_config_resolver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/eventstream-serde-config-resolver */ 66021);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_content_length__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/middleware-content-length */ 9492);
/* harmony import */ var _aws_sdk_middleware_expect_continue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/middleware-expect-continue */ 62608);
/* harmony import */ var _aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/middleware-host-header */ 9312);
/* harmony import */ var _aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-sdk/middleware-logger */ 64871);
/* harmony import */ var _aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/middleware-retry */ 9485);
/* harmony import */ var _aws_sdk_middleware_sdk_s3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aws-sdk/middleware-sdk-s3 */ 51862);
/* harmony import */ var _aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @aws-sdk/middleware-signing */ 70461);
/* harmony import */ var _aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @aws-sdk/middleware-user-agent */ 19189);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);














/**
 * <p></p>
 */

var S3Client = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__extends)(S3Client, _super);

  function S3Client(configuration) {
    var _this = this;

    var _config_0 = (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_12__.__assign)({}, _runtimeConfig__WEBPACK_IMPORTED_MODULE_13__.ClientDefaultValues), configuration);

    var _config_1 = (0,_aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__.resolveRegionConfig)(_config_0);

    var _config_2 = (0,_aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__.resolveEndpointsConfig)(_config_1);

    var _config_3 = (0,_aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_9__.resolveAwsAuthConfig)(_config_2);

    var _config_4 = (0,_aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_7__.resolveRetryConfig)(_config_3);

    var _config_5 = (0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_5__.resolveHostHeaderConfig)(_config_4);

    var _config_6 = (0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_2__.resolveBucketEndpointConfig)(_config_5);

    var _config_7 = (0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_10__.resolveUserAgentConfig)(_config_6);

    var _config_8 = (0,_aws_sdk_eventstream_serde_config_resolver__WEBPACK_IMPORTED_MODULE_1__.resolveEventStreamSerdeConfig)(_config_7);

    _this = _super.call(this, _config_8) || this;
    _this.config = _config_8;

    _this.middlewareStack.use((0,_aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_9__.getAwsAuthPlugin)(_this.config));

    _this.middlewareStack.use((0,_aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_7__.getRetryPlugin)(_this.config));

    _this.middlewareStack.use((0,_aws_sdk_middleware_content_length__WEBPACK_IMPORTED_MODULE_3__.getContentLengthPlugin)(_this.config));

    _this.middlewareStack.use((0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_5__.getHostHeaderPlugin)(_this.config));

    _this.middlewareStack.use((0,_aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_6__.getLoggerPlugin)(_this.config));

    _this.middlewareStack.use((0,_aws_sdk_middleware_sdk_s3__WEBPACK_IMPORTED_MODULE_8__.getValidateBucketNamePlugin)(_this.config));

    _this.middlewareStack.use((0,_aws_sdk_middleware_sdk_s3__WEBPACK_IMPORTED_MODULE_8__.getUseRegionalEndpointPlugin)(_this.config));

    _this.middlewareStack.use((0,_aws_sdk_middleware_expect_continue__WEBPACK_IMPORTED_MODULE_4__.getAddExpectContinuePlugin)(_this.config));

    _this.middlewareStack.use((0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_10__.getUserAgentPlugin)(_this.config));

    return _this;
  }

  S3Client.prototype.destroy = function () {
    _super.prototype.destroy.call(this);
  };

  return S3Client;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_11__.Client);



/***/ }),

/***/ 59549:
/*!*****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/AbortMultipartUploadCommand.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AbortMultipartUploadCommand": function() { return /* binding */ AbortMultipartUploadCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);






/**
 * <p>This operation aborts a multipart upload. After a multipart upload is aborted, no
 *          additional parts can be uploaded using that upload ID. The storage consumed by any
 *          previously uploaded parts will be freed. However, if any part uploads are currently in
 *          progress, those part uploads might or might not succeed. As a result, it might be necessary
 *          to abort a given multipart upload multiple times in order to completely free all storage
 *          consumed by all parts. </p>
 *          <p>To verify that all parts have been removed, so you don't get charged for the part
 *          storage, you should call the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a> operation and ensure that
 *          the parts list is empty.</p>
 *          <p>For information about permissions required to use the multipart upload API, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html">Multipart Upload API and
 *          Permissions</a>.</p>
 *          <p>The following operations are related to <code>AbortMultipartUpload</code>:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html">CompleteMultipartUpload</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html">ListMultipartUploads</a>
 *                </p>
 *             </li>
 *          </ul>
 */

var AbortMultipartUploadCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(AbortMultipartUploadCommand, _super); // Start section: command_properties
  // End section: command_properties


  function AbortMultipartUploadCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  AbortMultipartUploadCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "S3Client";
    var commandName = "AbortMultipartUploadCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.AbortMultipartUploadRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.AbortMultipartUploadOutput.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  AbortMultipartUploadCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.serializeAws_restXmlAbortMultipartUploadCommand)(input, context);
  };

  AbortMultipartUploadCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.deserializeAws_restXmlAbortMultipartUploadCommand)(output, context);
  };

  return AbortMultipartUploadCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command);



/***/ }),

/***/ 10:
/*!********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/CompleteMultipartUploadCommand.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompleteMultipartUploadCommand": function() { return /* binding */ CompleteMultipartUploadCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_sdk_s3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-sdk-s3 */ 51862);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);







/**
 * <p>Completes a multipart upload by assembling previously uploaded parts.</p>
 *          <p>You first initiate the multipart upload and then upload all parts using the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a>
 *          operation. After successfully uploading all relevant parts of an upload, you call this
 *          operation to complete the upload. Upon receiving this request, Amazon S3 concatenates all
 *          the parts in ascending order by part number to create a new object. In the Complete
 *          Multipart Upload request, you must provide the parts list. You must ensure that the parts
 *          list is complete. This operation concatenates the parts that you provide in the list. For
 *          each part in the list, you must provide the part number and the <code>ETag</code> value,
 *          returned after that part was uploaded.</p>
 *          <p>Processing of a Complete Multipart Upload request could take several minutes to
 *          complete. After Amazon S3 begins processing the request, it sends an HTTP response header that
 *          specifies a 200 OK response. While processing is in progress, Amazon S3 periodically sends white
 *          space characters to keep the connection from timing out. Because a request could fail after
 *          the initial 200 OK response has been sent, it is important that you check the response body
 *          to determine whether the request succeeded.</p>
 *          <p>Note that if <code>CompleteMultipartUpload</code> fails, applications should be prepared
 *          to retry the failed requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ErrorBestPractices.html">Amazon S3 Error Best Practices</a>.</p>
 *          <p>For more information about multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html">Uploading Objects Using Multipart
 *             Upload</a>.</p>
 *          <p>For information about permissions required to use the multipart upload API, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html">Multipart Upload API and
 *          Permissions</a>.</p>
 *
 *
 *          <p>
 *             <code>CompleteMultipartUpload</code> has the following special errors:</p>
 *          <ul>
 *             <li>
 *                <p>Error code: <code>EntityTooSmall</code>
 *                </p>
 *                <ul>
 *                   <li>
 *                      <p>Description: Your proposed upload is smaller than the minimum allowed object
 *                      size. Each part must be at least 5 MB in size, except the last part.</p>
 *                   </li>
 *                   <li>
 *                      <p>400 Bad Request</p>
 *                   </li>
 *                </ul>
 *             </li>
 *             <li>
 *                <p>Error code: <code>InvalidPart</code>
 *                </p>
 *                <ul>
 *                   <li>
 *                      <p>Description: One or more of the specified parts could not be found. The part
 *                      might not have been uploaded, or the specified entity tag might not have
 *                      matched the part's entity tag.</p>
 *                   </li>
 *                   <li>
 *                      <p>400 Bad Request</p>
 *                   </li>
 *                </ul>
 *             </li>
 *             <li>
 *                <p>Error code: <code>InvalidPartOrder</code>
 *                </p>
 *                <ul>
 *                   <li>
 *                      <p>Description: The list of parts was not in ascending order. The parts list
 *                      must be specified in order by part number.</p>
 *                   </li>
 *                   <li>
 *                      <p>400 Bad Request</p>
 *                   </li>
 *                </ul>
 *             </li>
 *             <li>
 *                <p>Error code: <code>NoSuchUpload</code>
 *                </p>
 *                <ul>
 *                   <li>
 *                      <p>Description: The specified multipart upload does not exist. The upload ID
 *                      might be invalid, or the multipart upload might have been aborted or
 *                      completed.</p>
 *                   </li>
 *                   <li>
 *                      <p>404 Not Found</p>
 *                   </li>
 *                </ul>
 *             </li>
 *          </ul>
 *
 *          <p>The following operations are related to <code>CompleteMultipartUpload</code>:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html">AbortMultipartUpload</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html">ListMultipartUploads</a>
 *                </p>
 *             </li>
 *          </ul>
 */

var CompleteMultipartUploadCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__extends)(CompleteMultipartUploadCommand, _super); // Start section: command_properties
  // End section: command_properties


  function CompleteMultipartUploadCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  CompleteMultipartUploadCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_2__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    this.middlewareStack.use((0,_aws_sdk_middleware_sdk_s3__WEBPACK_IMPORTED_MODULE_1__.getThrow200ExceptionsPlugin)(configuration));
    this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "S3Client";
    var commandName = "CompleteMultipartUploadCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.CompleteMultipartUploadRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.CompleteMultipartUploadOutput.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  CompleteMultipartUploadCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.serializeAws_restXmlCompleteMultipartUploadCommand)(input, context);
  };

  CompleteMultipartUploadCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.deserializeAws_restXmlCompleteMultipartUploadCommand)(output, context);
  };

  return CompleteMultipartUploadCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__.Command);



/***/ }),

/***/ 71623:
/*!*******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/CopyObjectCommand.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CopyObjectCommand": function() { return /* binding */ CopyObjectCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_sdk_s3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-sdk-s3 */ 51862);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/middleware-ssec */ 40285);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);








/**
 * <p>Creates a copy of an object that is already stored in Amazon S3.</p>
 *          <note>
 *             <p>You can store individual objects of up to 5 TB in Amazon S3. You create a copy of your
 *             object up to 5 GB in size in a single atomic operation using this API. However, to copy
 *             an object greater than 5 GB, you must use the multipart upload Upload Part - Copy API.
 *             For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/CopyingObjctsUsingRESTMPUapi.html">Copy Object Using the REST Multipart Upload API</a>.</p>
 *          </note>
 *          <p>All copy requests must be authenticated. Additionally, you must have
 *             <i>read</i> access to the source object and <i>write</i>
 *          access to the destination bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">REST Authentication</a>. Both the Region
 *          that you want to copy the object from and the Region that you want to copy the object to
 *          must be enabled for your account.</p>
 *          <p>A copy request might return an error when Amazon S3 receives the copy request or while Amazon S3
 *          is copying the files. If the error occurs before the copy operation starts, you receive a
 *          standard Amazon S3 error. If the error occurs during the copy operation, the error response is
 *          embedded in the <code>200 OK</code> response. This means that a <code>200 OK</code>
 *          response can contain either a success or an error. Design your application to parse the
 *          contents of the response and handle it appropriately.</p>
 *          <p>If the copy is successful, you receive a response with information about the copied
 *          object.</p>
 *          <note>
 *             <p>If the request is an HTTP 1.1 request, the response is chunk encoded. If it were not,
 *             it would not contain the content-length, and you would need to read the entire
 *             body.</p>
 *          </note>
 *          <p>The copy request charge is based on the storage class and Region that you specify for
 *          the destination object. For pricing information, see <a href="https://aws.amazon.com/s3/pricing/">Amazon S3 pricing</a>.</p>
 *          <important>
 *             <p>Amazon S3 transfer acceleration does not support cross-Region copies. If you request a
 *             cross-Region copy using a transfer acceleration endpoint, you get a 400 <code>Bad
 *                Request</code> error. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html">Transfer Acceleration</a>.</p>
 *          </important>
 *          <p>
 *             <b>Metadata</b>
 *          </p>
 *          <p>When copying an object, you can preserve all metadata (default) or specify new metadata.
 *          However, the ACL is not preserved and is set to private for the user making the request. To
 *          override the default ACL setting, specify a new ACL when generating a copy request. For
 *          more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html">Using ACLs</a>. </p>
 *          <p>To specify whether you want the object metadata copied from the source object or
 *          replaced with metadata provided in the request, you can optionally add the
 *             <code>x-amz-metadata-directive</code> header. When you grant permissions, you can use
 *          the <code>s3:x-amz-metadata-directive</code> condition key to enforce certain metadata
 *          behavior when objects are uploaded. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/amazon-s3-policy-keys.html">Specifying Conditions in a
 *             Policy</a> in the <i>Amazon S3 Developer Guide</i>. For a complete list of
 *          Amazon S3-specific condition keys, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html">Actions, Resources, and Condition Keys for
 *             Amazon S3</a>.</p>
 *          <p>
 *             <b>
 *                <code>x-amz-copy-source-if</code> Headers</b>
 *          </p>
 *          <p>To only copy an object under certain conditions, such as whether the <code>Etag</code>
 *          matches or whether the object was modified before or after a specified date, use the
 *          following request parameters:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <code>x-amz-copy-source-if-match</code>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <code>x-amz-copy-source-if-none-match</code>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <code>x-amz-copy-source-if-unmodified-since</code>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <code>x-amz-copy-source-if-modified-since</code>
 *                </p>
 *             </li>
 *          </ul>
 *          <p> If both the <code>x-amz-copy-source-if-match</code> and
 *             <code>x-amz-copy-source-if-unmodified-since</code> headers are present in the request
 *          and evaluate as follows, Amazon S3 returns <code>200 OK</code> and copies the data:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <code>x-amz-copy-source-if-match</code> condition evaluates to true</p>
 *             </li>
 *             <li>
 *                <p>
 *                   <code>x-amz-copy-source-if-unmodified-since</code> condition evaluates to
 *                false</p>
 *             </li>
 *          </ul>
 *
 *          <p>If both the <code>x-amz-copy-source-if-none-match</code> and
 *             <code>x-amz-copy-source-if-modified-since</code> headers are present in the request and
 *          evaluate as follows, Amazon S3 returns the <code>412 Precondition Failed</code> response
 *          code:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <code>x-amz-copy-source-if-none-match</code> condition evaluates to false</p>
 *             </li>
 *             <li>
 *                <p>
 *                   <code>x-amz-copy-source-if-modified-since</code> condition evaluates to
 *                true</p>
 *             </li>
 *          </ul>
 *
 *          <note>
 *             <p>All headers with the <code>x-amz-</code> prefix, including
 *                <code>x-amz-copy-source</code>, must be signed.</p>
 *          </note>
 *          <p>
 *             <b>Server-side encryption</b>
 *          </p>
 *          <p>When you perform a CopyObject operation, you can optionally use the appropriate encryption-related headers to encrypt the object using server-side encryption with AWS managed encryption keys (SSE-S3 or SSE-KMS) or a customer-provided encryption key. With server-side encryption, Amazon S3 encrypts your data as it writes it to disks in its data centers and decrypts the data when you access it. For more information about server-side encryption, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html">Using
 *          Server-Side Encryption</a>.</p>
 *          <p>If a target object uses SSE-KMS, you can enable an S3 Bucket Key for the object. For more
 *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html">Amazon S3 Bucket Keys</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>
 *          <p>
 *             <b>Access Control List (ACL)-Specific Request
 *          Headers</b>
 *          </p>
 *          <p>When copying an object, you can optionally use headers to grant ACL-based permissions.
 *          By default, all objects are private. Only the owner has full access control. When adding a
 *          new object, you can grant permissions to individual AWS accounts or to predefined groups
 *          defined by Amazon S3. These permissions are then added to the ACL on the object. For more
 *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL) Overview</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-using-rest-api.html">Managing ACLs Using the REST
 *             API</a>. </p>
 *
 *          <p>
 *             <b>Storage Class Options</b>
 *          </p>
 *          <p>You can use the <code>CopyObject</code> operation to change the storage class of an
 *          object that is already stored in Amazon S3 using the <code>StorageClass</code> parameter. For
 *          more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage
 *             Classes</a> in the <i>Amazon S3 Service Developer Guide</i>.</p>
 *          <p>
 *             <b>Versioning</b>
 *          </p>
 *          <p>By default, <code>x-amz-copy-source</code> identifies the current version of an object
 *          to copy. If the current version is a delete marker, Amazon S3 behaves as if the object was
 *          deleted. To copy a different version, use the <code>versionId</code> subresource.</p>
 *          <p>If you enable versioning on the target bucket, Amazon S3 generates a unique version ID for
 *          the object being copied. This version ID is different from the version ID of the source
 *          object. Amazon S3 returns the version ID of the copied object in the
 *             <code>x-amz-version-id</code> response header in the response.</p>
 *          <p>If you do not enable versioning or suspend it on the target bucket, the version ID that
 *          Amazon S3 generates is always null.</p>
 *          <p>If the source object's storage class is GLACIER, you must restore a copy of this object
 *          before you can use it as a source object for the copy operation. For more information, see
 *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html">RestoreObject</a>.</p>
 *          <p>The following operations are related to <code>CopyObject</code>:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a>
 *                </p>
 *             </li>
 *          </ul>
 *          <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/CopyingObjectsExamples.html">Copying
 *             Objects</a>.</p>
 */

var CopyObjectCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__extends)(CopyObjectCommand, _super); // Start section: command_properties
  // End section: command_properties


  function CopyObjectCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  CopyObjectCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_2__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    this.middlewareStack.use((0,_aws_sdk_middleware_sdk_s3__WEBPACK_IMPORTED_MODULE_1__.getThrow200ExceptionsPlugin)(configuration));
    this.middlewareStack.use((0,_aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_3__.getSsecPlugin)(configuration));
    this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "S3Client";
    var commandName = "CopyObjectCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_6__.CopyObjectRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_6__.CopyObjectOutput.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  CopyObjectCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_7__.serializeAws_restXmlCopyObjectCommand)(input, context);
  };

  CopyObjectCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_7__.deserializeAws_restXmlCopyObjectCommand)(output, context);
  };

  return CopyObjectCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_4__.Command);



/***/ }),

/***/ 1346:
/*!******************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/CreateMultipartUploadCommand.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreateMultipartUploadCommand": function() { return /* binding */ CreateMultipartUploadCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-ssec */ 40285);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);







/**
 * <p>This operation initiates a multipart upload and returns an upload ID. This upload ID is
 *          used to associate all of the parts in the specific multipart upload. You specify this
 *          upload ID in each of your subsequent upload part requests (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a>). You also include this
 *          upload ID in the final request to either complete or abort the multipart upload
 *          request.</p>
 *
 *          <p>For more information about multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html">Multipart Upload Overview</a>.</p>
 *
 *          <p>If you have configured a lifecycle rule to abort incomplete multipart uploads, the
 *          upload must complete within the number of days specified in the bucket lifecycle
 *          configuration. Otherwise, the incomplete multipart upload becomes eligible for an abort
 *          operation and Amazon S3 aborts the multipart upload. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config">Aborting
 *             Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a>.</p>
 *
 *          <p>For information about the permissions required to use the multipart upload API, see
 *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html">Multipart Upload API and
 *             Permissions</a>.</p>
 *
 *          <p>For request signing, multipart upload is just a series of regular requests. You initiate
 *          a multipart upload, send one or more requests to upload parts, and then complete the
 *          multipart upload process. You sign each request individually. There is nothing special
 *          about signing multipart upload requests. For more information about signing, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html">Authenticating
 *             Requests (AWS Signature Version 4)</a>.</p>
 *
 *          <note>
 *             <p> After you initiate a multipart upload and upload one or more parts, to stop being
 *             charged for storing the uploaded parts, you must either complete or abort the multipart
 *             upload. Amazon S3 frees up the space used to store the parts and stop charging you for
 *             storing them only after you either complete or abort a multipart upload. </p>
 *          </note>
 *
 *          <p>You can optionally request server-side encryption. For server-side encryption, Amazon S3
 *          encrypts your data as it writes it to disks in its data centers and decrypts it when you
 *          access it. You can provide your own encryption key, or use AWS Key Management Service (AWS
 *          KMS) customer master keys (CMKs) or Amazon S3-managed encryption keys. If you choose to provide
 *          your own encryption key, the request headers you provide in <a href="AmazonS3/latest/API/API_UploadPart.html">UploadPart</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html">UploadPartCopy</a> requests must match the headers you used in the request to
 *          initiate the upload by using <code>CreateMultipartUpload</code>. </p>
 *          <p>To perform a multipart upload with encryption using an AWS KMS CMK, the requester must
 *          have permission to the <code>kms:Encrypt</code>, <code>kms:Decrypt</code>,
 *             <code>kms:ReEncrypt*</code>, <code>kms:GenerateDataKey*</code>, and
 *             <code>kms:DescribeKey</code> actions on the key. These permissions are required because
 *          Amazon S3 must decrypt and read data from the encrypted file parts before it completes the
 *          multipart upload.</p>
 *
 *          <p>If your AWS Identity and Access Management (IAM) user or role is in the same AWS account
 *          as the AWS KMS CMK, then you must have these permissions on the key policy. If your IAM
 *          user or role belongs to a different account than the key, then you must have the
 *          permissions on both the key policy and your IAM user or role.</p>
 *
 *
 *          <p> For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html">Protecting
 *             Data Using Server-Side Encryption</a>.</p>
 *
 *          <dl>
 *             <dt>Access Permissions</dt>
 *             <dd>
 *                <p>When copying an object, you can optionally specify the accounts or groups that
 *                   should be granted specific permissions on the new object. There are two ways to
 *                   grant the permissions using the request headers:</p>
 *                <ul>
 *                   <li>
 *                      <p>Specify a canned ACL with the <code>x-amz-acl</code> request header. For
 *                         more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned ACL</a>.</p>
 *                   </li>
 *                   <li>
 *                      <p>Specify access permissions explicitly with the
 *                            <code>x-amz-grant-read</code>, <code>x-amz-grant-read-acp</code>,
 *                            <code>x-amz-grant-write-acp</code>, and
 *                            <code>x-amz-grant-full-control</code> headers. These parameters map to
 *                         the set of permissions that Amazon S3 supports in an ACL. For more information,
 *                         see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL)
 *                            Overview</a>.</p>
 *                   </li>
 *                </ul>
 *                <p>You can use either a canned ACL or specify access permissions explicitly. You
 *                   cannot do both.</p>
 *             </dd>
 *             <dt>Server-Side- Encryption-Specific Request Headers</dt>
 *             <dd>
 *                <p>You can optionally tell Amazon S3 to encrypt data at rest using server-side
 *                   encryption. Server-side encryption is for data encryption at rest. Amazon S3 encrypts
 *                   your data as it writes it to disks in its data centers and decrypts it when you
 *                   access it. The option you use depends on whether you want to use AWS managed
 *                   encryption keys or provide your own encryption key. </p>
 *                <ul>
 *                   <li>
 *                      <p>Use encryption keys managed by Amazon S3 or customer master keys (CMKs) stored
 *                         in AWS Key Management Service (AWS KMS) – If you want AWS to manage the keys
 *                         used to encrypt data, specify the following headers in the request.</p>
 *                      <ul>
 *                         <li>
 *                            <p>x-amz-server-side-encryption</p>
 *                         </li>
 *                         <li>
 *                            <p>x-amz-server-side-encryption-aws-kms-key-id</p>
 *                         </li>
 *                         <li>
 *                            <p>x-amz-server-side-encryption-context</p>
 *                         </li>
 *                      </ul>
 *                      <note>
 *                         <p>If you specify <code>x-amz-server-side-encryption:aws:kms</code>, but
 *                            don't provide <code>x-amz-server-side-encryption-aws-kms-key-id</code>,
 *                            Amazon S3 uses the AWS managed CMK in AWS KMS to protect the data.</p>
 *                      </note>
 *                      <important>
 *                         <p>All GET and PUT requests for an object protected by AWS KMS fail if
 *                            you don't make them with SSL or by using SigV4.</p>
 *                      </important>
 *                      <p>For more information about server-side encryption with CMKs stored in AWS
 *                         KMS (SSE-KMS), see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">Protecting Data Using Server-Side Encryption with CMKs stored in AWS
 *                            KMS</a>.</p>
 *                   </li>
 *                   <li>
 *                      <p>Use customer-provided encryption keys – If you want to manage your own
 *                         encryption keys, provide all the following headers in the request.</p>
 *                      <ul>
 *                         <li>
 *                            <p>x-amz-server-side-encryption-customer-algorithm</p>
 *                         </li>
 *                         <li>
 *                            <p>x-amz-server-side-encryption-customer-key</p>
 *                         </li>
 *                         <li>
 *                            <p>x-amz-server-side-encryption-customer-key-MD5</p>
 *                         </li>
 *                      </ul>
 *                      <p>For more information about server-side encryption with CMKs stored in AWS
 *                         KMS (SSE-KMS), see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">Protecting Data Using Server-Side Encryption with CMKs stored in AWS
 *                            KMS</a>.</p>
 *                   </li>
 *                </ul>
 *             </dd>
 *             <dt>Access-Control-List (ACL)-Specific Request Headers</dt>
 *             <dd>
 *                <p>You also can use the following access control–related headers with this
 *                   operation. By default, all objects are private. Only the owner has full access
 *                   control. When adding a new object, you can grant permissions to individual AWS
 *                   accounts or to predefined groups defined by Amazon S3. These permissions are then added
 *                   to the access control list (ACL) on the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html">Using ACLs</a>. With this
 *                   operation, you can grant access permissions using one of the following two
 *                   methods:</p>
 *                <ul>
 *                   <li>
 *                      <p>Specify a canned ACL (<code>x-amz-acl</code>) — Amazon S3 supports a set of
 *                         predefined ACLs, known as <i>canned ACLs</i>. Each canned ACL
 *                         has a predefined set of grantees and permissions. For more information, see
 *                            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned
 *                         ACL</a>.</p>
 *                   </li>
 *                   <li>
 *                      <p>Specify access permissions explicitly — To explicitly grant access
 *                         permissions to specific AWS accounts or groups, use the following headers.
 *                         Each header maps to specific permissions that Amazon S3 supports in an ACL. For
 *                         more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access
 *                            Control List (ACL) Overview</a>. In the header, you specify a list of
 *                         grantees who get the specific permission. To grant permissions explicitly,
 *                         use:</p>
 *                      <ul>
 *                         <li>
 *                            <p>x-amz-grant-read</p>
 *                         </li>
 *                         <li>
 *                            <p>x-amz-grant-write</p>
 *                         </li>
 *                         <li>
 *                            <p>x-amz-grant-read-acp</p>
 *                         </li>
 *                         <li>
 *                            <p>x-amz-grant-write-acp</p>
 *                         </li>
 *                         <li>
 *                            <p>x-amz-grant-full-control</p>
 *                         </li>
 *                      </ul>
 *                      <p>You specify each grantee as a type=value pair, where the type is one of
 *                         the following:</p>
 *                      <ul>
 *                         <li>
 *                            <p>
 *                               <code>id</code> – if the value specified is the canonical user ID
 *                               of an AWS account</p>
 *                         </li>
 *                         <li>
 *                            <p>
 *                               <code>uri</code> – if you are granting permissions to a predefined
 *                               group</p>
 *                         </li>
 *                         <li>
 *                            <p>
 *                               <code>emailAddress</code> – if the value specified is the email
 *                               address of an AWS account</p>
 *                            <note>
 *                               <p>Using email addresses to specify a grantee is only supported in the following AWS Regions: </p>
 *                               <ul>
 *                                  <li>
 *                                     <p>US East (N. Virginia)</p>
 *                                  </li>
 *                                  <li>
 *                                     <p>US West (N. California)</p>
 *                                  </li>
 *                                  <li>
 *                                     <p> US West (Oregon)</p>
 *                                  </li>
 *                                  <li>
 *                                     <p> Asia Pacific (Singapore)</p>
 *                                  </li>
 *                                  <li>
 *                                     <p>Asia Pacific (Sydney)</p>
 *                                  </li>
 *                                  <li>
 *                                     <p>Asia Pacific (Tokyo)</p>
 *                                  </li>
 *                                  <li>
 *                                     <p>Europe (Ireland)</p>
 *                                  </li>
 *                                  <li>
 *                                     <p>South America (São Paulo)</p>
 *                                  </li>
 *                               </ul>
 *                               <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a> in the AWS General Reference.</p>
 *                            </note>
 *                         </li>
 *                      </ul>
 *                      <p>For example, the following <code>x-amz-grant-read</code> header grants the AWS accounts identified by account IDs permissions to read object data and its metadata:</p>
 *                      <p>
 *                         <code>x-amz-grant-read: id="11112222333", id="444455556666" </code>
 *                      </p>
 *                   </li>
 *                </ul>
 *
 *             </dd>
 *          </dl>
 *
 *          <p>The following operations are related to <code>CreateMultipartUpload</code>:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html">CompleteMultipartUpload</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html">AbortMultipartUpload</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html">ListMultipartUploads</a>
 *                </p>
 *             </li>
 *          </ul>
 */

var CreateMultipartUploadCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__extends)(CreateMultipartUploadCommand, _super); // Start section: command_properties
  // End section: command_properties


  function CreateMultipartUploadCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  CreateMultipartUploadCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    this.middlewareStack.use((0,_aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__.getSsecPlugin)(configuration));
    this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "S3Client";
    var commandName = "CreateMultipartUploadCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.CreateMultipartUploadRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.CreateMultipartUploadOutput.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  CreateMultipartUploadCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.serializeAws_restXmlCreateMultipartUploadCommand)(input, context);
  };

  CreateMultipartUploadCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.deserializeAws_restXmlCreateMultipartUploadCommand)(output, context);
  };

  return CreateMultipartUploadCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__.Command);



/***/ }),

/***/ 76912:
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/DeleteObjectCommand.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeleteObjectCommand": function() { return /* binding */ DeleteObjectCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);






/**
 * <p>Removes the null version (if there is one) of an object and inserts a delete marker,
 *          which becomes the latest version of the object. If there isn't a null version, Amazon S3 does
 *          not remove any objects.</p>
 *
 *          <p>To remove a specific version, you must be the bucket owner and you must use the version
 *          Id subresource. Using this subresource permanently deletes the version. If the object
 *          deleted is a delete marker, Amazon S3 sets the response header,
 *          <code>x-amz-delete-marker</code>, to true. </p>
 *
 *          <p>If the object you want to delete is in a bucket where the bucket versioning
 *          configuration is MFA Delete enabled, you must include the <code>x-amz-mfa</code> request
 *          header in the DELETE <code>versionId</code> request. Requests that include
 *             <code>x-amz-mfa</code> must use HTTPS. </p>
 *
 *          <p> For more information about MFA Delete, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html">Using MFA Delete</a>. To see sample requests that use versioning, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectDELETE.html#ExampleVersionObjectDelete">Sample Request</a>. </p>
 *
 *          <p>You can delete objects by explicitly calling the DELETE Object API or configure its
 *          lifecycle (<a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html">PutBucketLifecycle</a>) to
 *          enable Amazon S3 to remove them for you. If you want to block users or accounts from removing or
 *          deleting objects from your bucket, you must deny them the <code>s3:DeleteObject</code>,
 *             <code>s3:DeleteObjectVersion</code>, and <code>s3:PutLifeCycleConfiguration</code>
 *          actions. </p>
 *
 *          <p>The following operation is related to <code>DeleteObject</code>:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a>
 *                </p>
 *             </li>
 *          </ul>
 */

var DeleteObjectCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(DeleteObjectCommand, _super); // Start section: command_properties
  // End section: command_properties


  function DeleteObjectCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  DeleteObjectCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "S3Client";
    var commandName = "DeleteObjectCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.DeleteObjectRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.DeleteObjectOutput.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  DeleteObjectCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.serializeAws_restXmlDeleteObjectCommand)(input, context);
  };

  DeleteObjectCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.deserializeAws_restXmlDeleteObjectCommand)(output, context);
  };

  return DeleteObjectCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command);



/***/ }),

/***/ 19813:
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/GetObjectCommand.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GetObjectCommand": function() { return /* binding */ GetObjectCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-ssec */ 40285);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);







/**
 * <p>Retrieves objects from Amazon S3. To use <code>GET</code>, you must have <code>READ</code>
 *          access to the object. If you grant <code>READ</code> access to the anonymous user, you can
 *          return the object without using an authorization header.</p>
 *
 *          <p>An Amazon S3 bucket has no directory hierarchy such as you would find in a typical computer
 *          file system. You can, however, create a logical hierarchy by using object key names that
 *          imply a folder structure. For example, instead of naming an object <code>sample.jpg</code>,
 *          you can name it <code>photos/2006/February/sample.jpg</code>.</p>
 *
 *          <p>To get an object from such a logical hierarchy, specify the full key name for the object
 *          in the <code>GET</code> operation. For a virtual hosted-style request example, if you have
 *          the object <code>photos/2006/February/sample.jpg</code>, specify the resource as
 *             <code>/photos/2006/February/sample.jpg</code>. For a path-style request example, if you
 *          have the object <code>photos/2006/February/sample.jpg</code> in the bucket named
 *             <code>examplebucket</code>, specify the resource as
 *             <code>/examplebucket/photos/2006/February/sample.jpg</code>. For more information about
 *          request types, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html#VirtualHostingSpecifyBucket">HTTP Host Header Bucket Specification</a>.</p>
 *
 *          <p>To distribute large files to many people, you can save bandwidth costs by using
 *          BitTorrent. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/S3Torrent.html">Amazon S3
 *             Torrent</a>. For more information about returning the ACL of an object, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html">GetObjectAcl</a>.</p>
 *
 *          <p>If the object you are retrieving is stored in the S3 Glacier or
 *          S3 Glacier Deep Archive storage class, or S3 Intelligent-Tiering Archive or
 *          S3 Intelligent-Tiering Deep Archive tiers, before you can retrieve the object you must first restore a
 *          copy using <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html">RestoreObject</a>. Otherwise, this operation returns an
 *             <code>InvalidObjectStateError</code> error. For information about restoring archived
 *          objects, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/restoring-objects.html">Restoring Archived
 *             Objects</a>.</p>
 *
 *          <p>Encryption request headers, like <code>x-amz-server-side-encryption</code>, should not
 *          be sent for GET requests if your object uses server-side encryption with CMKs stored in AWS
 *          KMS (SSE-KMS) or server-side encryption with Amazon S3–managed encryption keys (SSE-S3). If your
 *          object does use these types of keys, you’ll get an HTTP 400 BadRequest error.</p>
 *          <p>If you encrypt an object by using server-side encryption with customer-provided
 *          encryption keys (SSE-C) when you store the object in Amazon S3, then when you GET the object,
 *          you must use the following headers:</p>
 *          <ul>
 *             <li>
 *                <p>x-amz-server-side-encryption-customer-algorithm</p>
 *             </li>
 *             <li>
 *                <p>x-amz-server-side-encryption-customer-key</p>
 *             </li>
 *             <li>
 *                <p>x-amz-server-side-encryption-customer-key-MD5</p>
 *             </li>
 *          </ul>
 *          <p>For more information about SSE-C, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side Encryption (Using
 *             Customer-Provided Encryption Keys)</a>.</p>
 *
 *          <p>Assuming you have permission to read object tags (permission for the
 *             <code>s3:GetObjectVersionTagging</code> action), the response also returns the
 *             <code>x-amz-tagging-count</code> header that provides the count of number of tags
 *          associated with the object. You can use <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html">GetObjectTagging</a> to retrieve
 *          the tag set associated with an object.</p>
 *
 *          <p>
 *             <b>Permissions</b>
 *          </p>
 *          <p>You need the <code>s3:GetObject</code> permission for this operation. For more
 *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying Permissions
 *             in a Policy</a>. If the object you request does not exist, the error Amazon S3 returns
 *          depends on whether you also have the <code>s3:ListBucket</code> permission.</p>
 *          <ul>
 *             <li>
 *                <p>If you have the <code>s3:ListBucket</code> permission on the bucket, Amazon S3 will
 *                return an HTTP status code 404 ("no such key") error.</p>
 *             </li>
 *             <li>
 *                <p>If you don’t have the <code>s3:ListBucket</code> permission, Amazon S3 will return an
 *                HTTP status code 403 ("access denied") error.</p>
 *             </li>
 *          </ul>
 *
 *
 *          <p>
 *             <b>Versioning</b>
 *          </p>
 *          <p>By default, the GET operation returns the current version of an object. To return a
 *          different version, use the <code>versionId</code> subresource.</p>
 *
 *          <note>
 *             <p>If the current version of the object is a delete marker, Amazon S3 behaves as if the
 *             object was deleted and includes <code>x-amz-delete-marker: true</code> in the
 *             response.</p>
 *          </note>
 *
 *
 *          <p>For more information about versioning, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html">PutBucketVersioning</a>. </p>
 *
 *          <p>
 *             <b>Overriding Response Header Values</b>
 *          </p>
 *          <p>There are times when you want to override certain response header values in a GET
 *          response. For example, you might override the Content-Disposition response header value in
 *          your GET request.</p>
 *
 *          <p>You can override values for a set of response headers using the following query
 *          parameters. These response header values are sent only on a successful request, that is,
 *          when status code 200 OK is returned. The set of headers you can override using these
 *          parameters is a subset of the headers that Amazon S3 accepts when you create an object. The
 *          response headers that you can override for the GET response are <code>Content-Type</code>,
 *             <code>Content-Language</code>, <code>Expires</code>, <code>Cache-Control</code>,
 *             <code>Content-Disposition</code>, and <code>Content-Encoding</code>. To override these
 *          header values in the GET response, you use the following request parameters.</p>
 *
 *          <note>
 *             <p>You must sign the request, either using an Authorization header or a presigned URL,
 *             when using these parameters. They cannot be used with an unsigned (anonymous)
 *             request.</p>
 *          </note>
 *          <ul>
 *             <li>
 *                <p>
 *                   <code>response-content-type</code>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <code>response-content-language</code>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <code>response-expires</code>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <code>response-cache-control</code>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <code>response-content-disposition</code>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <code>response-content-encoding</code>
 *                </p>
 *             </li>
 *          </ul>
 *
 *          <p>
 *             <b>Additional Considerations about Request Headers</b>
 *          </p>
 *
 *          <p>If both of the <code>If-Match</code> and <code>If-Unmodified-Since</code> headers are
 *          present in the request as follows: <code>If-Match</code> condition evaluates to
 *             <code>true</code>, and; <code>If-Unmodified-Since</code> condition evaluates to
 *             <code>false</code>; then, S3 returns 200 OK and the data requested. </p>
 *
 *          <p>If both of the <code>If-None-Match</code> and <code>If-Modified-Since</code> headers are
 *          present in the request as follows:<code> If-None-Match</code> condition evaluates to
 *             <code>false</code>, and; <code>If-Modified-Since</code> condition evaluates to
 *             <code>true</code>; then, S3 returns 304 Not Modified response code.</p>
 *
 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>.</p>
 *
 *          <p>The following operations are related to <code>GetObject</code>:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html">ListBuckets</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html">GetObjectAcl</a>
 *                </p>
 *             </li>
 *          </ul>
 */

var GetObjectCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__extends)(GetObjectCommand, _super); // Start section: command_properties
  // End section: command_properties


  function GetObjectCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  GetObjectCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    this.middlewareStack.use((0,_aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__.getSsecPlugin)(configuration));
    this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "S3Client";
    var commandName = "GetObjectCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.GetObjectRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.GetObjectOutput.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  GetObjectCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.serializeAws_restXmlGetObjectCommand)(input, context);
  };

  GetObjectCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.deserializeAws_restXmlGetObjectCommand)(output, context);
  };

  return GetObjectCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__.Command);



/***/ }),

/***/ 79974:
/*!********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/ListObjectsCommand.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ListObjectsCommand": function() { return /* binding */ ListObjectsCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);






/**
 * <p>Returns some or all (up to 1,000) of the objects in a bucket. You can use the request
 *          parameters as selection criteria to return a subset of the objects in a bucket. A 200 OK
 *          response can contain valid or invalid XML. Be sure to design your application to parse the
 *          contents of the response and handle it appropriately.</p>
 *          <important>
 *             <p>This API has been revised. We recommend that you use the newer version, <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html">ListObjectsV2</a>, when developing applications. For backward compatibility,
 *             Amazon S3 continues to support <code>ListObjects</code>.</p>
 *          </important>
 *
 *
 *          <p>The following operations are related to <code>ListObjects</code>:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html">ListObjectsV2</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html">ListBuckets</a>
 *                </p>
 *             </li>
 *          </ul>
 */

var ListObjectsCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(ListObjectsCommand, _super); // Start section: command_properties
  // End section: command_properties


  function ListObjectsCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  ListObjectsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "S3Client";
    var commandName = "ListObjectsCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.ListObjectsRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.ListObjectsOutput.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  ListObjectsCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.serializeAws_restXmlListObjectsCommand)(input, context);
  };

  ListObjectsCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.deserializeAws_restXmlListObjectsCommand)(output, context);
  };

  return ListObjectsCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command);



/***/ }),

/***/ 5777:
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/ListObjectsV2Command.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ListObjectsV2Command": function() { return /* binding */ ListObjectsV2Command; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);






/**
 * <p>Returns some or all (up to 1,000) of the objects in a bucket. You can use the request
 *          parameters as selection criteria to return a subset of the objects in a bucket. A <code>200
 *             OK</code> response can contain valid or invalid XML. Make sure to design your
 *          application to parse the contents of the response and handle it appropriately.</p>
 *
 *          <p>To use this operation, you must have READ access to the bucket.</p>
 *
 *          <p>To use this operation in an AWS Identity and Access Management (IAM) policy, you must
 *          have permissions to perform the <code>s3:ListBucket</code> action. The bucket owner has
 *          this permission by default and can grant this permission to others. For more information
 *          about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">Managing Access Permissions to Your Amazon S3
 *             Resources</a>.</p>
 *          <important>
 *             <p>This section describes the latest revision of the API. We recommend that you use this
 *             revised API for application development. For backward compatibility, Amazon S3 continues to
 *             support the prior version of this API, <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html">ListObjects</a>.</p>
 *          </important>
 *
 *          <p>To get a list of your buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html">ListBuckets</a>.</p>
 *
 *          <p>The following operations are related to <code>ListObjectsV2</code>:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a>
 *                </p>
 *             </li>
 *          </ul>
 */

var ListObjectsV2Command = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(ListObjectsV2Command, _super); // Start section: command_properties
  // End section: command_properties


  function ListObjectsV2Command(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  ListObjectsV2Command.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "S3Client";
    var commandName = "ListObjectsV2Command";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.ListObjectsV2Request.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.ListObjectsV2Output.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  ListObjectsV2Command.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.serializeAws_restXmlListObjectsV2Command)(input, context);
  };

  ListObjectsV2Command.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.deserializeAws_restXmlListObjectsV2Command)(output, context);
  };

  return ListObjectsV2Command;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command);



/***/ }),

/***/ 65674:
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/ListPartsCommand.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ListPartsCommand": function() { return /* binding */ ListPartsCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);






/**
 * <p>Lists the parts that have been uploaded for a specific multipart upload. This operation
 *          must include the upload ID, which you obtain by sending the initiate multipart upload
 *          request (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a>).
 *          This request returns a maximum of 1,000 uploaded parts. The default number of parts
 *          returned is 1,000 parts. You can restrict the number of parts returned by specifying the
 *             <code>max-parts</code> request parameter. If your multipart upload consists of more than
 *          1,000 parts, the response returns an <code>IsTruncated</code> field with the value of true,
 *          and a <code>NextPartNumberMarker</code> element. In subsequent <code>ListParts</code>
 *          requests you can include the part-number-marker query string parameter and set its value to
 *          the <code>NextPartNumberMarker</code> field value from the previous response.</p>
 *
 *          <p>For more information on multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html">Uploading Objects Using Multipart
 *             Upload</a>.</p>
 *
 *          <p>For information on permissions required to use the multipart upload API, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html">Multipart Upload API and
 *          Permissions</a>.</p>
 *
 *          <p>The following operations are related to <code>ListParts</code>:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html">UploadPart</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html">CompleteMultipartUpload</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html">AbortMultipartUpload</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html">ListMultipartUploads</a>
 *                </p>
 *             </li>
 *          </ul>
 */

var ListPartsCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(ListPartsCommand, _super); // Start section: command_properties
  // End section: command_properties


  function ListPartsCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  ListPartsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "S3Client";
    var commandName = "ListPartsCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.ListPartsRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.ListPartsOutput.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  ListPartsCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.serializeAws_restXmlListPartsCommand)(input, context);
  };

  ListPartsCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.deserializeAws_restXmlListPartsCommand)(output, context);
  };

  return ListPartsCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command);



/***/ }),

/***/ 4391:
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/PutObjectCommand.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PutObjectCommand": function() { return /* binding */ PutObjectCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-ssec */ 40285);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);







/**
 * <p>Adds an object to a bucket. You must have WRITE permissions on a bucket to add an object
 *          to it.</p>
 *
 *
 *          <p>Amazon S3 never adds partial objects; if you receive a success response, Amazon S3 added the
 *          entire object to the bucket.</p>
 *
 *          <p>Amazon S3 is a distributed system. If it receives multiple write requests for the same object
 *          simultaneously, it overwrites all but the last object written. Amazon S3 does not provide object
 *          locking; if you need this, make sure to build it into your application layer or use
 *          versioning instead.</p>
 *
 *          <p>To ensure that data is not corrupted traversing the network, use the
 *             <code>Content-MD5</code> header. When you use this header, Amazon S3 checks the object
 *          against the provided MD5 value and, if they do not match, returns an error. Additionally,
 *          you can calculate the MD5 while putting an object to Amazon S3 and compare the returned ETag to
 *          the calculated MD5 value.</p>
 *          <note>
 *             <p> The <code>Content-MD5</code> header is required for any request to upload an object
 *             with a retention period configured using Amazon S3 Object Lock. For more information about
 *             Amazon S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html">Amazon S3 Object Lock Overview</a>
 *             in the <i>Amazon Simple Storage Service Developer Guide</i>. </p>
 *          </note>
 *
 *
 *          <p>
 *             <b>Server-side Encryption</b>
 *          </p>
 *          <p>You can optionally request server-side encryption. With server-side encryption, Amazon S3 encrypts your data as it writes it to disks in its data centers and decrypts the data
 *          when you access it. You have the option to provide your own encryption key or use AWS
 *          managed encryption keys (SSE-S3 or SSE-KMS). For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html">Using Server-Side
 *             Encryption</a>.</p>
 *          <p>If you request server-side encryption using AWS Key Management Service (SSE-KMS), you can enable an S3 Bucket Key at the object-level. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html">Amazon S3 Bucket Keys</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>
 *          <p>
 *             <b>Access Control List (ACL)-Specific Request
 *          Headers</b>
 *          </p>
 *          <p>You can use headers to grant ACL- based permissions. By default, all objects are
 *          private. Only the owner has full access control. When adding a new object, you can grant
 *          permissions to individual AWS accounts or to predefined groups defined by Amazon S3. These
 *          permissions are then added to the ACL on the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List
 *             (ACL) Overview</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-using-rest-api.html">Managing ACLs Using the REST
 *             API</a>. </p>
 *
 *          <p>
 *             <b>Storage Class Options</b>
 *          </p>
 *          <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The
 *          STANDARD storage class provides high durability and high availability. Depending on
 *          performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses
 *          the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the <i>Amazon S3
 *             Service Developer Guide</i>.</p>
 *
 *
 *          <p>
 *             <b>Versioning</b>
 *          </p>
 *          <p>If you enable versioning for a bucket, Amazon S3 automatically generates a unique version ID
 *          for the object being stored. Amazon S3 returns this ID in the response. When you enable
 *          versioning for a bucket, if Amazon S3 receives multiple write requests for the same object
 *          simultaneously, it stores all of the objects.</p>
 *          <p>For more information about versioning, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/AddingObjectstoVersioningEnabledBuckets.html">Adding Objects to
 *             Versioning Enabled Buckets</a>. For information about returning the versioning state
 *          of a bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html">GetBucketVersioning</a>. </p>
 *
 *
 *          <p class="title">
 *             <b>Related Resources</b>
 *          </p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html">CopyObject</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a>
 *                </p>
 *             </li>
 *          </ul>
 */

var PutObjectCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__extends)(PutObjectCommand, _super); // Start section: command_properties
  // End section: command_properties


  function PutObjectCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  PutObjectCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    this.middlewareStack.use((0,_aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__.getSsecPlugin)(configuration));
    this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "S3Client";
    var commandName = "PutObjectCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.PutObjectRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.PutObjectOutput.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  PutObjectCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.serializeAws_restXmlPutObjectCommand)(input, context);
  };

  PutObjectCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.deserializeAws_restXmlPutObjectCommand)(output, context);
  };

  return PutObjectCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__.Command);



/***/ }),

/***/ 45677:
/*!*******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/UploadPartCommand.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UploadPartCommand": function() { return /* binding */ UploadPartCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_1__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/models_1 */ 61250);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-ssec */ 40285);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);







/**
 * <p>Uploads a part in a multipart upload.</p>
 *          <note>
 *             <p>In this operation, you provide part data in your request. However, you have an option
 *             to specify your existing Amazon S3 object as a data source for the part you are uploading. To
 *             upload a part from an existing object, you use the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html">UploadPartCopy</a> operation.
 *          </p>
 *          </note>
 *
 *          <p>You must initiate a multipart upload (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a>)
 *          before you can upload any part. In response to your initiate request, Amazon S3 returns an
 *          upload ID, a unique identifier, that you must include in your upload part request.</p>
 *          <p>Part numbers can be any number from 1 to 10,000, inclusive. A part number uniquely
 *          identifies a part and also defines its position within the object being created. If you
 *          upload a new part using the same part number that was used with a previous part, the
 *          previously uploaded part is overwritten. Each part must be at least 5 MB in size, except
 *          the last part. There is no size limit on the last part of your multipart upload.</p>
 *          <p>To ensure that data is not corrupted when traversing the network, specify the
 *             <code>Content-MD5</code> header in the upload part request. Amazon S3 checks the part data
 *          against the provided MD5 value. If they do not match, Amazon S3 returns an error. </p>
 *
 *          <p>If the upload request is signed with Signature Version 4, then AWS S3 uses the
 *             <code>x-amz-content-sha256</code> header as a checksum instead of
 *             <code>Content-MD5</code>. For more information see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html">Authenticating Requests: Using the Authorization Header (AWS Signature Version
 *             4)</a>. </p>
 *
 *
 *
 *          <p>
 *             <b>Note:</b> After you initiate multipart upload and upload
 *          one or more parts, you must either complete or abort multipart upload in order to stop
 *          getting charged for storage of the uploaded parts. Only after you either complete or abort
 *          multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts
 *          storage.</p>
 *
 *          <p>For more information on multipart uploads, go to <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html">Multipart Upload Overview</a> in the
 *             <i>Amazon Simple Storage Service Developer Guide </i>.</p>
 *          <p>For information on the permissions required to use the multipart upload API, go to
 *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html">Multipart Upload API and
 *             Permissions</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>
 *
 *          <p>You can optionally request server-side encryption where Amazon S3 encrypts your data as it
 *          writes it to disks in its data centers and decrypts it for you when you access it. You have
 *          the option of providing your own encryption key, or you can use the AWS managed encryption
 *          keys. If you choose to provide your own encryption key, the request headers you provide in
 *          the request must match the headers you used in the request to initiate the upload by using
 *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a>. For more information, go to <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html">Using Server-Side Encryption</a> in
 *          the <i>Amazon Simple Storage Service Developer Guide</i>.</p>
 *
 *          <p>Server-side encryption is supported by the S3 Multipart Upload actions. Unless you are
 *          using a customer-provided encryption key, you don't need to specify the encryption
 *          parameters in each UploadPart request. Instead, you only need to specify the server-side
 *          encryption parameters in the initial Initiate Multipart request. For more information, see
 *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a>.</p>
 *
 *          <p>If you requested server-side encryption using a customer-provided encryption key in your
 *          initiate multipart upload request, you must provide identical encryption information in
 *          each part upload using the following headers.</p>
 *
 *
 *          <ul>
 *             <li>
 *                <p>x-amz-server-side-encryption-customer-algorithm</p>
 *             </li>
 *             <li>
 *                <p>x-amz-server-side-encryption-customer-key</p>
 *             </li>
 *             <li>
 *                <p>x-amz-server-side-encryption-customer-key-MD5</p>
 *             </li>
 *          </ul>
 *
 *          <p class="title">
 *             <b>Special Errors</b>
 *          </p>
 *          <ul>
 *             <li>
 *                <ul>
 *                   <li>
 *                      <p>
 *                         <i>Code: NoSuchUpload</i>
 *                      </p>
 *                   </li>
 *                   <li>
 *                      <p>
 *                         <i>Cause: The specified multipart upload does not exist. The upload
 *                         ID might be invalid, or the multipart upload might have been aborted or
 *                         completed.</i>
 *                      </p>
 *                   </li>
 *                   <li>
 *                      <p>
 *                         <i> HTTP Status Code: 404 Not Found </i>
 *                      </p>
 *                   </li>
 *                   <li>
 *                      <p>
 *                         <i>SOAP Fault Code Prefix: Client</i>
 *                      </p>
 *                   </li>
 *                </ul>
 *             </li>
 *          </ul>
 *
 *
 *
 *
 *
 *
 *          <p class="title">
 *             <b>Related Resources</b>
 *          </p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html">CreateMultipartUpload</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html">CompleteMultipartUpload</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html">AbortMultipartUpload</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html">ListParts</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html">ListMultipartUploads</a>
 *                </p>
 *             </li>
 *          </ul>
 */

var UploadPartCommand = function (_super) {
  (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__extends)(UploadPartCommand, _super); // Start section: command_properties
  // End section: command_properties


  function UploadPartCommand(input) {
    var _this = // Start section: command_constructor
    _super.call(this) || this;

    _this.input = input;
    return _this; // End section: command_constructor
  }
  /**
   * @internal
   */


  UploadPartCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
    this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
    this.middlewareStack.use((0,_aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__.getSsecPlugin)(configuration));
    this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
    var stack = clientStack.concat(this.middlewareStack);
    var logger = configuration.logger;
    var clientName = "S3Client";
    var commandName = "UploadPartCommand";
    var handlerExecutionContext = {
      logger: logger,
      clientName: clientName,
      commandName: commandName,
      inputFilterSensitiveLog: _models_models_1__WEBPACK_IMPORTED_MODULE_5__.UploadPartRequest.filterSensitiveLog,
      outputFilterSensitiveLog: _models_models_1__WEBPACK_IMPORTED_MODULE_5__.UploadPartOutput.filterSensitiveLog
    };
    var requestHandler = configuration.requestHandler;
    return stack.resolve(function (request) {
      return requestHandler.handle(request.request, options || {});
    }, handlerExecutionContext);
  };

  UploadPartCommand.prototype.serialize = function (input, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.serializeAws_restXmlUploadPartCommand)(input, context);
  };

  UploadPartCommand.prototype.deserialize = function (output, context) {
    return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.deserializeAws_restXmlUploadPartCommand)(output, context);
  };

  return UploadPartCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__.Command);



/***/ }),

/***/ 81084:
/*!**************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/endpoints.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultRegionInfoProvider": function() { return /* binding */ defaultRegionInfoProvider; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 3786);
 // Partition default templates

var AWS_TEMPLATE = "s3.{region}.amazonaws.com";
var AWS_CN_TEMPLATE = "s3.{region}.amazonaws.com.cn";
var AWS_ISO_TEMPLATE = "s3.{region}.c2s.ic.gov";
var AWS_ISO_B_TEMPLATE = "s3.{region}.sc2s.sgov.gov";
var AWS_US_GOV_TEMPLATE = "s3.{region}.amazonaws.com"; // Partition regions

var AWS_REGIONS = new Set(["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-south-1", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2"]);
var AWS_CN_REGIONS = new Set(["cn-north-1", "cn-northwest-1"]);
var AWS_ISO_REGIONS = new Set(["us-iso-east-1"]);
var AWS_ISO_B_REGIONS = new Set(["us-isob-east-1"]);
var AWS_US_GOV_REGIONS = new Set(["us-gov-east-1", "us-gov-west-1"]);
var defaultRegionInfoProvider = function defaultRegionInfoProvider(region, options) {
  var regionInfo = undefined;

  switch (region) {
    // First, try to match exact region names.
    case "af-south-1":
      regionInfo = {
        hostname: "s3.af-south-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "ap-east-1":
      regionInfo = {
        hostname: "s3.ap-east-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "ap-northeast-1":
      regionInfo = {
        hostname: "s3.ap-northeast-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "ap-northeast-2":
      regionInfo = {
        hostname: "s3.ap-northeast-2.amazonaws.com",
        partition: "aws"
      };
      break;

    case "ap-south-1":
      regionInfo = {
        hostname: "s3.ap-south-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "ap-southeast-1":
      regionInfo = {
        hostname: "s3.ap-southeast-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "ap-southeast-2":
      regionInfo = {
        hostname: "s3.ap-southeast-2.amazonaws.com",
        partition: "aws"
      };
      break;

    case "aws-global":
      regionInfo = {
        hostname: "s3.amazonaws.com",
        partition: "aws",
        signingRegion: "us-east-1"
      };
      break;

    case "ca-central-1":
      regionInfo = {
        hostname: "s3.ca-central-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "cn-north-1":
      regionInfo = {
        hostname: "s3.cn-north-1.amazonaws.com.cn",
        partition: "aws-cn"
      };
      break;

    case "cn-northwest-1":
      regionInfo = {
        hostname: "s3.cn-northwest-1.amazonaws.com.cn",
        partition: "aws-cn"
      };
      break;

    case "eu-central-1":
      regionInfo = {
        hostname: "s3.eu-central-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "eu-north-1":
      regionInfo = {
        hostname: "s3.eu-north-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "eu-south-1":
      regionInfo = {
        hostname: "s3.eu-south-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "eu-west-1":
      regionInfo = {
        hostname: "s3.eu-west-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "eu-west-2":
      regionInfo = {
        hostname: "s3.eu-west-2.amazonaws.com",
        partition: "aws"
      };
      break;

    case "eu-west-3":
      regionInfo = {
        hostname: "s3.eu-west-3.amazonaws.com",
        partition: "aws"
      };
      break;

    case "fips-us-gov-west-1":
      regionInfo = {
        hostname: "s3-fips.us-gov-west-1.amazonaws.com",
        partition: "aws-us-gov",
        signingRegion: "us-gov-west-1"
      };
      break;

    case "me-south-1":
      regionInfo = {
        hostname: "s3.me-south-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "s3-external-1":
      regionInfo = {
        hostname: "s3-external-1.amazonaws.com",
        partition: "aws",
        signingRegion: "us-east-1"
      };
      break;

    case "sa-east-1":
      regionInfo = {
        hostname: "s3.sa-east-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "us-east-1":
      regionInfo = {
        hostname: "s3.us-east-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "us-east-2":
      regionInfo = {
        hostname: "s3.us-east-2.amazonaws.com",
        partition: "aws"
      };
      break;

    case "us-gov-east-1":
      regionInfo = {
        hostname: "s3.us-gov-east-1.amazonaws.com",
        partition: "aws-us-gov"
      };
      break;

    case "us-gov-west-1":
      regionInfo = {
        hostname: "s3.us-gov-west-1.amazonaws.com",
        partition: "aws-us-gov"
      };
      break;

    case "us-iso-east-1":
      regionInfo = {
        hostname: "s3.us-iso-east-1.c2s.ic.gov",
        partition: "aws-iso"
      };
      break;

    case "us-isob-east-1":
      regionInfo = {
        hostname: "s3.us-isob-east-1.sc2s.sgov.gov",
        partition: "aws-iso-b"
      };
      break;

    case "us-west-1":
      regionInfo = {
        hostname: "s3.us-west-1.amazonaws.com",
        partition: "aws"
      };
      break;

    case "us-west-2":
      regionInfo = {
        hostname: "s3.us-west-2.amazonaws.com",
        partition: "aws"
      };
      break;
    // Next, try to match partition endpoints.

    default:
      if (AWS_REGIONS.has(region)) {
        regionInfo = {
          hostname: AWS_TEMPLATE.replace("{region}", region),
          partition: "aws"
        };
      }

      if (AWS_CN_REGIONS.has(region)) {
        regionInfo = {
          hostname: AWS_CN_TEMPLATE.replace("{region}", region),
          partition: "aws-cn"
        };
      }

      if (AWS_ISO_REGIONS.has(region)) {
        regionInfo = {
          hostname: AWS_ISO_TEMPLATE.replace("{region}", region),
          partition: "aws-iso"
        };
      }

      if (AWS_ISO_B_REGIONS.has(region)) {
        regionInfo = {
          hostname: AWS_ISO_B_TEMPLATE.replace("{region}", region),
          partition: "aws-iso-b"
        };
      }

      if (AWS_US_GOV_REGIONS.has(region)) {
        regionInfo = {
          hostname: AWS_US_GOV_TEMPLATE.replace("{region}", region),
          partition: "aws-us-gov"
        };
      } // Finally, assume it's an AWS partition endpoint.


      if (regionInfo === undefined) {
        regionInfo = {
          hostname: AWS_TEMPLATE.replace("{region}", region),
          partition: "aws"
        };
      }

  }

  return Promise.resolve((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({
    signingService: "s3"
  }, regionInfo));
};

/***/ }),

/***/ 37325:
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/models/models_0.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AbortIncompleteMultipartUpload": function() { return /* binding */ AbortIncompleteMultipartUpload; },
/* harmony export */   "AbortMultipartUploadOutput": function() { return /* binding */ AbortMultipartUploadOutput; },
/* harmony export */   "AbortMultipartUploadRequest": function() { return /* binding */ AbortMultipartUploadRequest; },
/* harmony export */   "NoSuchUpload": function() { return /* binding */ NoSuchUpload; },
/* harmony export */   "AccelerateConfiguration": function() { return /* binding */ AccelerateConfiguration; },
/* harmony export */   "Grantee": function() { return /* binding */ Grantee; },
/* harmony export */   "Grant": function() { return /* binding */ Grant; },
/* harmony export */   "Owner": function() { return /* binding */ Owner; },
/* harmony export */   "AccessControlPolicy": function() { return /* binding */ AccessControlPolicy; },
/* harmony export */   "AccessControlTranslation": function() { return /* binding */ AccessControlTranslation; },
/* harmony export */   "CompleteMultipartUploadOutput": function() { return /* binding */ CompleteMultipartUploadOutput; },
/* harmony export */   "CompletedPart": function() { return /* binding */ CompletedPart; },
/* harmony export */   "CompletedMultipartUpload": function() { return /* binding */ CompletedMultipartUpload; },
/* harmony export */   "CompleteMultipartUploadRequest": function() { return /* binding */ CompleteMultipartUploadRequest; },
/* harmony export */   "CopyObjectResult": function() { return /* binding */ CopyObjectResult; },
/* harmony export */   "CopyObjectOutput": function() { return /* binding */ CopyObjectOutput; },
/* harmony export */   "CopyObjectRequest": function() { return /* binding */ CopyObjectRequest; },
/* harmony export */   "ObjectNotInActiveTierError": function() { return /* binding */ ObjectNotInActiveTierError; },
/* harmony export */   "BucketAlreadyExists": function() { return /* binding */ BucketAlreadyExists; },
/* harmony export */   "BucketAlreadyOwnedByYou": function() { return /* binding */ BucketAlreadyOwnedByYou; },
/* harmony export */   "CreateBucketOutput": function() { return /* binding */ CreateBucketOutput; },
/* harmony export */   "CreateBucketConfiguration": function() { return /* binding */ CreateBucketConfiguration; },
/* harmony export */   "CreateBucketRequest": function() { return /* binding */ CreateBucketRequest; },
/* harmony export */   "CreateMultipartUploadOutput": function() { return /* binding */ CreateMultipartUploadOutput; },
/* harmony export */   "CreateMultipartUploadRequest": function() { return /* binding */ CreateMultipartUploadRequest; },
/* harmony export */   "DeleteBucketRequest": function() { return /* binding */ DeleteBucketRequest; },
/* harmony export */   "DeleteBucketAnalyticsConfigurationRequest": function() { return /* binding */ DeleteBucketAnalyticsConfigurationRequest; },
/* harmony export */   "DeleteBucketCorsRequest": function() { return /* binding */ DeleteBucketCorsRequest; },
/* harmony export */   "DeleteBucketEncryptionRequest": function() { return /* binding */ DeleteBucketEncryptionRequest; },
/* harmony export */   "DeleteBucketIntelligentTieringConfigurationRequest": function() { return /* binding */ DeleteBucketIntelligentTieringConfigurationRequest; },
/* harmony export */   "DeleteBucketInventoryConfigurationRequest": function() { return /* binding */ DeleteBucketInventoryConfigurationRequest; },
/* harmony export */   "DeleteBucketLifecycleRequest": function() { return /* binding */ DeleteBucketLifecycleRequest; },
/* harmony export */   "DeleteBucketMetricsConfigurationRequest": function() { return /* binding */ DeleteBucketMetricsConfigurationRequest; },
/* harmony export */   "DeleteBucketOwnershipControlsRequest": function() { return /* binding */ DeleteBucketOwnershipControlsRequest; },
/* harmony export */   "DeleteBucketPolicyRequest": function() { return /* binding */ DeleteBucketPolicyRequest; },
/* harmony export */   "DeleteBucketReplicationRequest": function() { return /* binding */ DeleteBucketReplicationRequest; },
/* harmony export */   "DeleteBucketTaggingRequest": function() { return /* binding */ DeleteBucketTaggingRequest; },
/* harmony export */   "DeleteBucketWebsiteRequest": function() { return /* binding */ DeleteBucketWebsiteRequest; },
/* harmony export */   "DeleteObjectOutput": function() { return /* binding */ DeleteObjectOutput; },
/* harmony export */   "DeleteObjectRequest": function() { return /* binding */ DeleteObjectRequest; },
/* harmony export */   "DeletedObject": function() { return /* binding */ DeletedObject; },
/* harmony export */   "_Error": function() { return /* binding */ _Error; },
/* harmony export */   "DeleteObjectsOutput": function() { return /* binding */ DeleteObjectsOutput; },
/* harmony export */   "ObjectIdentifier": function() { return /* binding */ ObjectIdentifier; },
/* harmony export */   "Delete": function() { return /* binding */ Delete; },
/* harmony export */   "DeleteObjectsRequest": function() { return /* binding */ DeleteObjectsRequest; },
/* harmony export */   "DeleteObjectTaggingOutput": function() { return /* binding */ DeleteObjectTaggingOutput; },
/* harmony export */   "DeleteObjectTaggingRequest": function() { return /* binding */ DeleteObjectTaggingRequest; },
/* harmony export */   "DeletePublicAccessBlockRequest": function() { return /* binding */ DeletePublicAccessBlockRequest; },
/* harmony export */   "GetBucketAccelerateConfigurationOutput": function() { return /* binding */ GetBucketAccelerateConfigurationOutput; },
/* harmony export */   "GetBucketAccelerateConfigurationRequest": function() { return /* binding */ GetBucketAccelerateConfigurationRequest; },
/* harmony export */   "GetBucketAclOutput": function() { return /* binding */ GetBucketAclOutput; },
/* harmony export */   "GetBucketAclRequest": function() { return /* binding */ GetBucketAclRequest; },
/* harmony export */   "Tag": function() { return /* binding */ Tag; },
/* harmony export */   "AnalyticsAndOperator": function() { return /* binding */ AnalyticsAndOperator; },
/* harmony export */   "AnalyticsFilter": function() { return /* binding */ AnalyticsFilter; },
/* harmony export */   "AnalyticsS3BucketDestination": function() { return /* binding */ AnalyticsS3BucketDestination; },
/* harmony export */   "AnalyticsExportDestination": function() { return /* binding */ AnalyticsExportDestination; },
/* harmony export */   "StorageClassAnalysisDataExport": function() { return /* binding */ StorageClassAnalysisDataExport; },
/* harmony export */   "StorageClassAnalysis": function() { return /* binding */ StorageClassAnalysis; },
/* harmony export */   "AnalyticsConfiguration": function() { return /* binding */ AnalyticsConfiguration; },
/* harmony export */   "GetBucketAnalyticsConfigurationOutput": function() { return /* binding */ GetBucketAnalyticsConfigurationOutput; },
/* harmony export */   "GetBucketAnalyticsConfigurationRequest": function() { return /* binding */ GetBucketAnalyticsConfigurationRequest; },
/* harmony export */   "CORSRule": function() { return /* binding */ CORSRule; },
/* harmony export */   "GetBucketCorsOutput": function() { return /* binding */ GetBucketCorsOutput; },
/* harmony export */   "GetBucketCorsRequest": function() { return /* binding */ GetBucketCorsRequest; },
/* harmony export */   "ServerSideEncryptionByDefault": function() { return /* binding */ ServerSideEncryptionByDefault; },
/* harmony export */   "ServerSideEncryptionRule": function() { return /* binding */ ServerSideEncryptionRule; },
/* harmony export */   "ServerSideEncryptionConfiguration": function() { return /* binding */ ServerSideEncryptionConfiguration; },
/* harmony export */   "GetBucketEncryptionOutput": function() { return /* binding */ GetBucketEncryptionOutput; },
/* harmony export */   "GetBucketEncryptionRequest": function() { return /* binding */ GetBucketEncryptionRequest; },
/* harmony export */   "IntelligentTieringAndOperator": function() { return /* binding */ IntelligentTieringAndOperator; },
/* harmony export */   "IntelligentTieringFilter": function() { return /* binding */ IntelligentTieringFilter; },
/* harmony export */   "Tiering": function() { return /* binding */ Tiering; },
/* harmony export */   "IntelligentTieringConfiguration": function() { return /* binding */ IntelligentTieringConfiguration; },
/* harmony export */   "GetBucketIntelligentTieringConfigurationOutput": function() { return /* binding */ GetBucketIntelligentTieringConfigurationOutput; },
/* harmony export */   "GetBucketIntelligentTieringConfigurationRequest": function() { return /* binding */ GetBucketIntelligentTieringConfigurationRequest; },
/* harmony export */   "SSEKMS": function() { return /* binding */ SSEKMS; },
/* harmony export */   "SSES3": function() { return /* binding */ SSES3; },
/* harmony export */   "InventoryEncryption": function() { return /* binding */ InventoryEncryption; },
/* harmony export */   "InventoryS3BucketDestination": function() { return /* binding */ InventoryS3BucketDestination; },
/* harmony export */   "InventoryDestination": function() { return /* binding */ InventoryDestination; },
/* harmony export */   "InventoryFilter": function() { return /* binding */ InventoryFilter; },
/* harmony export */   "InventorySchedule": function() { return /* binding */ InventorySchedule; },
/* harmony export */   "InventoryConfiguration": function() { return /* binding */ InventoryConfiguration; },
/* harmony export */   "GetBucketInventoryConfigurationOutput": function() { return /* binding */ GetBucketInventoryConfigurationOutput; },
/* harmony export */   "GetBucketInventoryConfigurationRequest": function() { return /* binding */ GetBucketInventoryConfigurationRequest; },
/* harmony export */   "LifecycleExpiration": function() { return /* binding */ LifecycleExpiration; },
/* harmony export */   "LifecycleRuleAndOperator": function() { return /* binding */ LifecycleRuleAndOperator; },
/* harmony export */   "LifecycleRuleFilter": function() { return /* binding */ LifecycleRuleFilter; },
/* harmony export */   "NoncurrentVersionExpiration": function() { return /* binding */ NoncurrentVersionExpiration; },
/* harmony export */   "NoncurrentVersionTransition": function() { return /* binding */ NoncurrentVersionTransition; },
/* harmony export */   "Transition": function() { return /* binding */ Transition; },
/* harmony export */   "LifecycleRule": function() { return /* binding */ LifecycleRule; },
/* harmony export */   "GetBucketLifecycleConfigurationOutput": function() { return /* binding */ GetBucketLifecycleConfigurationOutput; },
/* harmony export */   "GetBucketLifecycleConfigurationRequest": function() { return /* binding */ GetBucketLifecycleConfigurationRequest; },
/* harmony export */   "GetBucketLocationOutput": function() { return /* binding */ GetBucketLocationOutput; },
/* harmony export */   "GetBucketLocationRequest": function() { return /* binding */ GetBucketLocationRequest; },
/* harmony export */   "TargetGrant": function() { return /* binding */ TargetGrant; },
/* harmony export */   "LoggingEnabled": function() { return /* binding */ LoggingEnabled; },
/* harmony export */   "GetBucketLoggingOutput": function() { return /* binding */ GetBucketLoggingOutput; },
/* harmony export */   "GetBucketLoggingRequest": function() { return /* binding */ GetBucketLoggingRequest; },
/* harmony export */   "MetricsAndOperator": function() { return /* binding */ MetricsAndOperator; },
/* harmony export */   "MetricsFilter": function() { return /* binding */ MetricsFilter; },
/* harmony export */   "MetricsConfiguration": function() { return /* binding */ MetricsConfiguration; },
/* harmony export */   "GetBucketMetricsConfigurationOutput": function() { return /* binding */ GetBucketMetricsConfigurationOutput; },
/* harmony export */   "GetBucketMetricsConfigurationRequest": function() { return /* binding */ GetBucketMetricsConfigurationRequest; },
/* harmony export */   "GetBucketNotificationConfigurationRequest": function() { return /* binding */ GetBucketNotificationConfigurationRequest; },
/* harmony export */   "FilterRule": function() { return /* binding */ FilterRule; },
/* harmony export */   "S3KeyFilter": function() { return /* binding */ S3KeyFilter; },
/* harmony export */   "NotificationConfigurationFilter": function() { return /* binding */ NotificationConfigurationFilter; },
/* harmony export */   "LambdaFunctionConfiguration": function() { return /* binding */ LambdaFunctionConfiguration; },
/* harmony export */   "QueueConfiguration": function() { return /* binding */ QueueConfiguration; },
/* harmony export */   "TopicConfiguration": function() { return /* binding */ TopicConfiguration; },
/* harmony export */   "NotificationConfiguration": function() { return /* binding */ NotificationConfiguration; },
/* harmony export */   "OwnershipControlsRule": function() { return /* binding */ OwnershipControlsRule; },
/* harmony export */   "OwnershipControls": function() { return /* binding */ OwnershipControls; },
/* harmony export */   "GetBucketOwnershipControlsOutput": function() { return /* binding */ GetBucketOwnershipControlsOutput; },
/* harmony export */   "GetBucketOwnershipControlsRequest": function() { return /* binding */ GetBucketOwnershipControlsRequest; },
/* harmony export */   "GetBucketPolicyOutput": function() { return /* binding */ GetBucketPolicyOutput; },
/* harmony export */   "GetBucketPolicyRequest": function() { return /* binding */ GetBucketPolicyRequest; },
/* harmony export */   "PolicyStatus": function() { return /* binding */ PolicyStatus; },
/* harmony export */   "GetBucketPolicyStatusOutput": function() { return /* binding */ GetBucketPolicyStatusOutput; },
/* harmony export */   "GetBucketPolicyStatusRequest": function() { return /* binding */ GetBucketPolicyStatusRequest; },
/* harmony export */   "DeleteMarkerReplication": function() { return /* binding */ DeleteMarkerReplication; },
/* harmony export */   "EncryptionConfiguration": function() { return /* binding */ EncryptionConfiguration; },
/* harmony export */   "ReplicationTimeValue": function() { return /* binding */ ReplicationTimeValue; },
/* harmony export */   "Metrics": function() { return /* binding */ Metrics; },
/* harmony export */   "ReplicationTime": function() { return /* binding */ ReplicationTime; },
/* harmony export */   "Destination": function() { return /* binding */ Destination; },
/* harmony export */   "ExistingObjectReplication": function() { return /* binding */ ExistingObjectReplication; },
/* harmony export */   "ReplicationRuleAndOperator": function() { return /* binding */ ReplicationRuleAndOperator; },
/* harmony export */   "ReplicationRuleFilter": function() { return /* binding */ ReplicationRuleFilter; },
/* harmony export */   "ReplicaModifications": function() { return /* binding */ ReplicaModifications; },
/* harmony export */   "SseKmsEncryptedObjects": function() { return /* binding */ SseKmsEncryptedObjects; },
/* harmony export */   "SourceSelectionCriteria": function() { return /* binding */ SourceSelectionCriteria; },
/* harmony export */   "ReplicationRule": function() { return /* binding */ ReplicationRule; },
/* harmony export */   "ReplicationConfiguration": function() { return /* binding */ ReplicationConfiguration; },
/* harmony export */   "GetBucketReplicationOutput": function() { return /* binding */ GetBucketReplicationOutput; },
/* harmony export */   "GetBucketReplicationRequest": function() { return /* binding */ GetBucketReplicationRequest; },
/* harmony export */   "GetBucketRequestPaymentOutput": function() { return /* binding */ GetBucketRequestPaymentOutput; },
/* harmony export */   "GetBucketRequestPaymentRequest": function() { return /* binding */ GetBucketRequestPaymentRequest; },
/* harmony export */   "GetBucketTaggingOutput": function() { return /* binding */ GetBucketTaggingOutput; },
/* harmony export */   "GetBucketTaggingRequest": function() { return /* binding */ GetBucketTaggingRequest; },
/* harmony export */   "GetBucketVersioningOutput": function() { return /* binding */ GetBucketVersioningOutput; },
/* harmony export */   "GetBucketVersioningRequest": function() { return /* binding */ GetBucketVersioningRequest; },
/* harmony export */   "ErrorDocument": function() { return /* binding */ ErrorDocument; },
/* harmony export */   "IndexDocument": function() { return /* binding */ IndexDocument; },
/* harmony export */   "RedirectAllRequestsTo": function() { return /* binding */ RedirectAllRequestsTo; },
/* harmony export */   "Condition": function() { return /* binding */ Condition; },
/* harmony export */   "Redirect": function() { return /* binding */ Redirect; },
/* harmony export */   "RoutingRule": function() { return /* binding */ RoutingRule; },
/* harmony export */   "GetBucketWebsiteOutput": function() { return /* binding */ GetBucketWebsiteOutput; },
/* harmony export */   "GetBucketWebsiteRequest": function() { return /* binding */ GetBucketWebsiteRequest; },
/* harmony export */   "GetObjectOutput": function() { return /* binding */ GetObjectOutput; },
/* harmony export */   "GetObjectRequest": function() { return /* binding */ GetObjectRequest; },
/* harmony export */   "InvalidObjectState": function() { return /* binding */ InvalidObjectState; },
/* harmony export */   "NoSuchKey": function() { return /* binding */ NoSuchKey; },
/* harmony export */   "GetObjectAclOutput": function() { return /* binding */ GetObjectAclOutput; },
/* harmony export */   "GetObjectAclRequest": function() { return /* binding */ GetObjectAclRequest; },
/* harmony export */   "ObjectLockLegalHold": function() { return /* binding */ ObjectLockLegalHold; },
/* harmony export */   "GetObjectLegalHoldOutput": function() { return /* binding */ GetObjectLegalHoldOutput; },
/* harmony export */   "GetObjectLegalHoldRequest": function() { return /* binding */ GetObjectLegalHoldRequest; },
/* harmony export */   "DefaultRetention": function() { return /* binding */ DefaultRetention; },
/* harmony export */   "ObjectLockRule": function() { return /* binding */ ObjectLockRule; },
/* harmony export */   "ObjectLockConfiguration": function() { return /* binding */ ObjectLockConfiguration; },
/* harmony export */   "GetObjectLockConfigurationOutput": function() { return /* binding */ GetObjectLockConfigurationOutput; },
/* harmony export */   "GetObjectLockConfigurationRequest": function() { return /* binding */ GetObjectLockConfigurationRequest; },
/* harmony export */   "ObjectLockRetention": function() { return /* binding */ ObjectLockRetention; },
/* harmony export */   "GetObjectRetentionOutput": function() { return /* binding */ GetObjectRetentionOutput; },
/* harmony export */   "GetObjectRetentionRequest": function() { return /* binding */ GetObjectRetentionRequest; },
/* harmony export */   "GetObjectTaggingOutput": function() { return /* binding */ GetObjectTaggingOutput; },
/* harmony export */   "GetObjectTaggingRequest": function() { return /* binding */ GetObjectTaggingRequest; },
/* harmony export */   "GetObjectTorrentOutput": function() { return /* binding */ GetObjectTorrentOutput; },
/* harmony export */   "GetObjectTorrentRequest": function() { return /* binding */ GetObjectTorrentRequest; },
/* harmony export */   "PublicAccessBlockConfiguration": function() { return /* binding */ PublicAccessBlockConfiguration; },
/* harmony export */   "GetPublicAccessBlockOutput": function() { return /* binding */ GetPublicAccessBlockOutput; },
/* harmony export */   "GetPublicAccessBlockRequest": function() { return /* binding */ GetPublicAccessBlockRequest; },
/* harmony export */   "HeadBucketRequest": function() { return /* binding */ HeadBucketRequest; },
/* harmony export */   "NoSuchBucket": function() { return /* binding */ NoSuchBucket; },
/* harmony export */   "HeadObjectOutput": function() { return /* binding */ HeadObjectOutput; },
/* harmony export */   "HeadObjectRequest": function() { return /* binding */ HeadObjectRequest; },
/* harmony export */   "ListBucketAnalyticsConfigurationsOutput": function() { return /* binding */ ListBucketAnalyticsConfigurationsOutput; },
/* harmony export */   "ListBucketAnalyticsConfigurationsRequest": function() { return /* binding */ ListBucketAnalyticsConfigurationsRequest; },
/* harmony export */   "ListBucketIntelligentTieringConfigurationsOutput": function() { return /* binding */ ListBucketIntelligentTieringConfigurationsOutput; },
/* harmony export */   "ListBucketIntelligentTieringConfigurationsRequest": function() { return /* binding */ ListBucketIntelligentTieringConfigurationsRequest; },
/* harmony export */   "ListBucketInventoryConfigurationsOutput": function() { return /* binding */ ListBucketInventoryConfigurationsOutput; },
/* harmony export */   "ListBucketInventoryConfigurationsRequest": function() { return /* binding */ ListBucketInventoryConfigurationsRequest; },
/* harmony export */   "ListBucketMetricsConfigurationsOutput": function() { return /* binding */ ListBucketMetricsConfigurationsOutput; },
/* harmony export */   "ListBucketMetricsConfigurationsRequest": function() { return /* binding */ ListBucketMetricsConfigurationsRequest; },
/* harmony export */   "Bucket": function() { return /* binding */ Bucket; },
/* harmony export */   "ListBucketsOutput": function() { return /* binding */ ListBucketsOutput; },
/* harmony export */   "CommonPrefix": function() { return /* binding */ CommonPrefix; },
/* harmony export */   "Initiator": function() { return /* binding */ Initiator; },
/* harmony export */   "MultipartUpload": function() { return /* binding */ MultipartUpload; },
/* harmony export */   "ListMultipartUploadsOutput": function() { return /* binding */ ListMultipartUploadsOutput; },
/* harmony export */   "ListMultipartUploadsRequest": function() { return /* binding */ ListMultipartUploadsRequest; },
/* harmony export */   "_Object": function() { return /* binding */ _Object; },
/* harmony export */   "ListObjectsOutput": function() { return /* binding */ ListObjectsOutput; },
/* harmony export */   "ListObjectsRequest": function() { return /* binding */ ListObjectsRequest; },
/* harmony export */   "ListObjectsV2Output": function() { return /* binding */ ListObjectsV2Output; },
/* harmony export */   "ListObjectsV2Request": function() { return /* binding */ ListObjectsV2Request; },
/* harmony export */   "DeleteMarkerEntry": function() { return /* binding */ DeleteMarkerEntry; },
/* harmony export */   "ObjectVersion": function() { return /* binding */ ObjectVersion; },
/* harmony export */   "ListObjectVersionsOutput": function() { return /* binding */ ListObjectVersionsOutput; },
/* harmony export */   "ListObjectVersionsRequest": function() { return /* binding */ ListObjectVersionsRequest; },
/* harmony export */   "Part": function() { return /* binding */ Part; },
/* harmony export */   "ListPartsOutput": function() { return /* binding */ ListPartsOutput; },
/* harmony export */   "ListPartsRequest": function() { return /* binding */ ListPartsRequest; },
/* harmony export */   "PutBucketAccelerateConfigurationRequest": function() { return /* binding */ PutBucketAccelerateConfigurationRequest; },
/* harmony export */   "PutBucketAclRequest": function() { return /* binding */ PutBucketAclRequest; },
/* harmony export */   "PutBucketAnalyticsConfigurationRequest": function() { return /* binding */ PutBucketAnalyticsConfigurationRequest; },
/* harmony export */   "CORSConfiguration": function() { return /* binding */ CORSConfiguration; },
/* harmony export */   "PutBucketCorsRequest": function() { return /* binding */ PutBucketCorsRequest; },
/* harmony export */   "PutBucketEncryptionRequest": function() { return /* binding */ PutBucketEncryptionRequest; },
/* harmony export */   "PutBucketIntelligentTieringConfigurationRequest": function() { return /* binding */ PutBucketIntelligentTieringConfigurationRequest; },
/* harmony export */   "PutBucketInventoryConfigurationRequest": function() { return /* binding */ PutBucketInventoryConfigurationRequest; },
/* harmony export */   "BucketLifecycleConfiguration": function() { return /* binding */ BucketLifecycleConfiguration; },
/* harmony export */   "PutBucketLifecycleConfigurationRequest": function() { return /* binding */ PutBucketLifecycleConfigurationRequest; },
/* harmony export */   "BucketLoggingStatus": function() { return /* binding */ BucketLoggingStatus; },
/* harmony export */   "PutBucketLoggingRequest": function() { return /* binding */ PutBucketLoggingRequest; },
/* harmony export */   "PutBucketMetricsConfigurationRequest": function() { return /* binding */ PutBucketMetricsConfigurationRequest; },
/* harmony export */   "PutBucketNotificationConfigurationRequest": function() { return /* binding */ PutBucketNotificationConfigurationRequest; },
/* harmony export */   "PutBucketOwnershipControlsRequest": function() { return /* binding */ PutBucketOwnershipControlsRequest; },
/* harmony export */   "PutBucketPolicyRequest": function() { return /* binding */ PutBucketPolicyRequest; },
/* harmony export */   "PutBucketReplicationRequest": function() { return /* binding */ PutBucketReplicationRequest; },
/* harmony export */   "RequestPaymentConfiguration": function() { return /* binding */ RequestPaymentConfiguration; },
/* harmony export */   "PutBucketRequestPaymentRequest": function() { return /* binding */ PutBucketRequestPaymentRequest; },
/* harmony export */   "Tagging": function() { return /* binding */ Tagging; },
/* harmony export */   "PutBucketTaggingRequest": function() { return /* binding */ PutBucketTaggingRequest; },
/* harmony export */   "VersioningConfiguration": function() { return /* binding */ VersioningConfiguration; },
/* harmony export */   "PutBucketVersioningRequest": function() { return /* binding */ PutBucketVersioningRequest; },
/* harmony export */   "WebsiteConfiguration": function() { return /* binding */ WebsiteConfiguration; },
/* harmony export */   "PutBucketWebsiteRequest": function() { return /* binding */ PutBucketWebsiteRequest; },
/* harmony export */   "PutObjectOutput": function() { return /* binding */ PutObjectOutput; },
/* harmony export */   "PutObjectRequest": function() { return /* binding */ PutObjectRequest; },
/* harmony export */   "PutObjectAclOutput": function() { return /* binding */ PutObjectAclOutput; },
/* harmony export */   "PutObjectAclRequest": function() { return /* binding */ PutObjectAclRequest; },
/* harmony export */   "PutObjectLegalHoldOutput": function() { return /* binding */ PutObjectLegalHoldOutput; },
/* harmony export */   "PutObjectLegalHoldRequest": function() { return /* binding */ PutObjectLegalHoldRequest; },
/* harmony export */   "PutObjectLockConfigurationOutput": function() { return /* binding */ PutObjectLockConfigurationOutput; },
/* harmony export */   "PutObjectLockConfigurationRequest": function() { return /* binding */ PutObjectLockConfigurationRequest; },
/* harmony export */   "PutObjectRetentionOutput": function() { return /* binding */ PutObjectRetentionOutput; },
/* harmony export */   "PutObjectRetentionRequest": function() { return /* binding */ PutObjectRetentionRequest; },
/* harmony export */   "PutObjectTaggingOutput": function() { return /* binding */ PutObjectTaggingOutput; },
/* harmony export */   "PutObjectTaggingRequest": function() { return /* binding */ PutObjectTaggingRequest; },
/* harmony export */   "PutPublicAccessBlockRequest": function() { return /* binding */ PutPublicAccessBlockRequest; },
/* harmony export */   "ObjectAlreadyInActiveTierError": function() { return /* binding */ ObjectAlreadyInActiveTierError; },
/* harmony export */   "RestoreObjectOutput": function() { return /* binding */ RestoreObjectOutput; },
/* harmony export */   "GlacierJobParameters": function() { return /* binding */ GlacierJobParameters; },
/* harmony export */   "Encryption": function() { return /* binding */ Encryption; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);


var AbortIncompleteMultipartUpload;

(function (AbortIncompleteMultipartUpload) {
  AbortIncompleteMultipartUpload.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(AbortIncompleteMultipartUpload || (AbortIncompleteMultipartUpload = {}));

var AbortMultipartUploadOutput;

(function (AbortMultipartUploadOutput) {
  AbortMultipartUploadOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(AbortMultipartUploadOutput || (AbortMultipartUploadOutput = {}));

var AbortMultipartUploadRequest;

(function (AbortMultipartUploadRequest) {
  AbortMultipartUploadRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(AbortMultipartUploadRequest || (AbortMultipartUploadRequest = {}));

var NoSuchUpload;

(function (NoSuchUpload) {
  NoSuchUpload.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(NoSuchUpload || (NoSuchUpload = {}));

var AccelerateConfiguration;

(function (AccelerateConfiguration) {
  AccelerateConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(AccelerateConfiguration || (AccelerateConfiguration = {}));

var Grantee;

(function (Grantee) {
  Grantee.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Grantee || (Grantee = {}));

var Grant;

(function (Grant) {
  Grant.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Grant || (Grant = {}));

var Owner;

(function (Owner) {
  Owner.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Owner || (Owner = {}));

var AccessControlPolicy;

(function (AccessControlPolicy) {
  AccessControlPolicy.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(AccessControlPolicy || (AccessControlPolicy = {}));

var AccessControlTranslation;

(function (AccessControlTranslation) {
  AccessControlTranslation.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(AccessControlTranslation || (AccessControlTranslation = {}));

var CompleteMultipartUploadOutput;

(function (CompleteMultipartUploadOutput) {
  CompleteMultipartUploadOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSEKMSKeyId && {
      SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(CompleteMultipartUploadOutput || (CompleteMultipartUploadOutput = {}));

var CompletedPart;

(function (CompletedPart) {
  CompletedPart.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(CompletedPart || (CompletedPart = {}));

var CompletedMultipartUpload;

(function (CompletedMultipartUpload) {
  CompletedMultipartUpload.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(CompletedMultipartUpload || (CompletedMultipartUpload = {}));

var CompleteMultipartUploadRequest;

(function (CompleteMultipartUploadRequest) {
  CompleteMultipartUploadRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(CompleteMultipartUploadRequest || (CompleteMultipartUploadRequest = {}));

var CopyObjectResult;

(function (CopyObjectResult) {
  CopyObjectResult.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(CopyObjectResult || (CopyObjectResult = {}));

var CopyObjectOutput;

(function (CopyObjectOutput) {
  CopyObjectOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSEKMSKeyId && {
      SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    }), obj.SSEKMSEncryptionContext && {
      SSEKMSEncryptionContext: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(CopyObjectOutput || (CopyObjectOutput = {}));

var CopyObjectRequest;

(function (CopyObjectRequest) {
  CopyObjectRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSECustomerKey && {
      SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    }), obj.SSEKMSKeyId && {
      SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    }), obj.SSEKMSEncryptionContext && {
      SSEKMSEncryptionContext: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    }), obj.CopySourceSSECustomerKey && {
      CopySourceSSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(CopyObjectRequest || (CopyObjectRequest = {}));

var ObjectNotInActiveTierError;

(function (ObjectNotInActiveTierError) {
  ObjectNotInActiveTierError.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ObjectNotInActiveTierError || (ObjectNotInActiveTierError = {}));

var BucketAlreadyExists;

(function (BucketAlreadyExists) {
  BucketAlreadyExists.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(BucketAlreadyExists || (BucketAlreadyExists = {}));

var BucketAlreadyOwnedByYou;

(function (BucketAlreadyOwnedByYou) {
  BucketAlreadyOwnedByYou.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(BucketAlreadyOwnedByYou || (BucketAlreadyOwnedByYou = {}));

var CreateBucketOutput;

(function (CreateBucketOutput) {
  CreateBucketOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(CreateBucketOutput || (CreateBucketOutput = {}));

var CreateBucketConfiguration;

(function (CreateBucketConfiguration) {
  CreateBucketConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(CreateBucketConfiguration || (CreateBucketConfiguration = {}));

var CreateBucketRequest;

(function (CreateBucketRequest) {
  CreateBucketRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(CreateBucketRequest || (CreateBucketRequest = {}));

var CreateMultipartUploadOutput;

(function (CreateMultipartUploadOutput) {
  CreateMultipartUploadOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSEKMSKeyId && {
      SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    }), obj.SSEKMSEncryptionContext && {
      SSEKMSEncryptionContext: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(CreateMultipartUploadOutput || (CreateMultipartUploadOutput = {}));

var CreateMultipartUploadRequest;

(function (CreateMultipartUploadRequest) {
  CreateMultipartUploadRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSECustomerKey && {
      SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    }), obj.SSEKMSKeyId && {
      SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    }), obj.SSEKMSEncryptionContext && {
      SSEKMSEncryptionContext: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(CreateMultipartUploadRequest || (CreateMultipartUploadRequest = {}));

var DeleteBucketRequest;

(function (DeleteBucketRequest) {
  DeleteBucketRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteBucketRequest || (DeleteBucketRequest = {}));

var DeleteBucketAnalyticsConfigurationRequest;

(function (DeleteBucketAnalyticsConfigurationRequest) {
  DeleteBucketAnalyticsConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteBucketAnalyticsConfigurationRequest || (DeleteBucketAnalyticsConfigurationRequest = {}));

var DeleteBucketCorsRequest;

(function (DeleteBucketCorsRequest) {
  DeleteBucketCorsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteBucketCorsRequest || (DeleteBucketCorsRequest = {}));

var DeleteBucketEncryptionRequest;

(function (DeleteBucketEncryptionRequest) {
  DeleteBucketEncryptionRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteBucketEncryptionRequest || (DeleteBucketEncryptionRequest = {}));

var DeleteBucketIntelligentTieringConfigurationRequest;

(function (DeleteBucketIntelligentTieringConfigurationRequest) {
  DeleteBucketIntelligentTieringConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteBucketIntelligentTieringConfigurationRequest || (DeleteBucketIntelligentTieringConfigurationRequest = {}));

var DeleteBucketInventoryConfigurationRequest;

(function (DeleteBucketInventoryConfigurationRequest) {
  DeleteBucketInventoryConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteBucketInventoryConfigurationRequest || (DeleteBucketInventoryConfigurationRequest = {}));

var DeleteBucketLifecycleRequest;

(function (DeleteBucketLifecycleRequest) {
  DeleteBucketLifecycleRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteBucketLifecycleRequest || (DeleteBucketLifecycleRequest = {}));

var DeleteBucketMetricsConfigurationRequest;

(function (DeleteBucketMetricsConfigurationRequest) {
  DeleteBucketMetricsConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteBucketMetricsConfigurationRequest || (DeleteBucketMetricsConfigurationRequest = {}));

var DeleteBucketOwnershipControlsRequest;

(function (DeleteBucketOwnershipControlsRequest) {
  DeleteBucketOwnershipControlsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteBucketOwnershipControlsRequest || (DeleteBucketOwnershipControlsRequest = {}));

var DeleteBucketPolicyRequest;

(function (DeleteBucketPolicyRequest) {
  DeleteBucketPolicyRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteBucketPolicyRequest || (DeleteBucketPolicyRequest = {}));

var DeleteBucketReplicationRequest;

(function (DeleteBucketReplicationRequest) {
  DeleteBucketReplicationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteBucketReplicationRequest || (DeleteBucketReplicationRequest = {}));

var DeleteBucketTaggingRequest;

(function (DeleteBucketTaggingRequest) {
  DeleteBucketTaggingRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteBucketTaggingRequest || (DeleteBucketTaggingRequest = {}));

var DeleteBucketWebsiteRequest;

(function (DeleteBucketWebsiteRequest) {
  DeleteBucketWebsiteRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteBucketWebsiteRequest || (DeleteBucketWebsiteRequest = {}));

var DeleteObjectOutput;

(function (DeleteObjectOutput) {
  DeleteObjectOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteObjectOutput || (DeleteObjectOutput = {}));

var DeleteObjectRequest;

(function (DeleteObjectRequest) {
  DeleteObjectRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteObjectRequest || (DeleteObjectRequest = {}));

var DeletedObject;

(function (DeletedObject) {
  DeletedObject.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeletedObject || (DeletedObject = {}));

var _Error;

(function (_Error) {
  _Error.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(_Error || (_Error = {}));

var DeleteObjectsOutput;

(function (DeleteObjectsOutput) {
  DeleteObjectsOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteObjectsOutput || (DeleteObjectsOutput = {}));

var ObjectIdentifier;

(function (ObjectIdentifier) {
  ObjectIdentifier.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ObjectIdentifier || (ObjectIdentifier = {}));

var Delete;

(function (Delete) {
  Delete.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Delete || (Delete = {}));

var DeleteObjectsRequest;

(function (DeleteObjectsRequest) {
  DeleteObjectsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteObjectsRequest || (DeleteObjectsRequest = {}));

var DeleteObjectTaggingOutput;

(function (DeleteObjectTaggingOutput) {
  DeleteObjectTaggingOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteObjectTaggingOutput || (DeleteObjectTaggingOutput = {}));

var DeleteObjectTaggingRequest;

(function (DeleteObjectTaggingRequest) {
  DeleteObjectTaggingRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteObjectTaggingRequest || (DeleteObjectTaggingRequest = {}));

var DeletePublicAccessBlockRequest;

(function (DeletePublicAccessBlockRequest) {
  DeletePublicAccessBlockRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeletePublicAccessBlockRequest || (DeletePublicAccessBlockRequest = {}));

var GetBucketAccelerateConfigurationOutput;

(function (GetBucketAccelerateConfigurationOutput) {
  GetBucketAccelerateConfigurationOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketAccelerateConfigurationOutput || (GetBucketAccelerateConfigurationOutput = {}));

var GetBucketAccelerateConfigurationRequest;

(function (GetBucketAccelerateConfigurationRequest) {
  GetBucketAccelerateConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketAccelerateConfigurationRequest || (GetBucketAccelerateConfigurationRequest = {}));

var GetBucketAclOutput;

(function (GetBucketAclOutput) {
  GetBucketAclOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketAclOutput || (GetBucketAclOutput = {}));

var GetBucketAclRequest;

(function (GetBucketAclRequest) {
  GetBucketAclRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketAclRequest || (GetBucketAclRequest = {}));

var Tag;

(function (Tag) {
  Tag.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Tag || (Tag = {}));

var AnalyticsAndOperator;

(function (AnalyticsAndOperator) {
  AnalyticsAndOperator.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(AnalyticsAndOperator || (AnalyticsAndOperator = {}));

var AnalyticsFilter;

(function (AnalyticsFilter) {
  AnalyticsFilter.visit = function (value, visitor) {
    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);
    if (value.Tag !== undefined) return visitor.Tag(value.Tag);
    if (value.And !== undefined) return visitor.And(value.And);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  };

  AnalyticsFilter.filterSensitiveLog = function (obj) {
    var _a;

    if (obj.Prefix !== undefined) return {
      Prefix: obj.Prefix
    };
    if (obj.Tag !== undefined) return {
      Tag: Tag.filterSensitiveLog(obj.Tag)
    };
    if (obj.And !== undefined) return {
      And: AnalyticsAndOperator.filterSensitiveLog(obj.And)
    };
    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = "UNKNOWN", _a;
  };
})(AnalyticsFilter || (AnalyticsFilter = {}));

var AnalyticsS3BucketDestination;

(function (AnalyticsS3BucketDestination) {
  AnalyticsS3BucketDestination.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(AnalyticsS3BucketDestination || (AnalyticsS3BucketDestination = {}));

var AnalyticsExportDestination;

(function (AnalyticsExportDestination) {
  AnalyticsExportDestination.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(AnalyticsExportDestination || (AnalyticsExportDestination = {}));

var StorageClassAnalysisDataExport;

(function (StorageClassAnalysisDataExport) {
  StorageClassAnalysisDataExport.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(StorageClassAnalysisDataExport || (StorageClassAnalysisDataExport = {}));

var StorageClassAnalysis;

(function (StorageClassAnalysis) {
  StorageClassAnalysis.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(StorageClassAnalysis || (StorageClassAnalysis = {}));

var AnalyticsConfiguration;

(function (AnalyticsConfiguration) {
  AnalyticsConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.Filter && {
      Filter: AnalyticsFilter.filterSensitiveLog(obj.Filter)
    });
  };
})(AnalyticsConfiguration || (AnalyticsConfiguration = {}));

var GetBucketAnalyticsConfigurationOutput;

(function (GetBucketAnalyticsConfigurationOutput) {
  GetBucketAnalyticsConfigurationOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.AnalyticsConfiguration && {
      AnalyticsConfiguration: AnalyticsConfiguration.filterSensitiveLog(obj.AnalyticsConfiguration)
    });
  };
})(GetBucketAnalyticsConfigurationOutput || (GetBucketAnalyticsConfigurationOutput = {}));

var GetBucketAnalyticsConfigurationRequest;

(function (GetBucketAnalyticsConfigurationRequest) {
  GetBucketAnalyticsConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketAnalyticsConfigurationRequest || (GetBucketAnalyticsConfigurationRequest = {}));

var CORSRule;

(function (CORSRule) {
  CORSRule.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(CORSRule || (CORSRule = {}));

var GetBucketCorsOutput;

(function (GetBucketCorsOutput) {
  GetBucketCorsOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketCorsOutput || (GetBucketCorsOutput = {}));

var GetBucketCorsRequest;

(function (GetBucketCorsRequest) {
  GetBucketCorsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketCorsRequest || (GetBucketCorsRequest = {}));

var ServerSideEncryptionByDefault;

(function (ServerSideEncryptionByDefault) {
  ServerSideEncryptionByDefault.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.KMSMasterKeyID && {
      KMSMasterKeyID: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(ServerSideEncryptionByDefault || (ServerSideEncryptionByDefault = {}));

var ServerSideEncryptionRule;

(function (ServerSideEncryptionRule) {
  ServerSideEncryptionRule.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.ApplyServerSideEncryptionByDefault && {
      ApplyServerSideEncryptionByDefault: ServerSideEncryptionByDefault.filterSensitiveLog(obj.ApplyServerSideEncryptionByDefault)
    });
  };
})(ServerSideEncryptionRule || (ServerSideEncryptionRule = {}));

var ServerSideEncryptionConfiguration;

(function (ServerSideEncryptionConfiguration) {
  ServerSideEncryptionConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.Rules && {
      Rules: obj.Rules.map(function (item) {
        return ServerSideEncryptionRule.filterSensitiveLog(item);
      })
    });
  };
})(ServerSideEncryptionConfiguration || (ServerSideEncryptionConfiguration = {}));

var GetBucketEncryptionOutput;

(function (GetBucketEncryptionOutput) {
  GetBucketEncryptionOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.ServerSideEncryptionConfiguration && {
      ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration.filterSensitiveLog(obj.ServerSideEncryptionConfiguration)
    });
  };
})(GetBucketEncryptionOutput || (GetBucketEncryptionOutput = {}));

var GetBucketEncryptionRequest;

(function (GetBucketEncryptionRequest) {
  GetBucketEncryptionRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketEncryptionRequest || (GetBucketEncryptionRequest = {}));

var IntelligentTieringAndOperator;

(function (IntelligentTieringAndOperator) {
  IntelligentTieringAndOperator.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(IntelligentTieringAndOperator || (IntelligentTieringAndOperator = {}));

var IntelligentTieringFilter;

(function (IntelligentTieringFilter) {
  IntelligentTieringFilter.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(IntelligentTieringFilter || (IntelligentTieringFilter = {}));

var Tiering;

(function (Tiering) {
  Tiering.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Tiering || (Tiering = {}));

var IntelligentTieringConfiguration;

(function (IntelligentTieringConfiguration) {
  IntelligentTieringConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(IntelligentTieringConfiguration || (IntelligentTieringConfiguration = {}));

var GetBucketIntelligentTieringConfigurationOutput;

(function (GetBucketIntelligentTieringConfigurationOutput) {
  GetBucketIntelligentTieringConfigurationOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketIntelligentTieringConfigurationOutput || (GetBucketIntelligentTieringConfigurationOutput = {}));

var GetBucketIntelligentTieringConfigurationRequest;

(function (GetBucketIntelligentTieringConfigurationRequest) {
  GetBucketIntelligentTieringConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketIntelligentTieringConfigurationRequest || (GetBucketIntelligentTieringConfigurationRequest = {}));

var SSEKMS;

(function (SSEKMS) {
  SSEKMS.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.KeyId && {
      KeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(SSEKMS || (SSEKMS = {}));

var SSES3;

(function (SSES3) {
  SSES3.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(SSES3 || (SSES3 = {}));

var InventoryEncryption;

(function (InventoryEncryption) {
  InventoryEncryption.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSEKMS && {
      SSEKMS: SSEKMS.filterSensitiveLog(obj.SSEKMS)
    });
  };
})(InventoryEncryption || (InventoryEncryption = {}));

var InventoryS3BucketDestination;

(function (InventoryS3BucketDestination) {
  InventoryS3BucketDestination.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.Encryption && {
      Encryption: InventoryEncryption.filterSensitiveLog(obj.Encryption)
    });
  };
})(InventoryS3BucketDestination || (InventoryS3BucketDestination = {}));

var InventoryDestination;

(function (InventoryDestination) {
  InventoryDestination.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.S3BucketDestination && {
      S3BucketDestination: InventoryS3BucketDestination.filterSensitiveLog(obj.S3BucketDestination)
    });
  };
})(InventoryDestination || (InventoryDestination = {}));

var InventoryFilter;

(function (InventoryFilter) {
  InventoryFilter.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(InventoryFilter || (InventoryFilter = {}));

var InventorySchedule;

(function (InventorySchedule) {
  InventorySchedule.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(InventorySchedule || (InventorySchedule = {}));

var InventoryConfiguration;

(function (InventoryConfiguration) {
  InventoryConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.Destination && {
      Destination: InventoryDestination.filterSensitiveLog(obj.Destination)
    });
  };
})(InventoryConfiguration || (InventoryConfiguration = {}));

var GetBucketInventoryConfigurationOutput;

(function (GetBucketInventoryConfigurationOutput) {
  GetBucketInventoryConfigurationOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.InventoryConfiguration && {
      InventoryConfiguration: InventoryConfiguration.filterSensitiveLog(obj.InventoryConfiguration)
    });
  };
})(GetBucketInventoryConfigurationOutput || (GetBucketInventoryConfigurationOutput = {}));

var GetBucketInventoryConfigurationRequest;

(function (GetBucketInventoryConfigurationRequest) {
  GetBucketInventoryConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketInventoryConfigurationRequest || (GetBucketInventoryConfigurationRequest = {}));

var LifecycleExpiration;

(function (LifecycleExpiration) {
  LifecycleExpiration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(LifecycleExpiration || (LifecycleExpiration = {}));

var LifecycleRuleAndOperator;

(function (LifecycleRuleAndOperator) {
  LifecycleRuleAndOperator.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(LifecycleRuleAndOperator || (LifecycleRuleAndOperator = {}));

var LifecycleRuleFilter;

(function (LifecycleRuleFilter) {
  LifecycleRuleFilter.visit = function (value, visitor) {
    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);
    if (value.Tag !== undefined) return visitor.Tag(value.Tag);
    if (value.And !== undefined) return visitor.And(value.And);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  };

  LifecycleRuleFilter.filterSensitiveLog = function (obj) {
    var _a;

    if (obj.Prefix !== undefined) return {
      Prefix: obj.Prefix
    };
    if (obj.Tag !== undefined) return {
      Tag: Tag.filterSensitiveLog(obj.Tag)
    };
    if (obj.And !== undefined) return {
      And: LifecycleRuleAndOperator.filterSensitiveLog(obj.And)
    };
    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = "UNKNOWN", _a;
  };
})(LifecycleRuleFilter || (LifecycleRuleFilter = {}));

var NoncurrentVersionExpiration;

(function (NoncurrentVersionExpiration) {
  NoncurrentVersionExpiration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(NoncurrentVersionExpiration || (NoncurrentVersionExpiration = {}));

var NoncurrentVersionTransition;

(function (NoncurrentVersionTransition) {
  NoncurrentVersionTransition.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(NoncurrentVersionTransition || (NoncurrentVersionTransition = {}));

var Transition;

(function (Transition) {
  Transition.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Transition || (Transition = {}));

var LifecycleRule;

(function (LifecycleRule) {
  LifecycleRule.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.Filter && {
      Filter: LifecycleRuleFilter.filterSensitiveLog(obj.Filter)
    });
  };
})(LifecycleRule || (LifecycleRule = {}));

var GetBucketLifecycleConfigurationOutput;

(function (GetBucketLifecycleConfigurationOutput) {
  GetBucketLifecycleConfigurationOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.Rules && {
      Rules: obj.Rules.map(function (item) {
        return LifecycleRule.filterSensitiveLog(item);
      })
    });
  };
})(GetBucketLifecycleConfigurationOutput || (GetBucketLifecycleConfigurationOutput = {}));

var GetBucketLifecycleConfigurationRequest;

(function (GetBucketLifecycleConfigurationRequest) {
  GetBucketLifecycleConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketLifecycleConfigurationRequest || (GetBucketLifecycleConfigurationRequest = {}));

var GetBucketLocationOutput;

(function (GetBucketLocationOutput) {
  GetBucketLocationOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketLocationOutput || (GetBucketLocationOutput = {}));

var GetBucketLocationRequest;

(function (GetBucketLocationRequest) {
  GetBucketLocationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketLocationRequest || (GetBucketLocationRequest = {}));

var TargetGrant;

(function (TargetGrant) {
  TargetGrant.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(TargetGrant || (TargetGrant = {}));

var LoggingEnabled;

(function (LoggingEnabled) {
  LoggingEnabled.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(LoggingEnabled || (LoggingEnabled = {}));

var GetBucketLoggingOutput;

(function (GetBucketLoggingOutput) {
  GetBucketLoggingOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketLoggingOutput || (GetBucketLoggingOutput = {}));

var GetBucketLoggingRequest;

(function (GetBucketLoggingRequest) {
  GetBucketLoggingRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketLoggingRequest || (GetBucketLoggingRequest = {}));

var MetricsAndOperator;

(function (MetricsAndOperator) {
  MetricsAndOperator.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(MetricsAndOperator || (MetricsAndOperator = {}));

var MetricsFilter;

(function (MetricsFilter) {
  MetricsFilter.visit = function (value, visitor) {
    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);
    if (value.Tag !== undefined) return visitor.Tag(value.Tag);
    if (value.And !== undefined) return visitor.And(value.And);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  };

  MetricsFilter.filterSensitiveLog = function (obj) {
    var _a;

    if (obj.Prefix !== undefined) return {
      Prefix: obj.Prefix
    };
    if (obj.Tag !== undefined) return {
      Tag: Tag.filterSensitiveLog(obj.Tag)
    };
    if (obj.And !== undefined) return {
      And: MetricsAndOperator.filterSensitiveLog(obj.And)
    };
    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = "UNKNOWN", _a;
  };
})(MetricsFilter || (MetricsFilter = {}));

var MetricsConfiguration;

(function (MetricsConfiguration) {
  MetricsConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.Filter && {
      Filter: MetricsFilter.filterSensitiveLog(obj.Filter)
    });
  };
})(MetricsConfiguration || (MetricsConfiguration = {}));

var GetBucketMetricsConfigurationOutput;

(function (GetBucketMetricsConfigurationOutput) {
  GetBucketMetricsConfigurationOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.MetricsConfiguration && {
      MetricsConfiguration: MetricsConfiguration.filterSensitiveLog(obj.MetricsConfiguration)
    });
  };
})(GetBucketMetricsConfigurationOutput || (GetBucketMetricsConfigurationOutput = {}));

var GetBucketMetricsConfigurationRequest;

(function (GetBucketMetricsConfigurationRequest) {
  GetBucketMetricsConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketMetricsConfigurationRequest || (GetBucketMetricsConfigurationRequest = {}));

var GetBucketNotificationConfigurationRequest;

(function (GetBucketNotificationConfigurationRequest) {
  GetBucketNotificationConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketNotificationConfigurationRequest || (GetBucketNotificationConfigurationRequest = {}));

var FilterRule;

(function (FilterRule) {
  FilterRule.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(FilterRule || (FilterRule = {}));

var S3KeyFilter;

(function (S3KeyFilter) {
  S3KeyFilter.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(S3KeyFilter || (S3KeyFilter = {}));

var NotificationConfigurationFilter;

(function (NotificationConfigurationFilter) {
  NotificationConfigurationFilter.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(NotificationConfigurationFilter || (NotificationConfigurationFilter = {}));

var LambdaFunctionConfiguration;

(function (LambdaFunctionConfiguration) {
  LambdaFunctionConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(LambdaFunctionConfiguration || (LambdaFunctionConfiguration = {}));

var QueueConfiguration;

(function (QueueConfiguration) {
  QueueConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(QueueConfiguration || (QueueConfiguration = {}));

var TopicConfiguration;

(function (TopicConfiguration) {
  TopicConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(TopicConfiguration || (TopicConfiguration = {}));

var NotificationConfiguration;

(function (NotificationConfiguration) {
  NotificationConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(NotificationConfiguration || (NotificationConfiguration = {}));

var OwnershipControlsRule;

(function (OwnershipControlsRule) {
  OwnershipControlsRule.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(OwnershipControlsRule || (OwnershipControlsRule = {}));

var OwnershipControls;

(function (OwnershipControls) {
  OwnershipControls.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(OwnershipControls || (OwnershipControls = {}));

var GetBucketOwnershipControlsOutput;

(function (GetBucketOwnershipControlsOutput) {
  GetBucketOwnershipControlsOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketOwnershipControlsOutput || (GetBucketOwnershipControlsOutput = {}));

var GetBucketOwnershipControlsRequest;

(function (GetBucketOwnershipControlsRequest) {
  GetBucketOwnershipControlsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketOwnershipControlsRequest || (GetBucketOwnershipControlsRequest = {}));

var GetBucketPolicyOutput;

(function (GetBucketPolicyOutput) {
  GetBucketPolicyOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketPolicyOutput || (GetBucketPolicyOutput = {}));

var GetBucketPolicyRequest;

(function (GetBucketPolicyRequest) {
  GetBucketPolicyRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketPolicyRequest || (GetBucketPolicyRequest = {}));

var PolicyStatus;

(function (PolicyStatus) {
  PolicyStatus.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PolicyStatus || (PolicyStatus = {}));

var GetBucketPolicyStatusOutput;

(function (GetBucketPolicyStatusOutput) {
  GetBucketPolicyStatusOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketPolicyStatusOutput || (GetBucketPolicyStatusOutput = {}));

var GetBucketPolicyStatusRequest;

(function (GetBucketPolicyStatusRequest) {
  GetBucketPolicyStatusRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketPolicyStatusRequest || (GetBucketPolicyStatusRequest = {}));

var DeleteMarkerReplication;

(function (DeleteMarkerReplication) {
  DeleteMarkerReplication.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteMarkerReplication || (DeleteMarkerReplication = {}));

var EncryptionConfiguration;

(function (EncryptionConfiguration) {
  EncryptionConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(EncryptionConfiguration || (EncryptionConfiguration = {}));

var ReplicationTimeValue;

(function (ReplicationTimeValue) {
  ReplicationTimeValue.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ReplicationTimeValue || (ReplicationTimeValue = {}));

var Metrics;

(function (Metrics) {
  Metrics.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Metrics || (Metrics = {}));

var ReplicationTime;

(function (ReplicationTime) {
  ReplicationTime.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ReplicationTime || (ReplicationTime = {}));

var Destination;

(function (Destination) {
  Destination.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Destination || (Destination = {}));

var ExistingObjectReplication;

(function (ExistingObjectReplication) {
  ExistingObjectReplication.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ExistingObjectReplication || (ExistingObjectReplication = {}));

var ReplicationRuleAndOperator;

(function (ReplicationRuleAndOperator) {
  ReplicationRuleAndOperator.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ReplicationRuleAndOperator || (ReplicationRuleAndOperator = {}));

var ReplicationRuleFilter;

(function (ReplicationRuleFilter) {
  ReplicationRuleFilter.visit = function (value, visitor) {
    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);
    if (value.Tag !== undefined) return visitor.Tag(value.Tag);
    if (value.And !== undefined) return visitor.And(value.And);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  };

  ReplicationRuleFilter.filterSensitiveLog = function (obj) {
    var _a;

    if (obj.Prefix !== undefined) return {
      Prefix: obj.Prefix
    };
    if (obj.Tag !== undefined) return {
      Tag: Tag.filterSensitiveLog(obj.Tag)
    };
    if (obj.And !== undefined) return {
      And: ReplicationRuleAndOperator.filterSensitiveLog(obj.And)
    };
    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = "UNKNOWN", _a;
  };
})(ReplicationRuleFilter || (ReplicationRuleFilter = {}));

var ReplicaModifications;

(function (ReplicaModifications) {
  ReplicaModifications.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ReplicaModifications || (ReplicaModifications = {}));

var SseKmsEncryptedObjects;

(function (SseKmsEncryptedObjects) {
  SseKmsEncryptedObjects.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(SseKmsEncryptedObjects || (SseKmsEncryptedObjects = {}));

var SourceSelectionCriteria;

(function (SourceSelectionCriteria) {
  SourceSelectionCriteria.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(SourceSelectionCriteria || (SourceSelectionCriteria = {}));

var ReplicationRule;

(function (ReplicationRule) {
  ReplicationRule.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.Filter && {
      Filter: ReplicationRuleFilter.filterSensitiveLog(obj.Filter)
    });
  };
})(ReplicationRule || (ReplicationRule = {}));

var ReplicationConfiguration;

(function (ReplicationConfiguration) {
  ReplicationConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.Rules && {
      Rules: obj.Rules.map(function (item) {
        return ReplicationRule.filterSensitiveLog(item);
      })
    });
  };
})(ReplicationConfiguration || (ReplicationConfiguration = {}));

var GetBucketReplicationOutput;

(function (GetBucketReplicationOutput) {
  GetBucketReplicationOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.ReplicationConfiguration && {
      ReplicationConfiguration: ReplicationConfiguration.filterSensitiveLog(obj.ReplicationConfiguration)
    });
  };
})(GetBucketReplicationOutput || (GetBucketReplicationOutput = {}));

var GetBucketReplicationRequest;

(function (GetBucketReplicationRequest) {
  GetBucketReplicationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketReplicationRequest || (GetBucketReplicationRequest = {}));

var GetBucketRequestPaymentOutput;

(function (GetBucketRequestPaymentOutput) {
  GetBucketRequestPaymentOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketRequestPaymentOutput || (GetBucketRequestPaymentOutput = {}));

var GetBucketRequestPaymentRequest;

(function (GetBucketRequestPaymentRequest) {
  GetBucketRequestPaymentRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketRequestPaymentRequest || (GetBucketRequestPaymentRequest = {}));

var GetBucketTaggingOutput;

(function (GetBucketTaggingOutput) {
  GetBucketTaggingOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketTaggingOutput || (GetBucketTaggingOutput = {}));

var GetBucketTaggingRequest;

(function (GetBucketTaggingRequest) {
  GetBucketTaggingRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketTaggingRequest || (GetBucketTaggingRequest = {}));

var GetBucketVersioningOutput;

(function (GetBucketVersioningOutput) {
  GetBucketVersioningOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketVersioningOutput || (GetBucketVersioningOutput = {}));

var GetBucketVersioningRequest;

(function (GetBucketVersioningRequest) {
  GetBucketVersioningRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketVersioningRequest || (GetBucketVersioningRequest = {}));

var ErrorDocument;

(function (ErrorDocument) {
  ErrorDocument.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ErrorDocument || (ErrorDocument = {}));

var IndexDocument;

(function (IndexDocument) {
  IndexDocument.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(IndexDocument || (IndexDocument = {}));

var RedirectAllRequestsTo;

(function (RedirectAllRequestsTo) {
  RedirectAllRequestsTo.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(RedirectAllRequestsTo || (RedirectAllRequestsTo = {}));

var Condition;

(function (Condition) {
  Condition.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Condition || (Condition = {}));

var Redirect;

(function (Redirect) {
  Redirect.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Redirect || (Redirect = {}));

var RoutingRule;

(function (RoutingRule) {
  RoutingRule.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(RoutingRule || (RoutingRule = {}));

var GetBucketWebsiteOutput;

(function (GetBucketWebsiteOutput) {
  GetBucketWebsiteOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketWebsiteOutput || (GetBucketWebsiteOutput = {}));

var GetBucketWebsiteRequest;

(function (GetBucketWebsiteRequest) {
  GetBucketWebsiteRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetBucketWebsiteRequest || (GetBucketWebsiteRequest = {}));

var GetObjectOutput;

(function (GetObjectOutput) {
  GetObjectOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSEKMSKeyId && {
      SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(GetObjectOutput || (GetObjectOutput = {}));

var GetObjectRequest;

(function (GetObjectRequest) {
  GetObjectRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSECustomerKey && {
      SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(GetObjectRequest || (GetObjectRequest = {}));

var InvalidObjectState;

(function (InvalidObjectState) {
  InvalidObjectState.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(InvalidObjectState || (InvalidObjectState = {}));

var NoSuchKey;

(function (NoSuchKey) {
  NoSuchKey.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(NoSuchKey || (NoSuchKey = {}));

var GetObjectAclOutput;

(function (GetObjectAclOutput) {
  GetObjectAclOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetObjectAclOutput || (GetObjectAclOutput = {}));

var GetObjectAclRequest;

(function (GetObjectAclRequest) {
  GetObjectAclRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetObjectAclRequest || (GetObjectAclRequest = {}));

var ObjectLockLegalHold;

(function (ObjectLockLegalHold) {
  ObjectLockLegalHold.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ObjectLockLegalHold || (ObjectLockLegalHold = {}));

var GetObjectLegalHoldOutput;

(function (GetObjectLegalHoldOutput) {
  GetObjectLegalHoldOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetObjectLegalHoldOutput || (GetObjectLegalHoldOutput = {}));

var GetObjectLegalHoldRequest;

(function (GetObjectLegalHoldRequest) {
  GetObjectLegalHoldRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetObjectLegalHoldRequest || (GetObjectLegalHoldRequest = {}));

var DefaultRetention;

(function (DefaultRetention) {
  DefaultRetention.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DefaultRetention || (DefaultRetention = {}));

var ObjectLockRule;

(function (ObjectLockRule) {
  ObjectLockRule.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ObjectLockRule || (ObjectLockRule = {}));

var ObjectLockConfiguration;

(function (ObjectLockConfiguration) {
  ObjectLockConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ObjectLockConfiguration || (ObjectLockConfiguration = {}));

var GetObjectLockConfigurationOutput;

(function (GetObjectLockConfigurationOutput) {
  GetObjectLockConfigurationOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetObjectLockConfigurationOutput || (GetObjectLockConfigurationOutput = {}));

var GetObjectLockConfigurationRequest;

(function (GetObjectLockConfigurationRequest) {
  GetObjectLockConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetObjectLockConfigurationRequest || (GetObjectLockConfigurationRequest = {}));

var ObjectLockRetention;

(function (ObjectLockRetention) {
  ObjectLockRetention.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ObjectLockRetention || (ObjectLockRetention = {}));

var GetObjectRetentionOutput;

(function (GetObjectRetentionOutput) {
  GetObjectRetentionOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetObjectRetentionOutput || (GetObjectRetentionOutput = {}));

var GetObjectRetentionRequest;

(function (GetObjectRetentionRequest) {
  GetObjectRetentionRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetObjectRetentionRequest || (GetObjectRetentionRequest = {}));

var GetObjectTaggingOutput;

(function (GetObjectTaggingOutput) {
  GetObjectTaggingOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetObjectTaggingOutput || (GetObjectTaggingOutput = {}));

var GetObjectTaggingRequest;

(function (GetObjectTaggingRequest) {
  GetObjectTaggingRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetObjectTaggingRequest || (GetObjectTaggingRequest = {}));

var GetObjectTorrentOutput;

(function (GetObjectTorrentOutput) {
  GetObjectTorrentOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetObjectTorrentOutput || (GetObjectTorrentOutput = {}));

var GetObjectTorrentRequest;

(function (GetObjectTorrentRequest) {
  GetObjectTorrentRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetObjectTorrentRequest || (GetObjectTorrentRequest = {}));

var PublicAccessBlockConfiguration;

(function (PublicAccessBlockConfiguration) {
  PublicAccessBlockConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PublicAccessBlockConfiguration || (PublicAccessBlockConfiguration = {}));

var GetPublicAccessBlockOutput;

(function (GetPublicAccessBlockOutput) {
  GetPublicAccessBlockOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetPublicAccessBlockOutput || (GetPublicAccessBlockOutput = {}));

var GetPublicAccessBlockRequest;

(function (GetPublicAccessBlockRequest) {
  GetPublicAccessBlockRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GetPublicAccessBlockRequest || (GetPublicAccessBlockRequest = {}));

var HeadBucketRequest;

(function (HeadBucketRequest) {
  HeadBucketRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(HeadBucketRequest || (HeadBucketRequest = {}));

var NoSuchBucket;

(function (NoSuchBucket) {
  NoSuchBucket.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(NoSuchBucket || (NoSuchBucket = {}));

var HeadObjectOutput;

(function (HeadObjectOutput) {
  HeadObjectOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSEKMSKeyId && {
      SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(HeadObjectOutput || (HeadObjectOutput = {}));

var HeadObjectRequest;

(function (HeadObjectRequest) {
  HeadObjectRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSECustomerKey && {
      SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(HeadObjectRequest || (HeadObjectRequest = {}));

var ListBucketAnalyticsConfigurationsOutput;

(function (ListBucketAnalyticsConfigurationsOutput) {
  ListBucketAnalyticsConfigurationsOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.AnalyticsConfigurationList && {
      AnalyticsConfigurationList: obj.AnalyticsConfigurationList.map(function (item) {
        return AnalyticsConfiguration.filterSensitiveLog(item);
      })
    });
  };
})(ListBucketAnalyticsConfigurationsOutput || (ListBucketAnalyticsConfigurationsOutput = {}));

var ListBucketAnalyticsConfigurationsRequest;

(function (ListBucketAnalyticsConfigurationsRequest) {
  ListBucketAnalyticsConfigurationsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListBucketAnalyticsConfigurationsRequest || (ListBucketAnalyticsConfigurationsRequest = {}));

var ListBucketIntelligentTieringConfigurationsOutput;

(function (ListBucketIntelligentTieringConfigurationsOutput) {
  ListBucketIntelligentTieringConfigurationsOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListBucketIntelligentTieringConfigurationsOutput || (ListBucketIntelligentTieringConfigurationsOutput = {}));

var ListBucketIntelligentTieringConfigurationsRequest;

(function (ListBucketIntelligentTieringConfigurationsRequest) {
  ListBucketIntelligentTieringConfigurationsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListBucketIntelligentTieringConfigurationsRequest || (ListBucketIntelligentTieringConfigurationsRequest = {}));

var ListBucketInventoryConfigurationsOutput;

(function (ListBucketInventoryConfigurationsOutput) {
  ListBucketInventoryConfigurationsOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.InventoryConfigurationList && {
      InventoryConfigurationList: obj.InventoryConfigurationList.map(function (item) {
        return InventoryConfiguration.filterSensitiveLog(item);
      })
    });
  };
})(ListBucketInventoryConfigurationsOutput || (ListBucketInventoryConfigurationsOutput = {}));

var ListBucketInventoryConfigurationsRequest;

(function (ListBucketInventoryConfigurationsRequest) {
  ListBucketInventoryConfigurationsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListBucketInventoryConfigurationsRequest || (ListBucketInventoryConfigurationsRequest = {}));

var ListBucketMetricsConfigurationsOutput;

(function (ListBucketMetricsConfigurationsOutput) {
  ListBucketMetricsConfigurationsOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.MetricsConfigurationList && {
      MetricsConfigurationList: obj.MetricsConfigurationList.map(function (item) {
        return MetricsConfiguration.filterSensitiveLog(item);
      })
    });
  };
})(ListBucketMetricsConfigurationsOutput || (ListBucketMetricsConfigurationsOutput = {}));

var ListBucketMetricsConfigurationsRequest;

(function (ListBucketMetricsConfigurationsRequest) {
  ListBucketMetricsConfigurationsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListBucketMetricsConfigurationsRequest || (ListBucketMetricsConfigurationsRequest = {}));

var Bucket;

(function (Bucket) {
  Bucket.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Bucket || (Bucket = {}));

var ListBucketsOutput;

(function (ListBucketsOutput) {
  ListBucketsOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListBucketsOutput || (ListBucketsOutput = {}));

var CommonPrefix;

(function (CommonPrefix) {
  CommonPrefix.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(CommonPrefix || (CommonPrefix = {}));

var Initiator;

(function (Initiator) {
  Initiator.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Initiator || (Initiator = {}));

var MultipartUpload;

(function (MultipartUpload) {
  MultipartUpload.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(MultipartUpload || (MultipartUpload = {}));

var ListMultipartUploadsOutput;

(function (ListMultipartUploadsOutput) {
  ListMultipartUploadsOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListMultipartUploadsOutput || (ListMultipartUploadsOutput = {}));

var ListMultipartUploadsRequest;

(function (ListMultipartUploadsRequest) {
  ListMultipartUploadsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListMultipartUploadsRequest || (ListMultipartUploadsRequest = {}));

var _Object;

(function (_Object) {
  _Object.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(_Object || (_Object = {}));

var ListObjectsOutput;

(function (ListObjectsOutput) {
  ListObjectsOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListObjectsOutput || (ListObjectsOutput = {}));

var ListObjectsRequest;

(function (ListObjectsRequest) {
  ListObjectsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListObjectsRequest || (ListObjectsRequest = {}));

var ListObjectsV2Output;

(function (ListObjectsV2Output) {
  ListObjectsV2Output.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListObjectsV2Output || (ListObjectsV2Output = {}));

var ListObjectsV2Request;

(function (ListObjectsV2Request) {
  ListObjectsV2Request.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListObjectsV2Request || (ListObjectsV2Request = {}));

var DeleteMarkerEntry;

(function (DeleteMarkerEntry) {
  DeleteMarkerEntry.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(DeleteMarkerEntry || (DeleteMarkerEntry = {}));

var ObjectVersion;

(function (ObjectVersion) {
  ObjectVersion.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ObjectVersion || (ObjectVersion = {}));

var ListObjectVersionsOutput;

(function (ListObjectVersionsOutput) {
  ListObjectVersionsOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListObjectVersionsOutput || (ListObjectVersionsOutput = {}));

var ListObjectVersionsRequest;

(function (ListObjectVersionsRequest) {
  ListObjectVersionsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListObjectVersionsRequest || (ListObjectVersionsRequest = {}));

var Part;

(function (Part) {
  Part.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Part || (Part = {}));

var ListPartsOutput;

(function (ListPartsOutput) {
  ListPartsOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListPartsOutput || (ListPartsOutput = {}));

var ListPartsRequest;

(function (ListPartsRequest) {
  ListPartsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ListPartsRequest || (ListPartsRequest = {}));

var PutBucketAccelerateConfigurationRequest;

(function (PutBucketAccelerateConfigurationRequest) {
  PutBucketAccelerateConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutBucketAccelerateConfigurationRequest || (PutBucketAccelerateConfigurationRequest = {}));

var PutBucketAclRequest;

(function (PutBucketAclRequest) {
  PutBucketAclRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutBucketAclRequest || (PutBucketAclRequest = {}));

var PutBucketAnalyticsConfigurationRequest;

(function (PutBucketAnalyticsConfigurationRequest) {
  PutBucketAnalyticsConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.AnalyticsConfiguration && {
      AnalyticsConfiguration: AnalyticsConfiguration.filterSensitiveLog(obj.AnalyticsConfiguration)
    });
  };
})(PutBucketAnalyticsConfigurationRequest || (PutBucketAnalyticsConfigurationRequest = {}));

var CORSConfiguration;

(function (CORSConfiguration) {
  CORSConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(CORSConfiguration || (CORSConfiguration = {}));

var PutBucketCorsRequest;

(function (PutBucketCorsRequest) {
  PutBucketCorsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutBucketCorsRequest || (PutBucketCorsRequest = {}));

var PutBucketEncryptionRequest;

(function (PutBucketEncryptionRequest) {
  PutBucketEncryptionRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.ServerSideEncryptionConfiguration && {
      ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration.filterSensitiveLog(obj.ServerSideEncryptionConfiguration)
    });
  };
})(PutBucketEncryptionRequest || (PutBucketEncryptionRequest = {}));

var PutBucketIntelligentTieringConfigurationRequest;

(function (PutBucketIntelligentTieringConfigurationRequest) {
  PutBucketIntelligentTieringConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutBucketIntelligentTieringConfigurationRequest || (PutBucketIntelligentTieringConfigurationRequest = {}));

var PutBucketInventoryConfigurationRequest;

(function (PutBucketInventoryConfigurationRequest) {
  PutBucketInventoryConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.InventoryConfiguration && {
      InventoryConfiguration: InventoryConfiguration.filterSensitiveLog(obj.InventoryConfiguration)
    });
  };
})(PutBucketInventoryConfigurationRequest || (PutBucketInventoryConfigurationRequest = {}));

var BucketLifecycleConfiguration;

(function (BucketLifecycleConfiguration) {
  BucketLifecycleConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.Rules && {
      Rules: obj.Rules.map(function (item) {
        return LifecycleRule.filterSensitiveLog(item);
      })
    });
  };
})(BucketLifecycleConfiguration || (BucketLifecycleConfiguration = {}));

var PutBucketLifecycleConfigurationRequest;

(function (PutBucketLifecycleConfigurationRequest) {
  PutBucketLifecycleConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.LifecycleConfiguration && {
      LifecycleConfiguration: BucketLifecycleConfiguration.filterSensitiveLog(obj.LifecycleConfiguration)
    });
  };
})(PutBucketLifecycleConfigurationRequest || (PutBucketLifecycleConfigurationRequest = {}));

var BucketLoggingStatus;

(function (BucketLoggingStatus) {
  BucketLoggingStatus.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(BucketLoggingStatus || (BucketLoggingStatus = {}));

var PutBucketLoggingRequest;

(function (PutBucketLoggingRequest) {
  PutBucketLoggingRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutBucketLoggingRequest || (PutBucketLoggingRequest = {}));

var PutBucketMetricsConfigurationRequest;

(function (PutBucketMetricsConfigurationRequest) {
  PutBucketMetricsConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.MetricsConfiguration && {
      MetricsConfiguration: MetricsConfiguration.filterSensitiveLog(obj.MetricsConfiguration)
    });
  };
})(PutBucketMetricsConfigurationRequest || (PutBucketMetricsConfigurationRequest = {}));

var PutBucketNotificationConfigurationRequest;

(function (PutBucketNotificationConfigurationRequest) {
  PutBucketNotificationConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutBucketNotificationConfigurationRequest || (PutBucketNotificationConfigurationRequest = {}));

var PutBucketOwnershipControlsRequest;

(function (PutBucketOwnershipControlsRequest) {
  PutBucketOwnershipControlsRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutBucketOwnershipControlsRequest || (PutBucketOwnershipControlsRequest = {}));

var PutBucketPolicyRequest;

(function (PutBucketPolicyRequest) {
  PutBucketPolicyRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutBucketPolicyRequest || (PutBucketPolicyRequest = {}));

var PutBucketReplicationRequest;

(function (PutBucketReplicationRequest) {
  PutBucketReplicationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.ReplicationConfiguration && {
      ReplicationConfiguration: ReplicationConfiguration.filterSensitiveLog(obj.ReplicationConfiguration)
    });
  };
})(PutBucketReplicationRequest || (PutBucketReplicationRequest = {}));

var RequestPaymentConfiguration;

(function (RequestPaymentConfiguration) {
  RequestPaymentConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(RequestPaymentConfiguration || (RequestPaymentConfiguration = {}));

var PutBucketRequestPaymentRequest;

(function (PutBucketRequestPaymentRequest) {
  PutBucketRequestPaymentRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutBucketRequestPaymentRequest || (PutBucketRequestPaymentRequest = {}));

var Tagging;

(function (Tagging) {
  Tagging.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Tagging || (Tagging = {}));

var PutBucketTaggingRequest;

(function (PutBucketTaggingRequest) {
  PutBucketTaggingRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutBucketTaggingRequest || (PutBucketTaggingRequest = {}));

var VersioningConfiguration;

(function (VersioningConfiguration) {
  VersioningConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(VersioningConfiguration || (VersioningConfiguration = {}));

var PutBucketVersioningRequest;

(function (PutBucketVersioningRequest) {
  PutBucketVersioningRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutBucketVersioningRequest || (PutBucketVersioningRequest = {}));

var WebsiteConfiguration;

(function (WebsiteConfiguration) {
  WebsiteConfiguration.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(WebsiteConfiguration || (WebsiteConfiguration = {}));

var PutBucketWebsiteRequest;

(function (PutBucketWebsiteRequest) {
  PutBucketWebsiteRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutBucketWebsiteRequest || (PutBucketWebsiteRequest = {}));

var PutObjectOutput;

(function (PutObjectOutput) {
  PutObjectOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSEKMSKeyId && {
      SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    }), obj.SSEKMSEncryptionContext && {
      SSEKMSEncryptionContext: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(PutObjectOutput || (PutObjectOutput = {}));

var PutObjectRequest;

(function (PutObjectRequest) {
  PutObjectRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSECustomerKey && {
      SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    }), obj.SSEKMSKeyId && {
      SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    }), obj.SSEKMSEncryptionContext && {
      SSEKMSEncryptionContext: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(PutObjectRequest || (PutObjectRequest = {}));

var PutObjectAclOutput;

(function (PutObjectAclOutput) {
  PutObjectAclOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutObjectAclOutput || (PutObjectAclOutput = {}));

var PutObjectAclRequest;

(function (PutObjectAclRequest) {
  PutObjectAclRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutObjectAclRequest || (PutObjectAclRequest = {}));

var PutObjectLegalHoldOutput;

(function (PutObjectLegalHoldOutput) {
  PutObjectLegalHoldOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutObjectLegalHoldOutput || (PutObjectLegalHoldOutput = {}));

var PutObjectLegalHoldRequest;

(function (PutObjectLegalHoldRequest) {
  PutObjectLegalHoldRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutObjectLegalHoldRequest || (PutObjectLegalHoldRequest = {}));

var PutObjectLockConfigurationOutput;

(function (PutObjectLockConfigurationOutput) {
  PutObjectLockConfigurationOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutObjectLockConfigurationOutput || (PutObjectLockConfigurationOutput = {}));

var PutObjectLockConfigurationRequest;

(function (PutObjectLockConfigurationRequest) {
  PutObjectLockConfigurationRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutObjectLockConfigurationRequest || (PutObjectLockConfigurationRequest = {}));

var PutObjectRetentionOutput;

(function (PutObjectRetentionOutput) {
  PutObjectRetentionOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutObjectRetentionOutput || (PutObjectRetentionOutput = {}));

var PutObjectRetentionRequest;

(function (PutObjectRetentionRequest) {
  PutObjectRetentionRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutObjectRetentionRequest || (PutObjectRetentionRequest = {}));

var PutObjectTaggingOutput;

(function (PutObjectTaggingOutput) {
  PutObjectTaggingOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutObjectTaggingOutput || (PutObjectTaggingOutput = {}));

var PutObjectTaggingRequest;

(function (PutObjectTaggingRequest) {
  PutObjectTaggingRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutObjectTaggingRequest || (PutObjectTaggingRequest = {}));

var PutPublicAccessBlockRequest;

(function (PutPublicAccessBlockRequest) {
  PutPublicAccessBlockRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(PutPublicAccessBlockRequest || (PutPublicAccessBlockRequest = {}));

var ObjectAlreadyInActiveTierError;

(function (ObjectAlreadyInActiveTierError) {
  ObjectAlreadyInActiveTierError.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ObjectAlreadyInActiveTierError || (ObjectAlreadyInActiveTierError = {}));

var RestoreObjectOutput;

(function (RestoreObjectOutput) {
  RestoreObjectOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(RestoreObjectOutput || (RestoreObjectOutput = {}));

var GlacierJobParameters;

(function (GlacierJobParameters) {
  GlacierJobParameters.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(GlacierJobParameters || (GlacierJobParameters = {}));

var Encryption;

(function (Encryption) {
  Encryption.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.KMSKeyId && {
      KMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(Encryption || (Encryption = {}));

/***/ }),

/***/ 61250:
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/models/models_1.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MetadataEntry": function() { return /* binding */ MetadataEntry; },
/* harmony export */   "S3Location": function() { return /* binding */ S3Location; },
/* harmony export */   "OutputLocation": function() { return /* binding */ OutputLocation; },
/* harmony export */   "FileHeaderInfo": function() { return /* binding */ FileHeaderInfo; },
/* harmony export */   "CSVInput": function() { return /* binding */ CSVInput; },
/* harmony export */   "JSONType": function() { return /* binding */ JSONType; },
/* harmony export */   "JSONInput": function() { return /* binding */ JSONInput; },
/* harmony export */   "ParquetInput": function() { return /* binding */ ParquetInput; },
/* harmony export */   "InputSerialization": function() { return /* binding */ InputSerialization; },
/* harmony export */   "QuoteFields": function() { return /* binding */ QuoteFields; },
/* harmony export */   "CSVOutput": function() { return /* binding */ CSVOutput; },
/* harmony export */   "JSONOutput": function() { return /* binding */ JSONOutput; },
/* harmony export */   "OutputSerialization": function() { return /* binding */ OutputSerialization; },
/* harmony export */   "SelectParameters": function() { return /* binding */ SelectParameters; },
/* harmony export */   "RestoreRequestType": function() { return /* binding */ RestoreRequestType; },
/* harmony export */   "RestoreRequest": function() { return /* binding */ RestoreRequest; },
/* harmony export */   "RestoreObjectRequest": function() { return /* binding */ RestoreObjectRequest; },
/* harmony export */   "ContinuationEvent": function() { return /* binding */ ContinuationEvent; },
/* harmony export */   "EndEvent": function() { return /* binding */ EndEvent; },
/* harmony export */   "Progress": function() { return /* binding */ Progress; },
/* harmony export */   "ProgressEvent": function() { return /* binding */ ProgressEvent; },
/* harmony export */   "RecordsEvent": function() { return /* binding */ RecordsEvent; },
/* harmony export */   "Stats": function() { return /* binding */ Stats; },
/* harmony export */   "StatsEvent": function() { return /* binding */ StatsEvent; },
/* harmony export */   "SelectObjectContentEventStream": function() { return /* binding */ SelectObjectContentEventStream; },
/* harmony export */   "SelectObjectContentOutput": function() { return /* binding */ SelectObjectContentOutput; },
/* harmony export */   "RequestProgress": function() { return /* binding */ RequestProgress; },
/* harmony export */   "ScanRange": function() { return /* binding */ ScanRange; },
/* harmony export */   "SelectObjectContentRequest": function() { return /* binding */ SelectObjectContentRequest; },
/* harmony export */   "UploadPartOutput": function() { return /* binding */ UploadPartOutput; },
/* harmony export */   "UploadPartRequest": function() { return /* binding */ UploadPartRequest; },
/* harmony export */   "CopyPartResult": function() { return /* binding */ CopyPartResult; },
/* harmony export */   "UploadPartCopyOutput": function() { return /* binding */ UploadPartCopyOutput; },
/* harmony export */   "UploadPartCopyRequest": function() { return /* binding */ UploadPartCopyRequest; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_0__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./models_0 */ 37325);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);



var MetadataEntry;

(function (MetadataEntry) {
  MetadataEntry.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(MetadataEntry || (MetadataEntry = {}));

var S3Location;

(function (S3Location) {
  S3Location.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.Encryption && {
      Encryption: _models_0__WEBPACK_IMPORTED_MODULE_2__.Encryption.filterSensitiveLog(obj.Encryption)
    });
  };
})(S3Location || (S3Location = {}));

var OutputLocation;

(function (OutputLocation) {
  OutputLocation.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.S3 && {
      S3: S3Location.filterSensitiveLog(obj.S3)
    });
  };
})(OutputLocation || (OutputLocation = {}));

var FileHeaderInfo;

(function (FileHeaderInfo) {
  FileHeaderInfo["IGNORE"] = "IGNORE";
  FileHeaderInfo["NONE"] = "NONE";
  FileHeaderInfo["USE"] = "USE";
})(FileHeaderInfo || (FileHeaderInfo = {}));

var CSVInput;

(function (CSVInput) {
  CSVInput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(CSVInput || (CSVInput = {}));

var JSONType;

(function (JSONType) {
  JSONType["DOCUMENT"] = "DOCUMENT";
  JSONType["LINES"] = "LINES";
})(JSONType || (JSONType = {}));

var JSONInput;

(function (JSONInput) {
  JSONInput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(JSONInput || (JSONInput = {}));

var ParquetInput;

(function (ParquetInput) {
  ParquetInput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ParquetInput || (ParquetInput = {}));

var InputSerialization;

(function (InputSerialization) {
  InputSerialization.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(InputSerialization || (InputSerialization = {}));

var QuoteFields;

(function (QuoteFields) {
  QuoteFields["ALWAYS"] = "ALWAYS";
  QuoteFields["ASNEEDED"] = "ASNEEDED";
})(QuoteFields || (QuoteFields = {}));

var CSVOutput;

(function (CSVOutput) {
  CSVOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(CSVOutput || (CSVOutput = {}));

var JSONOutput;

(function (JSONOutput) {
  JSONOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(JSONOutput || (JSONOutput = {}));

var OutputSerialization;

(function (OutputSerialization) {
  OutputSerialization.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(OutputSerialization || (OutputSerialization = {}));

var SelectParameters;

(function (SelectParameters) {
  SelectParameters.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(SelectParameters || (SelectParameters = {}));

var RestoreRequestType;

(function (RestoreRequestType) {
  RestoreRequestType["SELECT"] = "SELECT";
})(RestoreRequestType || (RestoreRequestType = {}));

var RestoreRequest;

(function (RestoreRequest) {
  RestoreRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.OutputLocation && {
      OutputLocation: OutputLocation.filterSensitiveLog(obj.OutputLocation)
    });
  };
})(RestoreRequest || (RestoreRequest = {}));

var RestoreObjectRequest;

(function (RestoreObjectRequest) {
  RestoreObjectRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.RestoreRequest && {
      RestoreRequest: RestoreRequest.filterSensitiveLog(obj.RestoreRequest)
    });
  };
})(RestoreObjectRequest || (RestoreObjectRequest = {}));

var ContinuationEvent;

(function (ContinuationEvent) {
  ContinuationEvent.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ContinuationEvent || (ContinuationEvent = {}));

var EndEvent;

(function (EndEvent) {
  EndEvent.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(EndEvent || (EndEvent = {}));

var Progress;

(function (Progress) {
  Progress.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Progress || (Progress = {}));

var ProgressEvent;

(function (ProgressEvent) {
  ProgressEvent.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ProgressEvent || (ProgressEvent = {}));

var RecordsEvent;

(function (RecordsEvent) {
  RecordsEvent.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(RecordsEvent || (RecordsEvent = {}));

var Stats;

(function (Stats) {
  Stats.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(Stats || (Stats = {}));

var StatsEvent;

(function (StatsEvent) {
  StatsEvent.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(StatsEvent || (StatsEvent = {}));

var SelectObjectContentEventStream;

(function (SelectObjectContentEventStream) {
  SelectObjectContentEventStream.visit = function (value, visitor) {
    if (value.Records !== undefined) return visitor.Records(value.Records);
    if (value.Stats !== undefined) return visitor.Stats(value.Stats);
    if (value.Progress !== undefined) return visitor.Progress(value.Progress);
    if (value.Cont !== undefined) return visitor.Cont(value.Cont);
    if (value.End !== undefined) return visitor.End(value.End);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  };

  SelectObjectContentEventStream.filterSensitiveLog = function (obj) {
    var _a;

    if (obj.Records !== undefined) return {
      Records: RecordsEvent.filterSensitiveLog(obj.Records)
    };
    if (obj.Stats !== undefined) return {
      Stats: StatsEvent.filterSensitiveLog(obj.Stats)
    };
    if (obj.Progress !== undefined) return {
      Progress: ProgressEvent.filterSensitiveLog(obj.Progress)
    };
    if (obj.Cont !== undefined) return {
      Cont: ContinuationEvent.filterSensitiveLog(obj.Cont)
    };
    if (obj.End !== undefined) return {
      End: EndEvent.filterSensitiveLog(obj.End)
    };
    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = "UNKNOWN", _a;
  };
})(SelectObjectContentEventStream || (SelectObjectContentEventStream = {}));

var SelectObjectContentOutput;

(function (SelectObjectContentOutput) {
  SelectObjectContentOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.Payload && {
      Payload: "STREAMING_CONTENT"
    });
  };
})(SelectObjectContentOutput || (SelectObjectContentOutput = {}));

var RequestProgress;

(function (RequestProgress) {
  RequestProgress.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(RequestProgress || (RequestProgress = {}));

var ScanRange;

(function (ScanRange) {
  ScanRange.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(ScanRange || (ScanRange = {}));

var SelectObjectContentRequest;

(function (SelectObjectContentRequest) {
  SelectObjectContentRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSECustomerKey && {
      SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(SelectObjectContentRequest || (SelectObjectContentRequest = {}));

var UploadPartOutput;

(function (UploadPartOutput) {
  UploadPartOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSEKMSKeyId && {
      SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(UploadPartOutput || (UploadPartOutput = {}));

var UploadPartRequest;

(function (UploadPartRequest) {
  UploadPartRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSECustomerKey && {
      SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(UploadPartRequest || (UploadPartRequest = {}));

var CopyPartResult;

(function (CopyPartResult) {
  CopyPartResult.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj);
  };
})(CopyPartResult || (CopyPartResult = {}));

var UploadPartCopyOutput;

(function (UploadPartCopyOutput) {
  UploadPartCopyOutput.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSEKMSKeyId && {
      SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(UploadPartCopyOutput || (UploadPartCopyOutput = {}));

var UploadPartCopyRequest;

(function (UploadPartCopyRequest) {
  UploadPartCopyRequest.filterSensitiveLog = function (obj) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), obj.SSECustomerKey && {
      SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    }), obj.CopySourceSSECustomerKey && {
      CopySourceSSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING
    });
  };
})(UploadPartCopyRequest || (UploadPartCopyRequest = {}));

/***/ }),

/***/ 74613:
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/protocols/Aws_restXml.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "serializeAws_restXmlAbortMultipartUploadCommand": function() { return /* binding */ serializeAws_restXmlAbortMultipartUploadCommand; },
/* harmony export */   "serializeAws_restXmlCompleteMultipartUploadCommand": function() { return /* binding */ serializeAws_restXmlCompleteMultipartUploadCommand; },
/* harmony export */   "serializeAws_restXmlCopyObjectCommand": function() { return /* binding */ serializeAws_restXmlCopyObjectCommand; },
/* harmony export */   "serializeAws_restXmlCreateBucketCommand": function() { return /* binding */ serializeAws_restXmlCreateBucketCommand; },
/* harmony export */   "serializeAws_restXmlCreateMultipartUploadCommand": function() { return /* binding */ serializeAws_restXmlCreateMultipartUploadCommand; },
/* harmony export */   "serializeAws_restXmlDeleteBucketCommand": function() { return /* binding */ serializeAws_restXmlDeleteBucketCommand; },
/* harmony export */   "serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand": function() { return /* binding */ serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlDeleteBucketCorsCommand": function() { return /* binding */ serializeAws_restXmlDeleteBucketCorsCommand; },
/* harmony export */   "serializeAws_restXmlDeleteBucketEncryptionCommand": function() { return /* binding */ serializeAws_restXmlDeleteBucketEncryptionCommand; },
/* harmony export */   "serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand": function() { return /* binding */ serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlDeleteBucketInventoryConfigurationCommand": function() { return /* binding */ serializeAws_restXmlDeleteBucketInventoryConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlDeleteBucketLifecycleCommand": function() { return /* binding */ serializeAws_restXmlDeleteBucketLifecycleCommand; },
/* harmony export */   "serializeAws_restXmlDeleteBucketMetricsConfigurationCommand": function() { return /* binding */ serializeAws_restXmlDeleteBucketMetricsConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlDeleteBucketOwnershipControlsCommand": function() { return /* binding */ serializeAws_restXmlDeleteBucketOwnershipControlsCommand; },
/* harmony export */   "serializeAws_restXmlDeleteBucketPolicyCommand": function() { return /* binding */ serializeAws_restXmlDeleteBucketPolicyCommand; },
/* harmony export */   "serializeAws_restXmlDeleteBucketReplicationCommand": function() { return /* binding */ serializeAws_restXmlDeleteBucketReplicationCommand; },
/* harmony export */   "serializeAws_restXmlDeleteBucketTaggingCommand": function() { return /* binding */ serializeAws_restXmlDeleteBucketTaggingCommand; },
/* harmony export */   "serializeAws_restXmlDeleteBucketWebsiteCommand": function() { return /* binding */ serializeAws_restXmlDeleteBucketWebsiteCommand; },
/* harmony export */   "serializeAws_restXmlDeleteObjectCommand": function() { return /* binding */ serializeAws_restXmlDeleteObjectCommand; },
/* harmony export */   "serializeAws_restXmlDeleteObjectsCommand": function() { return /* binding */ serializeAws_restXmlDeleteObjectsCommand; },
/* harmony export */   "serializeAws_restXmlDeleteObjectTaggingCommand": function() { return /* binding */ serializeAws_restXmlDeleteObjectTaggingCommand; },
/* harmony export */   "serializeAws_restXmlDeletePublicAccessBlockCommand": function() { return /* binding */ serializeAws_restXmlDeletePublicAccessBlockCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketAccelerateConfigurationCommand": function() { return /* binding */ serializeAws_restXmlGetBucketAccelerateConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketAclCommand": function() { return /* binding */ serializeAws_restXmlGetBucketAclCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketAnalyticsConfigurationCommand": function() { return /* binding */ serializeAws_restXmlGetBucketAnalyticsConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketCorsCommand": function() { return /* binding */ serializeAws_restXmlGetBucketCorsCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketEncryptionCommand": function() { return /* binding */ serializeAws_restXmlGetBucketEncryptionCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand": function() { return /* binding */ serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketInventoryConfigurationCommand": function() { return /* binding */ serializeAws_restXmlGetBucketInventoryConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketLifecycleConfigurationCommand": function() { return /* binding */ serializeAws_restXmlGetBucketLifecycleConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketLocationCommand": function() { return /* binding */ serializeAws_restXmlGetBucketLocationCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketLoggingCommand": function() { return /* binding */ serializeAws_restXmlGetBucketLoggingCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketMetricsConfigurationCommand": function() { return /* binding */ serializeAws_restXmlGetBucketMetricsConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketNotificationConfigurationCommand": function() { return /* binding */ serializeAws_restXmlGetBucketNotificationConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketOwnershipControlsCommand": function() { return /* binding */ serializeAws_restXmlGetBucketOwnershipControlsCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketPolicyCommand": function() { return /* binding */ serializeAws_restXmlGetBucketPolicyCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketPolicyStatusCommand": function() { return /* binding */ serializeAws_restXmlGetBucketPolicyStatusCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketReplicationCommand": function() { return /* binding */ serializeAws_restXmlGetBucketReplicationCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketRequestPaymentCommand": function() { return /* binding */ serializeAws_restXmlGetBucketRequestPaymentCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketTaggingCommand": function() { return /* binding */ serializeAws_restXmlGetBucketTaggingCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketVersioningCommand": function() { return /* binding */ serializeAws_restXmlGetBucketVersioningCommand; },
/* harmony export */   "serializeAws_restXmlGetBucketWebsiteCommand": function() { return /* binding */ serializeAws_restXmlGetBucketWebsiteCommand; },
/* harmony export */   "serializeAws_restXmlGetObjectCommand": function() { return /* binding */ serializeAws_restXmlGetObjectCommand; },
/* harmony export */   "serializeAws_restXmlGetObjectAclCommand": function() { return /* binding */ serializeAws_restXmlGetObjectAclCommand; },
/* harmony export */   "serializeAws_restXmlGetObjectLegalHoldCommand": function() { return /* binding */ serializeAws_restXmlGetObjectLegalHoldCommand; },
/* harmony export */   "serializeAws_restXmlGetObjectLockConfigurationCommand": function() { return /* binding */ serializeAws_restXmlGetObjectLockConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlGetObjectRetentionCommand": function() { return /* binding */ serializeAws_restXmlGetObjectRetentionCommand; },
/* harmony export */   "serializeAws_restXmlGetObjectTaggingCommand": function() { return /* binding */ serializeAws_restXmlGetObjectTaggingCommand; },
/* harmony export */   "serializeAws_restXmlGetObjectTorrentCommand": function() { return /* binding */ serializeAws_restXmlGetObjectTorrentCommand; },
/* harmony export */   "serializeAws_restXmlGetPublicAccessBlockCommand": function() { return /* binding */ serializeAws_restXmlGetPublicAccessBlockCommand; },
/* harmony export */   "serializeAws_restXmlHeadBucketCommand": function() { return /* binding */ serializeAws_restXmlHeadBucketCommand; },
/* harmony export */   "serializeAws_restXmlHeadObjectCommand": function() { return /* binding */ serializeAws_restXmlHeadObjectCommand; },
/* harmony export */   "serializeAws_restXmlListBucketAnalyticsConfigurationsCommand": function() { return /* binding */ serializeAws_restXmlListBucketAnalyticsConfigurationsCommand; },
/* harmony export */   "serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand": function() { return /* binding */ serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand; },
/* harmony export */   "serializeAws_restXmlListBucketInventoryConfigurationsCommand": function() { return /* binding */ serializeAws_restXmlListBucketInventoryConfigurationsCommand; },
/* harmony export */   "serializeAws_restXmlListBucketMetricsConfigurationsCommand": function() { return /* binding */ serializeAws_restXmlListBucketMetricsConfigurationsCommand; },
/* harmony export */   "serializeAws_restXmlListBucketsCommand": function() { return /* binding */ serializeAws_restXmlListBucketsCommand; },
/* harmony export */   "serializeAws_restXmlListMultipartUploadsCommand": function() { return /* binding */ serializeAws_restXmlListMultipartUploadsCommand; },
/* harmony export */   "serializeAws_restXmlListObjectsCommand": function() { return /* binding */ serializeAws_restXmlListObjectsCommand; },
/* harmony export */   "serializeAws_restXmlListObjectsV2Command": function() { return /* binding */ serializeAws_restXmlListObjectsV2Command; },
/* harmony export */   "serializeAws_restXmlListObjectVersionsCommand": function() { return /* binding */ serializeAws_restXmlListObjectVersionsCommand; },
/* harmony export */   "serializeAws_restXmlListPartsCommand": function() { return /* binding */ serializeAws_restXmlListPartsCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketAccelerateConfigurationCommand": function() { return /* binding */ serializeAws_restXmlPutBucketAccelerateConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketAclCommand": function() { return /* binding */ serializeAws_restXmlPutBucketAclCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketAnalyticsConfigurationCommand": function() { return /* binding */ serializeAws_restXmlPutBucketAnalyticsConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketCorsCommand": function() { return /* binding */ serializeAws_restXmlPutBucketCorsCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketEncryptionCommand": function() { return /* binding */ serializeAws_restXmlPutBucketEncryptionCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand": function() { return /* binding */ serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketInventoryConfigurationCommand": function() { return /* binding */ serializeAws_restXmlPutBucketInventoryConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketLifecycleConfigurationCommand": function() { return /* binding */ serializeAws_restXmlPutBucketLifecycleConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketLoggingCommand": function() { return /* binding */ serializeAws_restXmlPutBucketLoggingCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketMetricsConfigurationCommand": function() { return /* binding */ serializeAws_restXmlPutBucketMetricsConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketNotificationConfigurationCommand": function() { return /* binding */ serializeAws_restXmlPutBucketNotificationConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketOwnershipControlsCommand": function() { return /* binding */ serializeAws_restXmlPutBucketOwnershipControlsCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketPolicyCommand": function() { return /* binding */ serializeAws_restXmlPutBucketPolicyCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketReplicationCommand": function() { return /* binding */ serializeAws_restXmlPutBucketReplicationCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketRequestPaymentCommand": function() { return /* binding */ serializeAws_restXmlPutBucketRequestPaymentCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketTaggingCommand": function() { return /* binding */ serializeAws_restXmlPutBucketTaggingCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketVersioningCommand": function() { return /* binding */ serializeAws_restXmlPutBucketVersioningCommand; },
/* harmony export */   "serializeAws_restXmlPutBucketWebsiteCommand": function() { return /* binding */ serializeAws_restXmlPutBucketWebsiteCommand; },
/* harmony export */   "serializeAws_restXmlPutObjectCommand": function() { return /* binding */ serializeAws_restXmlPutObjectCommand; },
/* harmony export */   "serializeAws_restXmlPutObjectAclCommand": function() { return /* binding */ serializeAws_restXmlPutObjectAclCommand; },
/* harmony export */   "serializeAws_restXmlPutObjectLegalHoldCommand": function() { return /* binding */ serializeAws_restXmlPutObjectLegalHoldCommand; },
/* harmony export */   "serializeAws_restXmlPutObjectLockConfigurationCommand": function() { return /* binding */ serializeAws_restXmlPutObjectLockConfigurationCommand; },
/* harmony export */   "serializeAws_restXmlPutObjectRetentionCommand": function() { return /* binding */ serializeAws_restXmlPutObjectRetentionCommand; },
/* harmony export */   "serializeAws_restXmlPutObjectTaggingCommand": function() { return /* binding */ serializeAws_restXmlPutObjectTaggingCommand; },
/* harmony export */   "serializeAws_restXmlPutPublicAccessBlockCommand": function() { return /* binding */ serializeAws_restXmlPutPublicAccessBlockCommand; },
/* harmony export */   "serializeAws_restXmlRestoreObjectCommand": function() { return /* binding */ serializeAws_restXmlRestoreObjectCommand; },
/* harmony export */   "serializeAws_restXmlSelectObjectContentCommand": function() { return /* binding */ serializeAws_restXmlSelectObjectContentCommand; },
/* harmony export */   "serializeAws_restXmlUploadPartCommand": function() { return /* binding */ serializeAws_restXmlUploadPartCommand; },
/* harmony export */   "serializeAws_restXmlUploadPartCopyCommand": function() { return /* binding */ serializeAws_restXmlUploadPartCopyCommand; },
/* harmony export */   "deserializeAws_restXmlAbortMultipartUploadCommand": function() { return /* binding */ deserializeAws_restXmlAbortMultipartUploadCommand; },
/* harmony export */   "deserializeAws_restXmlCompleteMultipartUploadCommand": function() { return /* binding */ deserializeAws_restXmlCompleteMultipartUploadCommand; },
/* harmony export */   "deserializeAws_restXmlCopyObjectCommand": function() { return /* binding */ deserializeAws_restXmlCopyObjectCommand; },
/* harmony export */   "deserializeAws_restXmlCreateBucketCommand": function() { return /* binding */ deserializeAws_restXmlCreateBucketCommand; },
/* harmony export */   "deserializeAws_restXmlCreateMultipartUploadCommand": function() { return /* binding */ deserializeAws_restXmlCreateMultipartUploadCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteBucketCommand": function() { return /* binding */ deserializeAws_restXmlDeleteBucketCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteBucketCorsCommand": function() { return /* binding */ deserializeAws_restXmlDeleteBucketCorsCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteBucketEncryptionCommand": function() { return /* binding */ deserializeAws_restXmlDeleteBucketEncryptionCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteBucketLifecycleCommand": function() { return /* binding */ deserializeAws_restXmlDeleteBucketLifecycleCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteBucketOwnershipControlsCommand": function() { return /* binding */ deserializeAws_restXmlDeleteBucketOwnershipControlsCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteBucketPolicyCommand": function() { return /* binding */ deserializeAws_restXmlDeleteBucketPolicyCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteBucketReplicationCommand": function() { return /* binding */ deserializeAws_restXmlDeleteBucketReplicationCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteBucketTaggingCommand": function() { return /* binding */ deserializeAws_restXmlDeleteBucketTaggingCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteBucketWebsiteCommand": function() { return /* binding */ deserializeAws_restXmlDeleteBucketWebsiteCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteObjectCommand": function() { return /* binding */ deserializeAws_restXmlDeleteObjectCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteObjectsCommand": function() { return /* binding */ deserializeAws_restXmlDeleteObjectsCommand; },
/* harmony export */   "deserializeAws_restXmlDeleteObjectTaggingCommand": function() { return /* binding */ deserializeAws_restXmlDeleteObjectTaggingCommand; },
/* harmony export */   "deserializeAws_restXmlDeletePublicAccessBlockCommand": function() { return /* binding */ deserializeAws_restXmlDeletePublicAccessBlockCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketAccelerateConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketAccelerateConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketAclCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketAclCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketCorsCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketCorsCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketEncryptionCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketEncryptionCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketInventoryConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketInventoryConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketLifecycleConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketLifecycleConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketLocationCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketLocationCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketLoggingCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketLoggingCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketMetricsConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketMetricsConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketNotificationConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketNotificationConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketOwnershipControlsCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketOwnershipControlsCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketPolicyCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketPolicyCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketPolicyStatusCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketPolicyStatusCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketReplicationCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketReplicationCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketRequestPaymentCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketRequestPaymentCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketTaggingCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketTaggingCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketVersioningCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketVersioningCommand; },
/* harmony export */   "deserializeAws_restXmlGetBucketWebsiteCommand": function() { return /* binding */ deserializeAws_restXmlGetBucketWebsiteCommand; },
/* harmony export */   "deserializeAws_restXmlGetObjectCommand": function() { return /* binding */ deserializeAws_restXmlGetObjectCommand; },
/* harmony export */   "deserializeAws_restXmlGetObjectAclCommand": function() { return /* binding */ deserializeAws_restXmlGetObjectAclCommand; },
/* harmony export */   "deserializeAws_restXmlGetObjectLegalHoldCommand": function() { return /* binding */ deserializeAws_restXmlGetObjectLegalHoldCommand; },
/* harmony export */   "deserializeAws_restXmlGetObjectLockConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlGetObjectLockConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlGetObjectRetentionCommand": function() { return /* binding */ deserializeAws_restXmlGetObjectRetentionCommand; },
/* harmony export */   "deserializeAws_restXmlGetObjectTaggingCommand": function() { return /* binding */ deserializeAws_restXmlGetObjectTaggingCommand; },
/* harmony export */   "deserializeAws_restXmlGetObjectTorrentCommand": function() { return /* binding */ deserializeAws_restXmlGetObjectTorrentCommand; },
/* harmony export */   "deserializeAws_restXmlGetPublicAccessBlockCommand": function() { return /* binding */ deserializeAws_restXmlGetPublicAccessBlockCommand; },
/* harmony export */   "deserializeAws_restXmlHeadBucketCommand": function() { return /* binding */ deserializeAws_restXmlHeadBucketCommand; },
/* harmony export */   "deserializeAws_restXmlHeadObjectCommand": function() { return /* binding */ deserializeAws_restXmlHeadObjectCommand; },
/* harmony export */   "deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand": function() { return /* binding */ deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand; },
/* harmony export */   "deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand": function() { return /* binding */ deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand; },
/* harmony export */   "deserializeAws_restXmlListBucketInventoryConfigurationsCommand": function() { return /* binding */ deserializeAws_restXmlListBucketInventoryConfigurationsCommand; },
/* harmony export */   "deserializeAws_restXmlListBucketMetricsConfigurationsCommand": function() { return /* binding */ deserializeAws_restXmlListBucketMetricsConfigurationsCommand; },
/* harmony export */   "deserializeAws_restXmlListBucketsCommand": function() { return /* binding */ deserializeAws_restXmlListBucketsCommand; },
/* harmony export */   "deserializeAws_restXmlListMultipartUploadsCommand": function() { return /* binding */ deserializeAws_restXmlListMultipartUploadsCommand; },
/* harmony export */   "deserializeAws_restXmlListObjectsCommand": function() { return /* binding */ deserializeAws_restXmlListObjectsCommand; },
/* harmony export */   "deserializeAws_restXmlListObjectsV2Command": function() { return /* binding */ deserializeAws_restXmlListObjectsV2Command; },
/* harmony export */   "deserializeAws_restXmlListObjectVersionsCommand": function() { return /* binding */ deserializeAws_restXmlListObjectVersionsCommand; },
/* harmony export */   "deserializeAws_restXmlListPartsCommand": function() { return /* binding */ deserializeAws_restXmlListPartsCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketAccelerateConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketAccelerateConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketAclCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketAclCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketCorsCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketCorsCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketEncryptionCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketEncryptionCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketInventoryConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketInventoryConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketLifecycleConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketLifecycleConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketLoggingCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketLoggingCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketMetricsConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketMetricsConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketNotificationConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketNotificationConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketOwnershipControlsCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketOwnershipControlsCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketPolicyCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketPolicyCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketReplicationCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketReplicationCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketRequestPaymentCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketRequestPaymentCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketTaggingCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketTaggingCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketVersioningCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketVersioningCommand; },
/* harmony export */   "deserializeAws_restXmlPutBucketWebsiteCommand": function() { return /* binding */ deserializeAws_restXmlPutBucketWebsiteCommand; },
/* harmony export */   "deserializeAws_restXmlPutObjectCommand": function() { return /* binding */ deserializeAws_restXmlPutObjectCommand; },
/* harmony export */   "deserializeAws_restXmlPutObjectAclCommand": function() { return /* binding */ deserializeAws_restXmlPutObjectAclCommand; },
/* harmony export */   "deserializeAws_restXmlPutObjectLegalHoldCommand": function() { return /* binding */ deserializeAws_restXmlPutObjectLegalHoldCommand; },
/* harmony export */   "deserializeAws_restXmlPutObjectLockConfigurationCommand": function() { return /* binding */ deserializeAws_restXmlPutObjectLockConfigurationCommand; },
/* harmony export */   "deserializeAws_restXmlPutObjectRetentionCommand": function() { return /* binding */ deserializeAws_restXmlPutObjectRetentionCommand; },
/* harmony export */   "deserializeAws_restXmlPutObjectTaggingCommand": function() { return /* binding */ deserializeAws_restXmlPutObjectTaggingCommand; },
/* harmony export */   "deserializeAws_restXmlPutPublicAccessBlockCommand": function() { return /* binding */ deserializeAws_restXmlPutPublicAccessBlockCommand; },
/* harmony export */   "deserializeAws_restXmlRestoreObjectCommand": function() { return /* binding */ deserializeAws_restXmlRestoreObjectCommand; },
/* harmony export */   "deserializeAws_restXmlSelectObjectContentCommand": function() { return /* binding */ deserializeAws_restXmlSelectObjectContentCommand; },
/* harmony export */   "deserializeAws_restXmlUploadPartCommand": function() { return /* binding */ deserializeAws_restXmlUploadPartCommand; },
/* harmony export */   "deserializeAws_restXmlUploadPartCopyCommand": function() { return /* binding */ deserializeAws_restXmlUploadPartCopyCommand; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);
/* harmony import */ var _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/xml-builder */ 67003);
/* harmony import */ var fast_xml_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fast-xml-parser */ 78642);






var serializeAws_restXmlAbortMultipartUploadCommand = function serializeAws_restXmlAbortMultipartUploadCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "x-id": "AbortMultipartUpload"
          }, input.UploadId !== undefined && {
            uploadId: input.UploadId
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlCompleteMultipartUploadCommand = function serializeAws_restXmlCompleteMultipartUploadCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, input.UploadId !== undefined && {
            uploadId: input.UploadId
          });

          if (input.MultipartUpload !== undefined) {
            contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlCopyObjectCommand = function serializeAws_restXmlCopyObjectCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ACL) && {
            "x-amz-acl": input.ACL
          }), isSerializableHeaderValue(input.CacheControl) && {
            "cache-control": input.CacheControl
          }), isSerializableHeaderValue(input.ContentDisposition) && {
            "content-disposition": input.ContentDisposition
          }), isSerializableHeaderValue(input.ContentEncoding) && {
            "content-encoding": input.ContentEncoding
          }), isSerializableHeaderValue(input.ContentLanguage) && {
            "content-language": input.ContentLanguage
          }), isSerializableHeaderValue(input.ContentType) && {
            "content-type": input.ContentType
          }), isSerializableHeaderValue(input.CopySource) && {
            "x-amz-copy-source": input.CopySource
          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {
            "x-amz-copy-source-if-match": input.CopySourceIfMatch
          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {
            "x-amz-copy-source-if-modified-since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.CopySourceIfModifiedSince).toString()
          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {
            "x-amz-copy-source-if-none-match": input.CopySourceIfNoneMatch
          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {
            "x-amz-copy-source-if-unmodified-since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.CopySourceIfUnmodifiedSince).toString()
          }), isSerializableHeaderValue(input.Expires) && {
            expires: (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.Expires).toString()
          }), isSerializableHeaderValue(input.GrantFullControl) && {
            "x-amz-grant-full-control": input.GrantFullControl
          }), isSerializableHeaderValue(input.GrantRead) && {
            "x-amz-grant-read": input.GrantRead
          }), isSerializableHeaderValue(input.GrantReadACP) && {
            "x-amz-grant-read-acp": input.GrantReadACP
          }), isSerializableHeaderValue(input.GrantWriteACP) && {
            "x-amz-grant-write-acp": input.GrantWriteACP
          }), isSerializableHeaderValue(input.MetadataDirective) && {
            "x-amz-metadata-directive": input.MetadataDirective
          }), isSerializableHeaderValue(input.TaggingDirective) && {
            "x-amz-tagging-directive": input.TaggingDirective
          }), isSerializableHeaderValue(input.ServerSideEncryption) && {
            "x-amz-server-side-encryption": input.ServerSideEncryption
          }), isSerializableHeaderValue(input.StorageClass) && {
            "x-amz-storage-class": input.StorageClass
          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {
            "x-amz-website-redirect-location": input.WebsiteRedirectLocation
          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm
          }), isSerializableHeaderValue(input.SSECustomerKey) && {
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey
          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5
          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {
            "x-amz-server-side-encryption-aws-kms-key-id": input.SSEKMSKeyId
          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {
            "x-amz-server-side-encryption-context": input.SSEKMSEncryptionContext
          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {
            "x-amz-server-side-encryption-bucket-key-enabled": input.BucketKeyEnabled.toString()
          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {
            "x-amz-copy-source-server-side-encryption-customer-algorithm": input.CopySourceSSECustomerAlgorithm
          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {
            "x-amz-copy-source-server-side-encryption-customer-key": input.CopySourceSSECustomerKey
          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {
            "x-amz-copy-source-server-side-encryption-customer-key-md5": input.CopySourceSSECustomerKeyMD5
          }), isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.Tagging) && {
            "x-amz-tagging": input.Tagging
          }), isSerializableHeaderValue(input.ObjectLockMode) && {
            "x-amz-object-lock-mode": input.ObjectLockMode
          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {
            "x-amz-object-lock-retain-until-date": (input.ObjectLockRetainUntilDate.toISOString().split(".")[0] + "Z").toString()
          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {
            "x-amz-object-lock-legal-hold": input.ObjectLockLegalHoldStatus
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          }), isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {
            "x-amz-source-expected-bucket-owner": input.ExpectedSourceBucketOwner
          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {
            var _a;

            return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, acc), (_a = {}, _a["x-amz-meta-" + suffix.toLowerCase()] = input.Metadata[suffix], _a));
          }, {}));
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = {
            "x-id": "CopyObject"
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlCreateBucketCommand = function serializeAws_restXmlCreateBucketCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ACL) && {
            "x-amz-acl": input.ACL
          }), isSerializableHeaderValue(input.GrantFullControl) && {
            "x-amz-grant-full-control": input.GrantFullControl
          }), isSerializableHeaderValue(input.GrantRead) && {
            "x-amz-grant-read": input.GrantRead
          }), isSerializableHeaderValue(input.GrantReadACP) && {
            "x-amz-grant-read-acp": input.GrantReadACP
          }), isSerializableHeaderValue(input.GrantWrite) && {
            "x-amz-grant-write": input.GrantWrite
          }), isSerializableHeaderValue(input.GrantWriteACP) && {
            "x-amz-grant-write-acp": input.GrantWriteACP
          }), isSerializableHeaderValue(input.ObjectLockEnabledForBucket) && {
            "x-amz-bucket-object-lock-enabled": input.ObjectLockEnabledForBucket.toString()
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.CreateBucketConfiguration !== undefined) {
            contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlCreateMultipartUploadCommand = function serializeAws_restXmlCreateMultipartUploadCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ACL) && {
            "x-amz-acl": input.ACL
          }), isSerializableHeaderValue(input.CacheControl) && {
            "cache-control": input.CacheControl
          }), isSerializableHeaderValue(input.ContentDisposition) && {
            "content-disposition": input.ContentDisposition
          }), isSerializableHeaderValue(input.ContentEncoding) && {
            "content-encoding": input.ContentEncoding
          }), isSerializableHeaderValue(input.ContentLanguage) && {
            "content-language": input.ContentLanguage
          }), isSerializableHeaderValue(input.ContentType) && {
            "content-type": input.ContentType
          }), isSerializableHeaderValue(input.Expires) && {
            expires: (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.Expires).toString()
          }), isSerializableHeaderValue(input.GrantFullControl) && {
            "x-amz-grant-full-control": input.GrantFullControl
          }), isSerializableHeaderValue(input.GrantRead) && {
            "x-amz-grant-read": input.GrantRead
          }), isSerializableHeaderValue(input.GrantReadACP) && {
            "x-amz-grant-read-acp": input.GrantReadACP
          }), isSerializableHeaderValue(input.GrantWriteACP) && {
            "x-amz-grant-write-acp": input.GrantWriteACP
          }), isSerializableHeaderValue(input.ServerSideEncryption) && {
            "x-amz-server-side-encryption": input.ServerSideEncryption
          }), isSerializableHeaderValue(input.StorageClass) && {
            "x-amz-storage-class": input.StorageClass
          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {
            "x-amz-website-redirect-location": input.WebsiteRedirectLocation
          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm
          }), isSerializableHeaderValue(input.SSECustomerKey) && {
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey
          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5
          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {
            "x-amz-server-side-encryption-aws-kms-key-id": input.SSEKMSKeyId
          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {
            "x-amz-server-side-encryption-context": input.SSEKMSEncryptionContext
          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {
            "x-amz-server-side-encryption-bucket-key-enabled": input.BucketKeyEnabled.toString()
          }), isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.Tagging) && {
            "x-amz-tagging": input.Tagging
          }), isSerializableHeaderValue(input.ObjectLockMode) && {
            "x-amz-object-lock-mode": input.ObjectLockMode
          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {
            "x-amz-object-lock-retain-until-date": (input.ObjectLockRetainUntilDate.toISOString().split(".")[0] + "Z").toString()
          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {
            "x-amz-object-lock-legal-hold": input.ObjectLockLegalHoldStatus
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {
            var _a;

            return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, acc), (_a = {}, _a["x-amz-meta-" + suffix.toLowerCase()] = input.Metadata[suffix], _a));
          }, {}));
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = {
            uploads: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteBucketCommand = function serializeAws_restXmlDeleteBucketCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            analytics: ""
          }, input.Id !== undefined && {
            id: input.Id
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteBucketCorsCommand = function serializeAws_restXmlDeleteBucketCorsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            cors: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteBucketEncryptionCommand = function serializeAws_restXmlDeleteBucketEncryptionCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            encryption: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = {};
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "intelligent-tiering": ""
          }, input.Id !== undefined && {
            id: input.Id
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function serializeAws_restXmlDeleteBucketInventoryConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            inventory: ""
          }, input.Id !== undefined && {
            id: input.Id
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteBucketLifecycleCommand = function serializeAws_restXmlDeleteBucketLifecycleCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            lifecycle: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function serializeAws_restXmlDeleteBucketMetricsConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            metrics: ""
          }, input.Id !== undefined && {
            id: input.Id
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteBucketOwnershipControlsCommand = function serializeAws_restXmlDeleteBucketOwnershipControlsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            ownershipControls: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteBucketPolicyCommand = function serializeAws_restXmlDeleteBucketPolicyCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            policy: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteBucketReplicationCommand = function serializeAws_restXmlDeleteBucketReplicationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            replication: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteBucketTaggingCommand = function serializeAws_restXmlDeleteBucketTaggingCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            tagging: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteBucketWebsiteCommand = function serializeAws_restXmlDeleteBucketWebsiteCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            website: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteObjectCommand = function serializeAws_restXmlDeleteObjectCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.MFA) && {
            "x-amz-mfa": input.MFA
          }), isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {
            "x-amz-bypass-governance-retention": input.BypassGovernanceRetention.toString()
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "x-id": "DeleteObject"
          }, input.VersionId !== undefined && {
            versionId: input.VersionId
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteObjectsCommand = function serializeAws_restXmlDeleteObjectsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.MFA) && {
            "x-amz-mfa": input.MFA
          }), isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {
            "x-amz-bypass-governance-retention": input.BypassGovernanceRetention.toString()
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            delete: ""
          };

          if (input.Delete !== undefined) {
            contents = serializeAws_restXmlDelete(input.Delete, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeleteObjectTaggingCommand = function serializeAws_restXmlDeleteObjectTaggingCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            tagging: ""
          }, input.VersionId !== undefined && {
            versionId: input.VersionId
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlDeletePublicAccessBlockCommand = function serializeAws_restXmlDeletePublicAccessBlockCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            publicAccessBlock: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketAccelerateConfigurationCommand = function serializeAws_restXmlGetBucketAccelerateConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            accelerate: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketAclCommand = function serializeAws_restXmlGetBucketAclCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            acl: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function serializeAws_restXmlGetBucketAnalyticsConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            analytics: "",
            "x-id": "GetBucketAnalyticsConfiguration"
          }, input.Id !== undefined && {
            id: input.Id
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketCorsCommand = function serializeAws_restXmlGetBucketCorsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            cors: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketEncryptionCommand = function serializeAws_restXmlGetBucketEncryptionCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            encryption: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = {};
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "intelligent-tiering": "",
            "x-id": "GetBucketIntelligentTieringConfiguration"
          }, input.Id !== undefined && {
            id: input.Id
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketInventoryConfigurationCommand = function serializeAws_restXmlGetBucketInventoryConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            inventory: "",
            "x-id": "GetBucketInventoryConfiguration"
          }, input.Id !== undefined && {
            id: input.Id
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketLifecycleConfigurationCommand = function serializeAws_restXmlGetBucketLifecycleConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            lifecycle: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketLocationCommand = function serializeAws_restXmlGetBucketLocationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            location: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketLoggingCommand = function serializeAws_restXmlGetBucketLoggingCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            logging: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketMetricsConfigurationCommand = function serializeAws_restXmlGetBucketMetricsConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            metrics: "",
            "x-id": "GetBucketMetricsConfiguration"
          }, input.Id !== undefined && {
            id: input.Id
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketNotificationConfigurationCommand = function serializeAws_restXmlGetBucketNotificationConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            notification: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketOwnershipControlsCommand = function serializeAws_restXmlGetBucketOwnershipControlsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            ownershipControls: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketPolicyCommand = function serializeAws_restXmlGetBucketPolicyCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            policy: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketPolicyStatusCommand = function serializeAws_restXmlGetBucketPolicyStatusCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            policyStatus: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketReplicationCommand = function serializeAws_restXmlGetBucketReplicationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            replication: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketRequestPaymentCommand = function serializeAws_restXmlGetBucketRequestPaymentCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            requestPayment: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketTaggingCommand = function serializeAws_restXmlGetBucketTaggingCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            tagging: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketVersioningCommand = function serializeAws_restXmlGetBucketVersioningCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            versioning: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetBucketWebsiteCommand = function serializeAws_restXmlGetBucketWebsiteCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            website: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetObjectCommand = function serializeAws_restXmlGetObjectCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.IfMatch) && {
            "if-match": input.IfMatch
          }), isSerializableHeaderValue(input.IfModifiedSince) && {
            "if-modified-since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.IfModifiedSince).toString()
          }), isSerializableHeaderValue(input.IfNoneMatch) && {
            "if-none-match": input.IfNoneMatch
          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {
            "if-unmodified-since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.IfUnmodifiedSince).toString()
          }), isSerializableHeaderValue(input.Range) && {
            range: input.Range
          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm
          }), isSerializableHeaderValue(input.SSECustomerKey) && {
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey
          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5
          }), isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "x-id": "GetObject"
          }, input.ResponseCacheControl !== undefined && {
            "response-cache-control": input.ResponseCacheControl
          }), input.ResponseContentDisposition !== undefined && {
            "response-content-disposition": input.ResponseContentDisposition
          }), input.ResponseContentEncoding !== undefined && {
            "response-content-encoding": input.ResponseContentEncoding
          }), input.ResponseContentLanguage !== undefined && {
            "response-content-language": input.ResponseContentLanguage
          }), input.ResponseContentType !== undefined && {
            "response-content-type": input.ResponseContentType
          }), input.ResponseExpires !== undefined && {
            "response-expires": (input.ResponseExpires.toISOString().split(".")[0] + "Z").toString()
          }), input.VersionId !== undefined && {
            versionId: input.VersionId
          }), input.PartNumber !== undefined && {
            partNumber: input.PartNumber.toString()
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetObjectAclCommand = function serializeAws_restXmlGetObjectAclCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            acl: ""
          }, input.VersionId !== undefined && {
            versionId: input.VersionId
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetObjectLegalHoldCommand = function serializeAws_restXmlGetObjectLegalHoldCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "legal-hold": ""
          }, input.VersionId !== undefined && {
            versionId: input.VersionId
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetObjectLockConfigurationCommand = function serializeAws_restXmlGetObjectLockConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            "object-lock": ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetObjectRetentionCommand = function serializeAws_restXmlGetObjectRetentionCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            retention: ""
          }, input.VersionId !== undefined && {
            versionId: input.VersionId
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetObjectTaggingCommand = function serializeAws_restXmlGetObjectTaggingCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            tagging: ""
          }, input.VersionId !== undefined && {
            versionId: input.VersionId
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetObjectTorrentCommand = function serializeAws_restXmlGetObjectTorrentCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = {
            torrent: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlGetPublicAccessBlockCommand = function serializeAws_restXmlGetPublicAccessBlockCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            publicAccessBlock: ""
          };
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlHeadBucketCommand = function serializeAws_restXmlHeadBucketCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "HEAD",
            headers: headers,
            path: resolvedPath,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlHeadObjectCommand = function serializeAws_restXmlHeadObjectCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.IfMatch) && {
            "if-match": input.IfMatch
          }), isSerializableHeaderValue(input.IfModifiedSince) && {
            "if-modified-since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.IfModifiedSince).toString()
          }), isSerializableHeaderValue(input.IfNoneMatch) && {
            "if-none-match": input.IfNoneMatch
          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {
            "if-unmodified-since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.IfUnmodifiedSince).toString()
          }), isSerializableHeaderValue(input.Range) && {
            range: input.Range
          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm
          }), isSerializableHeaderValue(input.SSECustomerKey) && {
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey
          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5
          }), isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, input.VersionId !== undefined && {
            versionId: input.VersionId
          }), input.PartNumber !== undefined && {
            partNumber: input.PartNumber.toString()
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "HEAD",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function serializeAws_restXmlListBucketAnalyticsConfigurationsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            analytics: "",
            "x-id": "ListBucketAnalyticsConfigurations"
          }, input.ContinuationToken !== undefined && {
            "continuation-token": input.ContinuationToken
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = {};
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "intelligent-tiering": "",
            "x-id": "ListBucketIntelligentTieringConfigurations"
          }, input.ContinuationToken !== undefined && {
            "continuation-token": input.ContinuationToken
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlListBucketInventoryConfigurationsCommand = function serializeAws_restXmlListBucketInventoryConfigurationsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            inventory: "",
            "x-id": "ListBucketInventoryConfigurations"
          }, input.ContinuationToken !== undefined && {
            "continuation-token": input.ContinuationToken
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlListBucketMetricsConfigurationsCommand = function serializeAws_restXmlListBucketMetricsConfigurationsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            metrics: "",
            "x-id": "ListBucketMetricsConfigurations"
          }, input.ContinuationToken !== undefined && {
            "continuation-token": input.ContinuationToken
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlListBucketsCommand = function serializeAws_restXmlListBucketsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = {};
          resolvedPath = "/";
          body = "";
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlListMultipartUploadsCommand = function serializeAws_restXmlListMultipartUploadsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            uploads: ""
          }, input.Delimiter !== undefined && {
            delimiter: input.Delimiter
          }), input.EncodingType !== undefined && {
            "encoding-type": input.EncodingType
          }), input.KeyMarker !== undefined && {
            "key-marker": input.KeyMarker
          }), input.MaxUploads !== undefined && {
            "max-uploads": input.MaxUploads.toString()
          }), input.Prefix !== undefined && {
            prefix: input.Prefix
          }), input.UploadIdMarker !== undefined && {
            "upload-id-marker": input.UploadIdMarker
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlListObjectsCommand = function serializeAws_restXmlListObjectsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, input.Delimiter !== undefined && {
            delimiter: input.Delimiter
          }), input.EncodingType !== undefined && {
            "encoding-type": input.EncodingType
          }), input.Marker !== undefined && {
            marker: input.Marker
          }), input.MaxKeys !== undefined && {
            "max-keys": input.MaxKeys.toString()
          }), input.Prefix !== undefined && {
            prefix: input.Prefix
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlListObjectsV2Command = function serializeAws_restXmlListObjectsV2Command(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "list-type": "2"
          }, input.Delimiter !== undefined && {
            delimiter: input.Delimiter
          }), input.EncodingType !== undefined && {
            "encoding-type": input.EncodingType
          }), input.MaxKeys !== undefined && {
            "max-keys": input.MaxKeys.toString()
          }), input.Prefix !== undefined && {
            prefix: input.Prefix
          }), input.ContinuationToken !== undefined && {
            "continuation-token": input.ContinuationToken
          }), input.FetchOwner !== undefined && {
            "fetch-owner": input.FetchOwner.toString()
          }), input.StartAfter !== undefined && {
            "start-after": input.StartAfter
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlListObjectVersionsCommand = function serializeAws_restXmlListObjectVersionsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            versions: ""
          }, input.Delimiter !== undefined && {
            delimiter: input.Delimiter
          }), input.EncodingType !== undefined && {
            "encoding-type": input.EncodingType
          }), input.KeyMarker !== undefined && {
            "key-marker": input.KeyMarker
          }), input.MaxKeys !== undefined && {
            "max-keys": input.MaxKeys.toString()
          }), input.Prefix !== undefined && {
            prefix: input.Prefix
          }), input.VersionIdMarker !== undefined && {
            "version-id-marker": input.VersionIdMarker
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlListPartsCommand = function serializeAws_restXmlListPartsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "x-id": "ListParts"
          }, input.MaxParts !== undefined && {
            "max-parts": input.MaxParts.toString()
          }), input.PartNumberMarker !== undefined && {
            "part-number-marker": input.PartNumberMarker
          }), input.UploadId !== undefined && {
            uploadId: input.UploadId
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketAccelerateConfigurationCommand = function serializeAws_restXmlPutBucketAccelerateConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            accelerate: ""
          };

          if (input.AccelerateConfiguration !== undefined) {
            contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketAclCommand = function serializeAws_restXmlPutBucketAclCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ACL) && {
            "x-amz-acl": input.ACL
          }), isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.GrantFullControl) && {
            "x-amz-grant-full-control": input.GrantFullControl
          }), isSerializableHeaderValue(input.GrantRead) && {
            "x-amz-grant-read": input.GrantRead
          }), isSerializableHeaderValue(input.GrantReadACP) && {
            "x-amz-grant-read-acp": input.GrantReadACP
          }), isSerializableHeaderValue(input.GrantWrite) && {
            "x-amz-grant-write": input.GrantWrite
          }), isSerializableHeaderValue(input.GrantWriteACP) && {
            "x-amz-grant-write-acp": input.GrantWriteACP
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            acl: ""
          };

          if (input.AccessControlPolicy !== undefined) {
            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function serializeAws_restXmlPutBucketAnalyticsConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            analytics: ""
          }, input.Id !== undefined && {
            id: input.Id
          });

          if (input.AnalyticsConfiguration !== undefined) {
            contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketCorsCommand = function serializeAws_restXmlPutBucketCorsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            cors: ""
          };

          if (input.CORSConfiguration !== undefined) {
            contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketEncryptionCommand = function serializeAws_restXmlPutBucketEncryptionCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            encryption: ""
          };

          if (input.ServerSideEncryptionConfiguration !== undefined) {
            contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = {
            "content-type": "application/xml"
          };
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "intelligent-tiering": ""
          }, input.Id !== undefined && {
            id: input.Id
          });

          if (input.IntelligentTieringConfiguration !== undefined) {
            contents = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketInventoryConfigurationCommand = function serializeAws_restXmlPutBucketInventoryConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            inventory: ""
          }, input.Id !== undefined && {
            id: input.Id
          });

          if (input.InventoryConfiguration !== undefined) {
            contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketLifecycleConfigurationCommand = function serializeAws_restXmlPutBucketLifecycleConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            lifecycle: ""
          };

          if (input.LifecycleConfiguration !== undefined) {
            contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketLoggingCommand = function serializeAws_restXmlPutBucketLoggingCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            logging: ""
          };

          if (input.BucketLoggingStatus !== undefined) {
            contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketMetricsConfigurationCommand = function serializeAws_restXmlPutBucketMetricsConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            metrics: ""
          }, input.Id !== undefined && {
            id: input.Id
          });

          if (input.MetricsConfiguration !== undefined) {
            contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketNotificationConfigurationCommand = function serializeAws_restXmlPutBucketNotificationConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            notification: ""
          };

          if (input.NotificationConfiguration !== undefined) {
            contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketOwnershipControlsCommand = function serializeAws_restXmlPutBucketOwnershipControlsCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            ownershipControls: ""
          };

          if (input.OwnershipControls !== undefined) {
            contents = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketPolicyCommand = function serializeAws_restXmlPutBucketPolicyCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "text/plain"
          }, isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess) && {
            "x-amz-confirm-remove-self-bucket-access": input.ConfirmRemoveSelfBucketAccess.toString()
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            policy: ""
          };

          if (input.Policy !== undefined) {
            contents = input.Policy;
            body = contents;
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketReplicationCommand = function serializeAws_restXmlPutBucketReplicationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.Token) && {
            "x-amz-bucket-object-lock-token": input.Token
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            replication: ""
          };

          if (input.ReplicationConfiguration !== undefined) {
            contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketRequestPaymentCommand = function serializeAws_restXmlPutBucketRequestPaymentCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            requestPayment: ""
          };

          if (input.RequestPaymentConfiguration !== undefined) {
            contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketTaggingCommand = function serializeAws_restXmlPutBucketTaggingCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            tagging: ""
          };

          if (input.Tagging !== undefined) {
            contents = serializeAws_restXmlTagging(input.Tagging, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketVersioningCommand = function serializeAws_restXmlPutBucketVersioningCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.MFA) && {
            "x-amz-mfa": input.MFA
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            versioning: ""
          };

          if (input.VersioningConfiguration !== undefined) {
            contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutBucketWebsiteCommand = function serializeAws_restXmlPutBucketWebsiteCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            website: ""
          };

          if (input.WebsiteConfiguration !== undefined) {
            contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutObjectCommand = function serializeAws_restXmlPutObjectCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/octet-stream"
          }, isSerializableHeaderValue(input.ACL) && {
            "x-amz-acl": input.ACL
          }), isSerializableHeaderValue(input.CacheControl) && {
            "cache-control": input.CacheControl
          }), isSerializableHeaderValue(input.ContentDisposition) && {
            "content-disposition": input.ContentDisposition
          }), isSerializableHeaderValue(input.ContentEncoding) && {
            "content-encoding": input.ContentEncoding
          }), isSerializableHeaderValue(input.ContentLanguage) && {
            "content-language": input.ContentLanguage
          }), isSerializableHeaderValue(input.ContentLength) && {
            "content-length": input.ContentLength.toString()
          }), isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ContentType) && {
            "content-type": input.ContentType
          }), isSerializableHeaderValue(input.Expires) && {
            expires: (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.Expires).toString()
          }), isSerializableHeaderValue(input.GrantFullControl) && {
            "x-amz-grant-full-control": input.GrantFullControl
          }), isSerializableHeaderValue(input.GrantRead) && {
            "x-amz-grant-read": input.GrantRead
          }), isSerializableHeaderValue(input.GrantReadACP) && {
            "x-amz-grant-read-acp": input.GrantReadACP
          }), isSerializableHeaderValue(input.GrantWriteACP) && {
            "x-amz-grant-write-acp": input.GrantWriteACP
          }), isSerializableHeaderValue(input.ServerSideEncryption) && {
            "x-amz-server-side-encryption": input.ServerSideEncryption
          }), isSerializableHeaderValue(input.StorageClass) && {
            "x-amz-storage-class": input.StorageClass
          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {
            "x-amz-website-redirect-location": input.WebsiteRedirectLocation
          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm
          }), isSerializableHeaderValue(input.SSECustomerKey) && {
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey
          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5
          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {
            "x-amz-server-side-encryption-aws-kms-key-id": input.SSEKMSKeyId
          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {
            "x-amz-server-side-encryption-context": input.SSEKMSEncryptionContext
          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {
            "x-amz-server-side-encryption-bucket-key-enabled": input.BucketKeyEnabled.toString()
          }), isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.Tagging) && {
            "x-amz-tagging": input.Tagging
          }), isSerializableHeaderValue(input.ObjectLockMode) && {
            "x-amz-object-lock-mode": input.ObjectLockMode
          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {
            "x-amz-object-lock-retain-until-date": (input.ObjectLockRetainUntilDate.toISOString().split(".")[0] + "Z").toString()
          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {
            "x-amz-object-lock-legal-hold": input.ObjectLockLegalHoldStatus
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {
            var _a;

            return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, acc), (_a = {}, _a["x-amz-meta-" + suffix.toLowerCase()] = input.Metadata[suffix], _a));
          }, {}));
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = {
            "x-id": "PutObject"
          };

          if (input.Body !== undefined) {
            contents = input.Body;
            body = contents;
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutObjectAclCommand = function serializeAws_restXmlPutObjectAclCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ACL) && {
            "x-amz-acl": input.ACL
          }), isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.GrantFullControl) && {
            "x-amz-grant-full-control": input.GrantFullControl
          }), isSerializableHeaderValue(input.GrantRead) && {
            "x-amz-grant-read": input.GrantRead
          }), isSerializableHeaderValue(input.GrantReadACP) && {
            "x-amz-grant-read-acp": input.GrantReadACP
          }), isSerializableHeaderValue(input.GrantWrite) && {
            "x-amz-grant-write": input.GrantWrite
          }), isSerializableHeaderValue(input.GrantWriteACP) && {
            "x-amz-grant-write-acp": input.GrantWriteACP
          }), isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            acl: ""
          }, input.VersionId !== undefined && {
            versionId: input.VersionId
          });

          if (input.AccessControlPolicy !== undefined) {
            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutObjectLegalHoldCommand = function serializeAws_restXmlPutObjectLegalHoldCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "legal-hold": ""
          }, input.VersionId !== undefined && {
            versionId: input.VersionId
          });

          if (input.LegalHold !== undefined) {
            contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutObjectLockConfigurationCommand = function serializeAws_restXmlPutObjectLockConfigurationCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.Token) && {
            "x-amz-bucket-object-lock-token": input.Token
          }), isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            "object-lock": ""
          };

          if (input.ObjectLockConfiguration !== undefined) {
            contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutObjectRetentionCommand = function serializeAws_restXmlPutObjectRetentionCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {
            "x-amz-bypass-governance-retention": input.BypassGovernanceRetention.toString()
          }), isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            retention: ""
          }, input.VersionId !== undefined && {
            versionId: input.VersionId
          });

          if (input.Retention !== undefined) {
            contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutObjectTaggingCommand = function serializeAws_restXmlPutObjectTaggingCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            tagging: ""
          }, input.VersionId !== undefined && {
            versionId: input.VersionId
          });

          if (input.Tagging !== undefined) {
            contents = serializeAws_restXmlTagging(input.Tagging, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlPutPublicAccessBlockCommand = function serializeAws_restXmlPutPublicAccessBlockCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          query = {
            publicAccessBlock: ""
          };

          if (input.PublicAccessBlockConfiguration !== undefined) {
            contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlRestoreObjectCommand = function serializeAws_restXmlRestoreObjectCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            restore: ""
          }, input.VersionId !== undefined && {
            versionId: input.VersionId
          });

          if (input.RestoreRequest !== undefined) {
            contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlSelectObjectContentCommand = function serializeAws_restXmlSelectObjectContentCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, bodyNode, node, node, node, node, node, node, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/xml"
          }, isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm
          }), isSerializableHeaderValue(input.SSECustomerKey) && {
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey
          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = {
            select: "",
            "select-type": "2"
          };
          body = '<?xml version="1.0" encoding="UTF-8"?>';
          bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SelectObjectContentRequest");
          bodyNode.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");

          if (input.Expression !== undefined) {
            node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Expression").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Expression)).withName("Expression");
            bodyNode.addChildNode(node);
          }

          if (input.ExpressionType !== undefined) {
            node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExpressionType").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ExpressionType)).withName("ExpressionType");
            bodyNode.addChildNode(node);
          }

          if (input.InputSerialization !== undefined) {
            node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName("InputSerialization");
            bodyNode.addChildNode(node);
          }

          if (input.OutputSerialization !== undefined) {
            node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName("OutputSerialization");
            bodyNode.addChildNode(node);
          }

          if (input.RequestProgress !== undefined) {
            node = serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName("RequestProgress");
            bodyNode.addChildNode(node);
          }

          if (input.ScanRange !== undefined) {
            node = serializeAws_restXmlScanRange(input.ScanRange, context).withName("ScanRange");
            bodyNode.addChildNode(node);
          }

          body += bodyNode.toString();
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlUploadPartCommand = function serializeAws_restXmlUploadPartCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "content-type": "application/octet-stream"
          }, isSerializableHeaderValue(input.ContentLength) && {
            "content-length": input.ContentLength.toString()
          }), isSerializableHeaderValue(input.ContentMD5) && {
            "content-md5": input.ContentMD5
          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm
          }), isSerializableHeaderValue(input.SSECustomerKey) && {
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey
          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5
          }), isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "x-id": "UploadPart"
          }, input.PartNumber !== undefined && {
            partNumber: input.PartNumber.toString()
          }), input.UploadId !== undefined && {
            uploadId: input.UploadId
          });

          if (input.Body !== undefined) {
            contents = input.Body;
            body = contents;
          }

          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var serializeAws_restXmlUploadPartCopyCommand = function serializeAws_restXmlUploadPartCopyCommand(input, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, isSerializableHeaderValue(input.CopySource) && {
            "x-amz-copy-source": input.CopySource
          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {
            "x-amz-copy-source-if-match": input.CopySourceIfMatch
          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {
            "x-amz-copy-source-if-modified-since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.CopySourceIfModifiedSince).toString()
          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {
            "x-amz-copy-source-if-none-match": input.CopySourceIfNoneMatch
          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {
            "x-amz-copy-source-if-unmodified-since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.CopySourceIfUnmodifiedSince).toString()
          }), isSerializableHeaderValue(input.CopySourceRange) && {
            "x-amz-copy-source-range": input.CopySourceRange
          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm
          }), isSerializableHeaderValue(input.SSECustomerKey) && {
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey
          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5
          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {
            "x-amz-copy-source-server-side-encryption-customer-algorithm": input.CopySourceSSECustomerAlgorithm
          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {
            "x-amz-copy-source-server-side-encryption-customer-key": input.CopySourceSSECustomerKey
          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {
            "x-amz-copy-source-server-side-encryption-customer-key-md5": input.CopySourceSSECustomerKeyMD5
          }), isSerializableHeaderValue(input.RequestPayer) && {
            "x-amz-request-payer": input.RequestPayer
          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          }), isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {
            "x-amz-source-expected-bucket-owner": input.ExpectedSourceBucketOwner
          });
          resolvedPath = "/{Bucket}/{Key+}";

          if (input.Bucket !== undefined) {
            labelValue = input.Bucket;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Bucket.");
            }

            resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
          } else {
            throw new Error("No value provided for input HTTP label: Bucket.");
          }

          if (input.Key !== undefined) {
            labelValue = input.Key;

            if (labelValue.length <= 0) {
              throw new Error("Empty value provided for input HTTP label: Key.");
            }

            resolvedPath = resolvedPath.replace("{Key+}", labelValue.split("/").map(function (segment) {
              return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment);
            }).join("/"));
          } else {
            throw new Error("No value provided for input HTTP label: Key.");
          }

          query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({
            "x-id": "UploadPartCopy"
          }, input.PartNumber !== undefined && {
            partNumber: input.PartNumber.toString()
          }), input.UploadId !== undefined && {
            uploadId: input.UploadId
          });
          return [4
          /*yield*/
          , context.endpoint()];

        case 1:
          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
          return [2
          /*return*/
          , new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          })];
      }
    });
  });
};
var deserializeAws_restXmlAbortMultipartUploadCommand = function deserializeAws_restXmlAbortMultipartUploadCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            RequestCharged: undefined
          };

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlAbortMultipartUploadCommandError = function deserializeAws_restXmlAbortMultipartUploadCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;

    var _d;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
      switch (_e.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _d = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "NoSuchUpload":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.s3#NoSuchUpload":
              return [3
              /*break*/
              , 2];
          }

          return [3
          /*break*/
          , 4];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([_e.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 5];

        case 4:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _e.label = 5;

        case 5:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlCompleteMultipartUploadCommand = function deserializeAws_restXmlCompleteMultipartUploadCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            Bucket: undefined,
            BucketKeyEnabled: undefined,
            ETag: undefined,
            Expiration: undefined,
            Key: undefined,
            Location: undefined,
            RequestCharged: undefined,
            SSEKMSKeyId: undefined,
            ServerSideEncryption: undefined,
            VersionId: undefined
          };

          if (output.headers["x-amz-expiration"] !== undefined) {
            contents.Expiration = output.headers["x-amz-expiration"];
          }

          if (output.headers["x-amz-server-side-encryption"] !== undefined) {
            contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
          }

          if (output.headers["x-amz-version-id"] !== undefined) {
            contents.VersionId = output.headers["x-amz-version-id"];
          }

          if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
            contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
          }

          if (output.headers["x-amz-server-side-encryption-bucket-key-enabled"] !== undefined) {
            contents.BucketKeyEnabled = output.headers["x-amz-server-side-encryption-bucket-key-enabled"] === "true";
          }

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["Bucket"] !== undefined) {
            contents.Bucket = data["Bucket"];
          }

          if (data["ETag"] !== undefined) {
            contents.ETag = data["ETag"];
          }

          if (data["Key"] !== undefined) {
            contents.Key = data["Key"];
          }

          if (data["Location"] !== undefined) {
            contents.Location = data["Location"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlCompleteMultipartUploadCommandError = function deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlCopyObjectCommand = function deserializeAws_restXmlCopyObjectCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlCopyObjectCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            BucketKeyEnabled: undefined,
            CopyObjectResult: undefined,
            CopySourceVersionId: undefined,
            Expiration: undefined,
            RequestCharged: undefined,
            SSECustomerAlgorithm: undefined,
            SSECustomerKeyMD5: undefined,
            SSEKMSEncryptionContext: undefined,
            SSEKMSKeyId: undefined,
            ServerSideEncryption: undefined,
            VersionId: undefined
          };

          if (output.headers["x-amz-expiration"] !== undefined) {
            contents.Expiration = output.headers["x-amz-expiration"];
          }

          if (output.headers["x-amz-copy-source-version-id"] !== undefined) {
            contents.CopySourceVersionId = output.headers["x-amz-copy-source-version-id"];
          }

          if (output.headers["x-amz-version-id"] !== undefined) {
            contents.VersionId = output.headers["x-amz-version-id"];
          }

          if (output.headers["x-amz-server-side-encryption"] !== undefined) {
            contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
          }

          if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
            contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
          }

          if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
            contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
          }

          if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
            contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
          }

          if (output.headers["x-amz-server-side-encryption-context"] !== undefined) {
            contents.SSEKMSEncryptionContext = output.headers["x-amz-server-side-encryption-context"];
          }

          if (output.headers["x-amz-server-side-encryption-bucket-key-enabled"] !== undefined) {
            contents.BucketKeyEnabled = output.headers["x-amz-server-side-encryption-bucket-key-enabled"] === "true";
          }

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlCopyObjectCommandError = function deserializeAws_restXmlCopyObjectCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;

    var _d;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
      switch (_e.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _d = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "ObjectNotInActiveTierError":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.s3#ObjectNotInActiveTierError":
              return [3
              /*break*/
              , 2];
          }

          return [3
          /*break*/
          , 4];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([_e.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 5];

        case 4:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _e.label = 5;

        case 5:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlCreateBucketCommand = function deserializeAws_restXmlCreateBucketCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlCreateBucketCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            Location: undefined
          };

          if (output.headers["location"] !== undefined) {
            contents.Location = output.headers["location"];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlCreateBucketCommandError = function deserializeAws_restXmlCreateBucketCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;

    var _e;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_f) {
      switch (_f.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _e = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "BucketAlreadyExists":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.s3#BucketAlreadyExists":
              return [3
              /*break*/
              , 2];

            case "BucketAlreadyOwnedByYou":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.s3#BucketAlreadyOwnedByYou":
              return [3
              /*break*/
              , 4];
          }

          return [3
          /*break*/
          , 6];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _d.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 6:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _f.label = 7;

        case 7:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlCreateMultipartUploadCommand = function deserializeAws_restXmlCreateMultipartUploadCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            AbortDate: undefined,
            AbortRuleId: undefined,
            Bucket: undefined,
            BucketKeyEnabled: undefined,
            Key: undefined,
            RequestCharged: undefined,
            SSECustomerAlgorithm: undefined,
            SSECustomerKeyMD5: undefined,
            SSEKMSEncryptionContext: undefined,
            SSEKMSKeyId: undefined,
            ServerSideEncryption: undefined,
            UploadId: undefined
          };

          if (output.headers["x-amz-abort-date"] !== undefined) {
            contents.AbortDate = new Date(output.headers["x-amz-abort-date"]);
          }

          if (output.headers["x-amz-abort-rule-id"] !== undefined) {
            contents.AbortRuleId = output.headers["x-amz-abort-rule-id"];
          }

          if (output.headers["x-amz-server-side-encryption"] !== undefined) {
            contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
          }

          if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
            contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
          }

          if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
            contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
          }

          if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
            contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
          }

          if (output.headers["x-amz-server-side-encryption-context"] !== undefined) {
            contents.SSEKMSEncryptionContext = output.headers["x-amz-server-side-encryption-context"];
          }

          if (output.headers["x-amz-server-side-encryption-bucket-key-enabled"] !== undefined) {
            contents.BucketKeyEnabled = output.headers["x-amz-server-side-encryption-bucket-key-enabled"] === "true";
          }

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["Bucket"] !== undefined) {
            contents.Bucket = data["Bucket"];
          }

          if (data["Key"] !== undefined) {
            contents.Key = data["Key"];
          }

          if (data["UploadId"] !== undefined) {
            contents.UploadId = data["UploadId"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlCreateMultipartUploadCommandError = function deserializeAws_restXmlCreateMultipartUploadCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketCommand = function deserializeAws_restXmlDeleteBucketCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteBucketCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketCommandError = function deserializeAws_restXmlDeleteBucketCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError = function deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketCorsCommand = function deserializeAws_restXmlDeleteBucketCorsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketCorsCommandError = function deserializeAws_restXmlDeleteBucketCorsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketEncryptionCommand = function deserializeAws_restXmlDeleteBucketEncryptionCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketEncryptionCommandError = function deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError = function deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError = function deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketLifecycleCommand = function deserializeAws_restXmlDeleteBucketLifecycleCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketLifecycleCommandError = function deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError = function deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketOwnershipControlsCommand = function deserializeAws_restXmlDeleteBucketOwnershipControlsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError = function deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketPolicyCommand = function deserializeAws_restXmlDeleteBucketPolicyCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketPolicyCommandError = function deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketReplicationCommand = function deserializeAws_restXmlDeleteBucketReplicationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketReplicationCommandError = function deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketTaggingCommand = function deserializeAws_restXmlDeleteBucketTaggingCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketTaggingCommandError = function deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketWebsiteCommand = function deserializeAws_restXmlDeleteBucketWebsiteCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteBucketWebsiteCommandError = function deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteObjectCommand = function deserializeAws_restXmlDeleteObjectCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteObjectCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            DeleteMarker: undefined,
            RequestCharged: undefined,
            VersionId: undefined
          };

          if (output.headers["x-amz-delete-marker"] !== undefined) {
            contents.DeleteMarker = output.headers["x-amz-delete-marker"] === "true";
          }

          if (output.headers["x-amz-version-id"] !== undefined) {
            contents.VersionId = output.headers["x-amz-version-id"];
          }

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteObjectCommandError = function deserializeAws_restXmlDeleteObjectCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteObjectsCommand = function deserializeAws_restXmlDeleteObjectsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteObjectsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            Deleted: undefined,
            Errors: undefined,
            RequestCharged: undefined
          };

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data.Deleted === "") {
            contents.Deleted = [];
          }

          if (data["Deleted"] !== undefined) {
            contents.Deleted = deserializeAws_restXmlDeletedObjects((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Deleted"]), context);
          }

          if (data.Error === "") {
            contents.Errors = [];
          }

          if (data["Error"] !== undefined) {
            contents.Errors = deserializeAws_restXmlErrors((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Error"]), context);
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteObjectsCommandError = function deserializeAws_restXmlDeleteObjectsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeleteObjectTaggingCommand = function deserializeAws_restXmlDeleteObjectTaggingCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            VersionId: undefined
          };

          if (output.headers["x-amz-version-id"] !== undefined) {
            contents.VersionId = output.headers["x-amz-version-id"];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeleteObjectTaggingCommandError = function deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlDeletePublicAccessBlockCommand = function deserializeAws_restXmlDeletePublicAccessBlockCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 204 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlDeletePublicAccessBlockCommandError = function deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketAccelerateConfigurationCommand = function deserializeAws_restXmlGetBucketAccelerateConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            Status: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["Status"] !== undefined) {
            contents.Status = data["Status"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError = function deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketAclCommand = function deserializeAws_restXmlGetBucketAclCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketAclCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            Grants: undefined,
            Owner: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data.AccessControlList === "") {
            contents.Grants = [];
          }

          if (data["AccessControlList"] !== undefined && data["AccessControlList"]["Grant"] !== undefined) {
            contents.Grants = deserializeAws_restXmlGrants((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["AccessControlList"]["Grant"]), context);
          }

          if (data["Owner"] !== undefined) {
            contents.Owner = deserializeAws_restXmlOwner(data["Owner"], context);
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketAclCommandError = function deserializeAws_restXmlGetBucketAclCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            AnalyticsConfiguration: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError = function deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketCorsCommand = function deserializeAws_restXmlGetBucketCorsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketCorsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            CORSRules: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data.CORSRule === "") {
            contents.CORSRules = [];
          }

          if (data["CORSRule"] !== undefined) {
            contents.CORSRules = deserializeAws_restXmlCORSRules((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["CORSRule"]), context);
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketCorsCommandError = function deserializeAws_restXmlGetBucketCorsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketEncryptionCommand = function deserializeAws_restXmlGetBucketEncryptionCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            ServerSideEncryptionConfiguration: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketEncryptionCommandError = function deserializeAws_restXmlGetBucketEncryptionCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            IntelligentTieringConfiguration: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.IntelligentTieringConfiguration = deserializeAws_restXmlIntelligentTieringConfiguration(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError = function deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketInventoryConfigurationCommand = function deserializeAws_restXmlGetBucketInventoryConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            InventoryConfiguration: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketInventoryConfigurationCommandError = function deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketLifecycleConfigurationCommand = function deserializeAws_restXmlGetBucketLifecycleConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            Rules: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data.Rule === "") {
            contents.Rules = [];
          }

          if (data["Rule"] !== undefined) {
            contents.Rules = deserializeAws_restXmlLifecycleRules((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Rule"]), context);
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError = function deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketLocationCommand = function deserializeAws_restXmlGetBucketLocationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketLocationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            LocationConstraint: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["LocationConstraint"] !== undefined) {
            contents.LocationConstraint = data["LocationConstraint"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketLocationCommandError = function deserializeAws_restXmlGetBucketLocationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketLoggingCommand = function deserializeAws_restXmlGetBucketLoggingCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            LoggingEnabled: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["LoggingEnabled"] !== undefined) {
            contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data["LoggingEnabled"], context);
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketLoggingCommandError = function deserializeAws_restXmlGetBucketLoggingCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketMetricsConfigurationCommand = function deserializeAws_restXmlGetBucketMetricsConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            MetricsConfiguration: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketMetricsConfigurationCommandError = function deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketNotificationConfigurationCommand = function deserializeAws_restXmlGetBucketNotificationConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            LambdaFunctionConfigurations: undefined,
            QueueConfigurations: undefined,
            TopicConfigurations: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data.CloudFunctionConfiguration === "") {
            contents.LambdaFunctionConfigurations = [];
          }

          if (data["CloudFunctionConfiguration"] !== undefined) {
            contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["CloudFunctionConfiguration"]), context);
          }

          if (data.QueueConfiguration === "") {
            contents.QueueConfigurations = [];
          }

          if (data["QueueConfiguration"] !== undefined) {
            contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["QueueConfiguration"]), context);
          }

          if (data.TopicConfiguration === "") {
            contents.TopicConfigurations = [];
          }

          if (data["TopicConfiguration"] !== undefined) {
            contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["TopicConfiguration"]), context);
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketNotificationConfigurationCommandError = function deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketOwnershipControlsCommand = function deserializeAws_restXmlGetBucketOwnershipControlsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            OwnershipControls: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.OwnershipControls = deserializeAws_restXmlOwnershipControls(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketOwnershipControlsCommandError = function deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketPolicyCommand = function deserializeAws_restXmlGetBucketPolicyCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            Policy: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["Policy"] !== undefined) {
            contents.Policy = data["Policy"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketPolicyCommandError = function deserializeAws_restXmlGetBucketPolicyCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketPolicyStatusCommand = function deserializeAws_restXmlGetBucketPolicyStatusCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            PolicyStatus: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketPolicyStatusCommandError = function deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketReplicationCommand = function deserializeAws_restXmlGetBucketReplicationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            ReplicationConfiguration: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketReplicationCommandError = function deserializeAws_restXmlGetBucketReplicationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketRequestPaymentCommand = function deserializeAws_restXmlGetBucketRequestPaymentCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            Payer: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["Payer"] !== undefined) {
            contents.Payer = data["Payer"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketRequestPaymentCommandError = function deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketTaggingCommand = function deserializeAws_restXmlGetBucketTaggingCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            TagSet: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data.TagSet === "") {
            contents.TagSet = [];
          }

          if (data["TagSet"] !== undefined && data["TagSet"]["Tag"] !== undefined) {
            contents.TagSet = deserializeAws_restXmlTagSet((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["TagSet"]["Tag"]), context);
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketTaggingCommandError = function deserializeAws_restXmlGetBucketTaggingCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketVersioningCommand = function deserializeAws_restXmlGetBucketVersioningCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            MFADelete: undefined,
            Status: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["MfaDelete"] !== undefined) {
            contents.MFADelete = data["MfaDelete"];
          }

          if (data["Status"] !== undefined) {
            contents.Status = data["Status"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketVersioningCommandError = function deserializeAws_restXmlGetBucketVersioningCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketWebsiteCommand = function deserializeAws_restXmlGetBucketWebsiteCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            ErrorDocument: undefined,
            IndexDocument: undefined,
            RedirectAllRequestsTo: undefined,
            RoutingRules: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["ErrorDocument"] !== undefined) {
            contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data["ErrorDocument"], context);
          }

          if (data["IndexDocument"] !== undefined) {
            contents.IndexDocument = deserializeAws_restXmlIndexDocument(data["IndexDocument"], context);
          }

          if (data["RedirectAllRequestsTo"] !== undefined) {
            contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data["RedirectAllRequestsTo"], context);
          }

          if (data.RoutingRules === "") {
            contents.RoutingRules = [];
          }

          if (data["RoutingRules"] !== undefined && data["RoutingRules"]["RoutingRule"] !== undefined) {
            contents.RoutingRules = deserializeAws_restXmlRoutingRules((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["RoutingRules"]["RoutingRule"]), context);
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetBucketWebsiteCommandError = function deserializeAws_restXmlGetBucketWebsiteCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetObjectCommand = function deserializeAws_restXmlGetObjectCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      if (output.statusCode !== 200 && output.statusCode >= 300) {
        return [2
        /*return*/
        , deserializeAws_restXmlGetObjectCommandError(output, context)];
      }

      contents = {
        $metadata: deserializeMetadata(output),
        AcceptRanges: undefined,
        Body: undefined,
        BucketKeyEnabled: undefined,
        CacheControl: undefined,
        ContentDisposition: undefined,
        ContentEncoding: undefined,
        ContentLanguage: undefined,
        ContentLength: undefined,
        ContentRange: undefined,
        ContentType: undefined,
        DeleteMarker: undefined,
        ETag: undefined,
        Expiration: undefined,
        Expires: undefined,
        LastModified: undefined,
        Metadata: undefined,
        MissingMeta: undefined,
        ObjectLockLegalHoldStatus: undefined,
        ObjectLockMode: undefined,
        ObjectLockRetainUntilDate: undefined,
        PartsCount: undefined,
        ReplicationStatus: undefined,
        RequestCharged: undefined,
        Restore: undefined,
        SSECustomerAlgorithm: undefined,
        SSECustomerKeyMD5: undefined,
        SSEKMSKeyId: undefined,
        ServerSideEncryption: undefined,
        StorageClass: undefined,
        TagCount: undefined,
        VersionId: undefined,
        WebsiteRedirectLocation: undefined
      };

      if (output.headers["x-amz-delete-marker"] !== undefined) {
        contents.DeleteMarker = output.headers["x-amz-delete-marker"] === "true";
      }

      if (output.headers["accept-ranges"] !== undefined) {
        contents.AcceptRanges = output.headers["accept-ranges"];
      }

      if (output.headers["x-amz-expiration"] !== undefined) {
        contents.Expiration = output.headers["x-amz-expiration"];
      }

      if (output.headers["x-amz-restore"] !== undefined) {
        contents.Restore = output.headers["x-amz-restore"];
      }

      if (output.headers["last-modified"] !== undefined) {
        contents.LastModified = new Date(output.headers["last-modified"]);
      }

      if (output.headers["content-length"] !== undefined) {
        contents.ContentLength = parseInt(output.headers["content-length"], 10);
      }

      if (output.headers["etag"] !== undefined) {
        contents.ETag = output.headers["etag"];
      }

      if (output.headers["x-amz-missing-meta"] !== undefined) {
        contents.MissingMeta = parseInt(output.headers["x-amz-missing-meta"], 10);
      }

      if (output.headers["x-amz-version-id"] !== undefined) {
        contents.VersionId = output.headers["x-amz-version-id"];
      }

      if (output.headers["cache-control"] !== undefined) {
        contents.CacheControl = output.headers["cache-control"];
      }

      if (output.headers["content-disposition"] !== undefined) {
        contents.ContentDisposition = output.headers["content-disposition"];
      }

      if (output.headers["content-encoding"] !== undefined) {
        contents.ContentEncoding = output.headers["content-encoding"];
      }

      if (output.headers["content-language"] !== undefined) {
        contents.ContentLanguage = output.headers["content-language"];
      }

      if (output.headers["content-range"] !== undefined) {
        contents.ContentRange = output.headers["content-range"];
      }

      if (output.headers["content-type"] !== undefined) {
        contents.ContentType = output.headers["content-type"];
      }

      if (output.headers["expires"] !== undefined) {
        contents.Expires = new Date(output.headers["expires"]);
      }

      if (output.headers["x-amz-website-redirect-location"] !== undefined) {
        contents.WebsiteRedirectLocation = output.headers["x-amz-website-redirect-location"];
      }

      if (output.headers["x-amz-server-side-encryption"] !== undefined) {
        contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
      }

      if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
        contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
      }

      if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
        contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
      }

      if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
        contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
      }

      if (output.headers["x-amz-server-side-encryption-bucket-key-enabled"] !== undefined) {
        contents.BucketKeyEnabled = output.headers["x-amz-server-side-encryption-bucket-key-enabled"] === "true";
      }

      if (output.headers["x-amz-storage-class"] !== undefined) {
        contents.StorageClass = output.headers["x-amz-storage-class"];
      }

      if (output.headers["x-amz-request-charged"] !== undefined) {
        contents.RequestCharged = output.headers["x-amz-request-charged"];
      }

      if (output.headers["x-amz-replication-status"] !== undefined) {
        contents.ReplicationStatus = output.headers["x-amz-replication-status"];
      }

      if (output.headers["x-amz-mp-parts-count"] !== undefined) {
        contents.PartsCount = parseInt(output.headers["x-amz-mp-parts-count"], 10);
      }

      if (output.headers["x-amz-tagging-count"] !== undefined) {
        contents.TagCount = parseInt(output.headers["x-amz-tagging-count"], 10);
      }

      if (output.headers["x-amz-object-lock-mode"] !== undefined) {
        contents.ObjectLockMode = output.headers["x-amz-object-lock-mode"];
      }

      if (output.headers["x-amz-object-lock-retain-until-date"] !== undefined) {
        contents.ObjectLockRetainUntilDate = new Date(output.headers["x-amz-object-lock-retain-until-date"]);
      }

      if (output.headers["x-amz-object-lock-legal-hold"] !== undefined) {
        contents.ObjectLockLegalHoldStatus = output.headers["x-amz-object-lock-legal-hold"];
      }

      Object.keys(output.headers).forEach(function (header) {
        if (contents.Metadata === undefined) {
          contents.Metadata = {};
        }

        if (header.startsWith("x-amz-meta-")) {
          contents.Metadata[header.substring(11)] = output.headers[header];
        }
      });
      data = output.body;
      contents.Body = data;
      return [2
      /*return*/
      , Promise.resolve(contents)];
    });
  });
};

var deserializeAws_restXmlGetObjectCommandError = function deserializeAws_restXmlGetObjectCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;

    var _e;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_f) {
      switch (_f.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _e = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "InvalidObjectState":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.s3#InvalidObjectState":
              return [3
              /*break*/
              , 2];

            case "NoSuchKey":
              return [3
              /*break*/
              , 4];

            case "com.amazonaws.s3#NoSuchKey":
              return [3
              /*break*/
              , 4];
          }

          return [3
          /*break*/
          , 6];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_restXmlInvalidObjectStateResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 4:
          _d = [{}];
          return [4
          /*yield*/
          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];

        case 5:
          response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _d.concat([_f.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 7];

        case 6:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _f.label = 7;

        case 7:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetObjectAclCommand = function deserializeAws_restXmlGetObjectAclCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetObjectAclCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            Grants: undefined,
            Owner: undefined,
            RequestCharged: undefined
          };

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data.AccessControlList === "") {
            contents.Grants = [];
          }

          if (data["AccessControlList"] !== undefined && data["AccessControlList"]["Grant"] !== undefined) {
            contents.Grants = deserializeAws_restXmlGrants((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["AccessControlList"]["Grant"]), context);
          }

          if (data["Owner"] !== undefined) {
            contents.Owner = deserializeAws_restXmlOwner(data["Owner"], context);
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetObjectAclCommandError = function deserializeAws_restXmlGetObjectAclCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;

    var _d;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
      switch (_e.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _d = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "NoSuchKey":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.s3#NoSuchKey":
              return [3
              /*break*/
              , 2];
          }

          return [3
          /*break*/
          , 4];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([_e.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 5];

        case 4:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _e.label = 5;

        case 5:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetObjectLegalHoldCommand = function deserializeAws_restXmlGetObjectLegalHoldCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            LegalHold: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetObjectLegalHoldCommandError = function deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetObjectLockConfigurationCommand = function deserializeAws_restXmlGetObjectLockConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            ObjectLockConfiguration: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetObjectLockConfigurationCommandError = function deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetObjectRetentionCommand = function deserializeAws_restXmlGetObjectRetentionCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            Retention: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetObjectRetentionCommandError = function deserializeAws_restXmlGetObjectRetentionCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetObjectTaggingCommand = function deserializeAws_restXmlGetObjectTaggingCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            TagSet: undefined,
            VersionId: undefined
          };

          if (output.headers["x-amz-version-id"] !== undefined) {
            contents.VersionId = output.headers["x-amz-version-id"];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data.TagSet === "") {
            contents.TagSet = [];
          }

          if (data["TagSet"] !== undefined && data["TagSet"]["Tag"] !== undefined) {
            contents.TagSet = deserializeAws_restXmlTagSet((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["TagSet"]["Tag"]), context);
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetObjectTaggingCommandError = function deserializeAws_restXmlGetObjectTaggingCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetObjectTorrentCommand = function deserializeAws_restXmlGetObjectTorrentCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      if (output.statusCode !== 200 && output.statusCode >= 300) {
        return [2
        /*return*/
        , deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];
      }

      contents = {
        $metadata: deserializeMetadata(output),
        Body: undefined,
        RequestCharged: undefined
      };

      if (output.headers["x-amz-request-charged"] !== undefined) {
        contents.RequestCharged = output.headers["x-amz-request-charged"];
      }

      data = output.body;
      contents.Body = data;
      return [2
      /*return*/
      , Promise.resolve(contents)];
    });
  });
};

var deserializeAws_restXmlGetObjectTorrentCommandError = function deserializeAws_restXmlGetObjectTorrentCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlGetPublicAccessBlockCommand = function deserializeAws_restXmlGetPublicAccessBlockCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            PublicAccessBlockConfiguration: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlGetPublicAccessBlockCommandError = function deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlHeadBucketCommand = function deserializeAws_restXmlHeadBucketCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlHeadBucketCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlHeadBucketCommandError = function deserializeAws_restXmlHeadBucketCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;

    var _d;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
      switch (_e.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _d = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "NoSuchBucket":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.s3#NoSuchBucket":
              return [3
              /*break*/
              , 2];
          }

          return [3
          /*break*/
          , 4];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([_e.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 5];

        case 4:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _e.label = 5;

        case 5:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlHeadObjectCommand = function deserializeAws_restXmlHeadObjectCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlHeadObjectCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            AcceptRanges: undefined,
            ArchiveStatus: undefined,
            BucketKeyEnabled: undefined,
            CacheControl: undefined,
            ContentDisposition: undefined,
            ContentEncoding: undefined,
            ContentLanguage: undefined,
            ContentLength: undefined,
            ContentType: undefined,
            DeleteMarker: undefined,
            ETag: undefined,
            Expiration: undefined,
            Expires: undefined,
            LastModified: undefined,
            Metadata: undefined,
            MissingMeta: undefined,
            ObjectLockLegalHoldStatus: undefined,
            ObjectLockMode: undefined,
            ObjectLockRetainUntilDate: undefined,
            PartsCount: undefined,
            ReplicationStatus: undefined,
            RequestCharged: undefined,
            Restore: undefined,
            SSECustomerAlgorithm: undefined,
            SSECustomerKeyMD5: undefined,
            SSEKMSKeyId: undefined,
            ServerSideEncryption: undefined,
            StorageClass: undefined,
            VersionId: undefined,
            WebsiteRedirectLocation: undefined
          };

          if (output.headers["x-amz-delete-marker"] !== undefined) {
            contents.DeleteMarker = output.headers["x-amz-delete-marker"] === "true";
          }

          if (output.headers["accept-ranges"] !== undefined) {
            contents.AcceptRanges = output.headers["accept-ranges"];
          }

          if (output.headers["x-amz-expiration"] !== undefined) {
            contents.Expiration = output.headers["x-amz-expiration"];
          }

          if (output.headers["x-amz-restore"] !== undefined) {
            contents.Restore = output.headers["x-amz-restore"];
          }

          if (output.headers["x-amz-archive-status"] !== undefined) {
            contents.ArchiveStatus = output.headers["x-amz-archive-status"];
          }

          if (output.headers["last-modified"] !== undefined) {
            contents.LastModified = new Date(output.headers["last-modified"]);
          }

          if (output.headers["content-length"] !== undefined) {
            contents.ContentLength = parseInt(output.headers["content-length"], 10);
          }

          if (output.headers["etag"] !== undefined) {
            contents.ETag = output.headers["etag"];
          }

          if (output.headers["x-amz-missing-meta"] !== undefined) {
            contents.MissingMeta = parseInt(output.headers["x-amz-missing-meta"], 10);
          }

          if (output.headers["x-amz-version-id"] !== undefined) {
            contents.VersionId = output.headers["x-amz-version-id"];
          }

          if (output.headers["cache-control"] !== undefined) {
            contents.CacheControl = output.headers["cache-control"];
          }

          if (output.headers["content-disposition"] !== undefined) {
            contents.ContentDisposition = output.headers["content-disposition"];
          }

          if (output.headers["content-encoding"] !== undefined) {
            contents.ContentEncoding = output.headers["content-encoding"];
          }

          if (output.headers["content-language"] !== undefined) {
            contents.ContentLanguage = output.headers["content-language"];
          }

          if (output.headers["content-type"] !== undefined) {
            contents.ContentType = output.headers["content-type"];
          }

          if (output.headers["expires"] !== undefined) {
            contents.Expires = new Date(output.headers["expires"]);
          }

          if (output.headers["x-amz-website-redirect-location"] !== undefined) {
            contents.WebsiteRedirectLocation = output.headers["x-amz-website-redirect-location"];
          }

          if (output.headers["x-amz-server-side-encryption"] !== undefined) {
            contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
          }

          if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
            contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
          }

          if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
            contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
          }

          if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
            contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
          }

          if (output.headers["x-amz-server-side-encryption-bucket-key-enabled"] !== undefined) {
            contents.BucketKeyEnabled = output.headers["x-amz-server-side-encryption-bucket-key-enabled"] === "true";
          }

          if (output.headers["x-amz-storage-class"] !== undefined) {
            contents.StorageClass = output.headers["x-amz-storage-class"];
          }

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          if (output.headers["x-amz-replication-status"] !== undefined) {
            contents.ReplicationStatus = output.headers["x-amz-replication-status"];
          }

          if (output.headers["x-amz-mp-parts-count"] !== undefined) {
            contents.PartsCount = parseInt(output.headers["x-amz-mp-parts-count"], 10);
          }

          if (output.headers["x-amz-object-lock-mode"] !== undefined) {
            contents.ObjectLockMode = output.headers["x-amz-object-lock-mode"];
          }

          if (output.headers["x-amz-object-lock-retain-until-date"] !== undefined) {
            contents.ObjectLockRetainUntilDate = new Date(output.headers["x-amz-object-lock-retain-until-date"]);
          }

          if (output.headers["x-amz-object-lock-legal-hold"] !== undefined) {
            contents.ObjectLockLegalHoldStatus = output.headers["x-amz-object-lock-legal-hold"];
          }

          Object.keys(output.headers).forEach(function (header) {
            if (contents.Metadata === undefined) {
              contents.Metadata = {};
            }

            if (header.startsWith("x-amz-meta-")) {
              contents.Metadata[header.substring(11)] = output.headers[header];
            }
          });
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlHeadObjectCommandError = function deserializeAws_restXmlHeadObjectCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;

    var _d;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
      switch (_e.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _d = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "NoSuchKey":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.s3#NoSuchKey":
              return [3
              /*break*/
              , 2];
          }

          return [3
          /*break*/
          , 4];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([_e.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 5];

        case 4:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _e.label = 5;

        case 5:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            AnalyticsConfigurationList: undefined,
            ContinuationToken: undefined,
            IsTruncated: undefined,
            NextContinuationToken: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data.AnalyticsConfiguration === "") {
            contents.AnalyticsConfigurationList = [];
          }

          if (data["AnalyticsConfiguration"] !== undefined) {
            contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["AnalyticsConfiguration"]), context);
          }

          if (data["ContinuationToken"] !== undefined) {
            contents.ContinuationToken = data["ContinuationToken"];
          }

          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = data["IsTruncated"] == "true";
          }

          if (data["NextContinuationToken"] !== undefined) {
            contents.NextContinuationToken = data["NextContinuationToken"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError = function deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            ContinuationToken: undefined,
            IntelligentTieringConfigurationList: undefined,
            IsTruncated: undefined,
            NextContinuationToken: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["ContinuationToken"] !== undefined) {
            contents.ContinuationToken = data["ContinuationToken"];
          }

          if (data.IntelligentTieringConfiguration === "") {
            contents.IntelligentTieringConfigurationList = [];
          }

          if (data["IntelligentTieringConfiguration"] !== undefined) {
            contents.IntelligentTieringConfigurationList = deserializeAws_restXmlIntelligentTieringConfigurationList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["IntelligentTieringConfiguration"]), context);
          }

          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = data["IsTruncated"] == "true";
          }

          if (data["NextContinuationToken"] !== undefined) {
            contents.NextContinuationToken = data["NextContinuationToken"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError = function deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlListBucketInventoryConfigurationsCommand = function deserializeAws_restXmlListBucketInventoryConfigurationsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            ContinuationToken: undefined,
            InventoryConfigurationList: undefined,
            IsTruncated: undefined,
            NextContinuationToken: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["ContinuationToken"] !== undefined) {
            contents.ContinuationToken = data["ContinuationToken"];
          }

          if (data.InventoryConfiguration === "") {
            contents.InventoryConfigurationList = [];
          }

          if (data["InventoryConfiguration"] !== undefined) {
            contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["InventoryConfiguration"]), context);
          }

          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = data["IsTruncated"] == "true";
          }

          if (data["NextContinuationToken"] !== undefined) {
            contents.NextContinuationToken = data["NextContinuationToken"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlListBucketInventoryConfigurationsCommandError = function deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlListBucketMetricsConfigurationsCommand = function deserializeAws_restXmlListBucketMetricsConfigurationsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            ContinuationToken: undefined,
            IsTruncated: undefined,
            MetricsConfigurationList: undefined,
            NextContinuationToken: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["ContinuationToken"] !== undefined) {
            contents.ContinuationToken = data["ContinuationToken"];
          }

          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = data["IsTruncated"] == "true";
          }

          if (data.MetricsConfiguration === "") {
            contents.MetricsConfigurationList = [];
          }

          if (data["MetricsConfiguration"] !== undefined) {
            contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["MetricsConfiguration"]), context);
          }

          if (data["NextContinuationToken"] !== undefined) {
            contents.NextContinuationToken = data["NextContinuationToken"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlListBucketMetricsConfigurationsCommandError = function deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlListBucketsCommand = function deserializeAws_restXmlListBucketsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlListBucketsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            Buckets: undefined,
            Owner: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data.Buckets === "") {
            contents.Buckets = [];
          }

          if (data["Buckets"] !== undefined && data["Buckets"]["Bucket"] !== undefined) {
            contents.Buckets = deserializeAws_restXmlBuckets((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Buckets"]["Bucket"]), context);
          }

          if (data["Owner"] !== undefined) {
            contents.Owner = deserializeAws_restXmlOwner(data["Owner"], context);
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlListBucketsCommandError = function deserializeAws_restXmlListBucketsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlListMultipartUploadsCommand = function deserializeAws_restXmlListMultipartUploadsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            Bucket: undefined,
            CommonPrefixes: undefined,
            Delimiter: undefined,
            EncodingType: undefined,
            IsTruncated: undefined,
            KeyMarker: undefined,
            MaxUploads: undefined,
            NextKeyMarker: undefined,
            NextUploadIdMarker: undefined,
            Prefix: undefined,
            UploadIdMarker: undefined,
            Uploads: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["Bucket"] !== undefined) {
            contents.Bucket = data["Bucket"];
          }

          if (data.CommonPrefixes === "") {
            contents.CommonPrefixes = [];
          }

          if (data["CommonPrefixes"] !== undefined) {
            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["CommonPrefixes"]), context);
          }

          if (data["Delimiter"] !== undefined) {
            contents.Delimiter = data["Delimiter"];
          }

          if (data["EncodingType"] !== undefined) {
            contents.EncodingType = data["EncodingType"];
          }

          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = data["IsTruncated"] == "true";
          }

          if (data["KeyMarker"] !== undefined) {
            contents.KeyMarker = data["KeyMarker"];
          }

          if (data["MaxUploads"] !== undefined) {
            contents.MaxUploads = parseInt(data["MaxUploads"]);
          }

          if (data["NextKeyMarker"] !== undefined) {
            contents.NextKeyMarker = data["NextKeyMarker"];
          }

          if (data["NextUploadIdMarker"] !== undefined) {
            contents.NextUploadIdMarker = data["NextUploadIdMarker"];
          }

          if (data["Prefix"] !== undefined) {
            contents.Prefix = data["Prefix"];
          }

          if (data["UploadIdMarker"] !== undefined) {
            contents.UploadIdMarker = data["UploadIdMarker"];
          }

          if (data.Upload === "") {
            contents.Uploads = [];
          }

          if (data["Upload"] !== undefined) {
            contents.Uploads = deserializeAws_restXmlMultipartUploadList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Upload"]), context);
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlListMultipartUploadsCommandError = function deserializeAws_restXmlListMultipartUploadsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlListObjectsCommand = function deserializeAws_restXmlListObjectsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlListObjectsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            CommonPrefixes: undefined,
            Contents: undefined,
            Delimiter: undefined,
            EncodingType: undefined,
            IsTruncated: undefined,
            Marker: undefined,
            MaxKeys: undefined,
            Name: undefined,
            NextMarker: undefined,
            Prefix: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data.CommonPrefixes === "") {
            contents.CommonPrefixes = [];
          }

          if (data["CommonPrefixes"] !== undefined) {
            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["CommonPrefixes"]), context);
          }

          if (data.Contents === "") {
            contents.Contents = [];
          }

          if (data["Contents"] !== undefined) {
            contents.Contents = deserializeAws_restXmlObjectList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Contents"]), context);
          }

          if (data["Delimiter"] !== undefined) {
            contents.Delimiter = data["Delimiter"];
          }

          if (data["EncodingType"] !== undefined) {
            contents.EncodingType = data["EncodingType"];
          }

          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = data["IsTruncated"] == "true";
          }

          if (data["Marker"] !== undefined) {
            contents.Marker = data["Marker"];
          }

          if (data["MaxKeys"] !== undefined) {
            contents.MaxKeys = parseInt(data["MaxKeys"]);
          }

          if (data["Name"] !== undefined) {
            contents.Name = data["Name"];
          }

          if (data["NextMarker"] !== undefined) {
            contents.NextMarker = data["NextMarker"];
          }

          if (data["Prefix"] !== undefined) {
            contents.Prefix = data["Prefix"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlListObjectsCommandError = function deserializeAws_restXmlListObjectsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;

    var _d;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
      switch (_e.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _d = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "NoSuchBucket":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.s3#NoSuchBucket":
              return [3
              /*break*/
              , 2];
          }

          return [3
          /*break*/
          , 4];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([_e.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 5];

        case 4:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _e.label = 5;

        case 5:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlListObjectsV2Command = function deserializeAws_restXmlListObjectsV2Command(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlListObjectsV2CommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            CommonPrefixes: undefined,
            Contents: undefined,
            ContinuationToken: undefined,
            Delimiter: undefined,
            EncodingType: undefined,
            IsTruncated: undefined,
            KeyCount: undefined,
            MaxKeys: undefined,
            Name: undefined,
            NextContinuationToken: undefined,
            Prefix: undefined,
            StartAfter: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data.CommonPrefixes === "") {
            contents.CommonPrefixes = [];
          }

          if (data["CommonPrefixes"] !== undefined) {
            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["CommonPrefixes"]), context);
          }

          if (data.Contents === "") {
            contents.Contents = [];
          }

          if (data["Contents"] !== undefined) {
            contents.Contents = deserializeAws_restXmlObjectList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Contents"]), context);
          }

          if (data["ContinuationToken"] !== undefined) {
            contents.ContinuationToken = data["ContinuationToken"];
          }

          if (data["Delimiter"] !== undefined) {
            contents.Delimiter = data["Delimiter"];
          }

          if (data["EncodingType"] !== undefined) {
            contents.EncodingType = data["EncodingType"];
          }

          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = data["IsTruncated"] == "true";
          }

          if (data["KeyCount"] !== undefined) {
            contents.KeyCount = parseInt(data["KeyCount"]);
          }

          if (data["MaxKeys"] !== undefined) {
            contents.MaxKeys = parseInt(data["MaxKeys"]);
          }

          if (data["Name"] !== undefined) {
            contents.Name = data["Name"];
          }

          if (data["NextContinuationToken"] !== undefined) {
            contents.NextContinuationToken = data["NextContinuationToken"];
          }

          if (data["Prefix"] !== undefined) {
            contents.Prefix = data["Prefix"];
          }

          if (data["StartAfter"] !== undefined) {
            contents.StartAfter = data["StartAfter"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlListObjectsV2CommandError = function deserializeAws_restXmlListObjectsV2CommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;

    var _d;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
      switch (_e.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _d = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "NoSuchBucket":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.s3#NoSuchBucket":
              return [3
              /*break*/
              , 2];
          }

          return [3
          /*break*/
          , 4];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([_e.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 5];

        case 4:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _e.label = 5;

        case 5:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlListObjectVersionsCommand = function deserializeAws_restXmlListObjectVersionsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlListObjectVersionsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            CommonPrefixes: undefined,
            DeleteMarkers: undefined,
            Delimiter: undefined,
            EncodingType: undefined,
            IsTruncated: undefined,
            KeyMarker: undefined,
            MaxKeys: undefined,
            Name: undefined,
            NextKeyMarker: undefined,
            NextVersionIdMarker: undefined,
            Prefix: undefined,
            VersionIdMarker: undefined,
            Versions: undefined
          };
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data.CommonPrefixes === "") {
            contents.CommonPrefixes = [];
          }

          if (data["CommonPrefixes"] !== undefined) {
            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["CommonPrefixes"]), context);
          }

          if (data.DeleteMarker === "") {
            contents.DeleteMarkers = [];
          }

          if (data["DeleteMarker"] !== undefined) {
            contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["DeleteMarker"]), context);
          }

          if (data["Delimiter"] !== undefined) {
            contents.Delimiter = data["Delimiter"];
          }

          if (data["EncodingType"] !== undefined) {
            contents.EncodingType = data["EncodingType"];
          }

          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = data["IsTruncated"] == "true";
          }

          if (data["KeyMarker"] !== undefined) {
            contents.KeyMarker = data["KeyMarker"];
          }

          if (data["MaxKeys"] !== undefined) {
            contents.MaxKeys = parseInt(data["MaxKeys"]);
          }

          if (data["Name"] !== undefined) {
            contents.Name = data["Name"];
          }

          if (data["NextKeyMarker"] !== undefined) {
            contents.NextKeyMarker = data["NextKeyMarker"];
          }

          if (data["NextVersionIdMarker"] !== undefined) {
            contents.NextVersionIdMarker = data["NextVersionIdMarker"];
          }

          if (data["Prefix"] !== undefined) {
            contents.Prefix = data["Prefix"];
          }

          if (data["VersionIdMarker"] !== undefined) {
            contents.VersionIdMarker = data["VersionIdMarker"];
          }

          if (data.Version === "") {
            contents.Versions = [];
          }

          if (data["Version"] !== undefined) {
            contents.Versions = deserializeAws_restXmlObjectVersionList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Version"]), context);
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlListObjectVersionsCommandError = function deserializeAws_restXmlListObjectVersionsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlListPartsCommand = function deserializeAws_restXmlListPartsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlListPartsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            AbortDate: undefined,
            AbortRuleId: undefined,
            Bucket: undefined,
            Initiator: undefined,
            IsTruncated: undefined,
            Key: undefined,
            MaxParts: undefined,
            NextPartNumberMarker: undefined,
            Owner: undefined,
            PartNumberMarker: undefined,
            Parts: undefined,
            RequestCharged: undefined,
            StorageClass: undefined,
            UploadId: undefined
          };

          if (output.headers["x-amz-abort-date"] !== undefined) {
            contents.AbortDate = new Date(output.headers["x-amz-abort-date"]);
          }

          if (output.headers["x-amz-abort-rule-id"] !== undefined) {
            contents.AbortRuleId = output.headers["x-amz-abort-rule-id"];
          }

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();

          if (data["Bucket"] !== undefined) {
            contents.Bucket = data["Bucket"];
          }

          if (data["Initiator"] !== undefined) {
            contents.Initiator = deserializeAws_restXmlInitiator(data["Initiator"], context);
          }

          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = data["IsTruncated"] == "true";
          }

          if (data["Key"] !== undefined) {
            contents.Key = data["Key"];
          }

          if (data["MaxParts"] !== undefined) {
            contents.MaxParts = parseInt(data["MaxParts"]);
          }

          if (data["NextPartNumberMarker"] !== undefined) {
            contents.NextPartNumberMarker = data["NextPartNumberMarker"];
          }

          if (data["Owner"] !== undefined) {
            contents.Owner = deserializeAws_restXmlOwner(data["Owner"], context);
          }

          if (data["PartNumberMarker"] !== undefined) {
            contents.PartNumberMarker = data["PartNumberMarker"];
          }

          if (data.Part === "") {
            contents.Parts = [];
          }

          if (data["Part"] !== undefined) {
            contents.Parts = deserializeAws_restXmlParts((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Part"]), context);
          }

          if (data["StorageClass"] !== undefined) {
            contents.StorageClass = data["StorageClass"];
          }

          if (data["UploadId"] !== undefined) {
            contents.UploadId = data["UploadId"];
          }

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlListPartsCommandError = function deserializeAws_restXmlListPartsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketAccelerateConfigurationCommand = function deserializeAws_restXmlPutBucketAccelerateConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError = function deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketAclCommand = function deserializeAws_restXmlPutBucketAclCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketAclCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketAclCommandError = function deserializeAws_restXmlPutBucketAclCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError = function deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketCorsCommand = function deserializeAws_restXmlPutBucketCorsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketCorsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketCorsCommandError = function deserializeAws_restXmlPutBucketCorsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketEncryptionCommand = function deserializeAws_restXmlPutBucketEncryptionCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketEncryptionCommandError = function deserializeAws_restXmlPutBucketEncryptionCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError = function deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketInventoryConfigurationCommand = function deserializeAws_restXmlPutBucketInventoryConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketInventoryConfigurationCommandError = function deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketLifecycleConfigurationCommand = function deserializeAws_restXmlPutBucketLifecycleConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError = function deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketLoggingCommand = function deserializeAws_restXmlPutBucketLoggingCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketLoggingCommandError = function deserializeAws_restXmlPutBucketLoggingCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketMetricsConfigurationCommand = function deserializeAws_restXmlPutBucketMetricsConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketMetricsConfigurationCommandError = function deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketNotificationConfigurationCommand = function deserializeAws_restXmlPutBucketNotificationConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketNotificationConfigurationCommandError = function deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketOwnershipControlsCommand = function deserializeAws_restXmlPutBucketOwnershipControlsCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketOwnershipControlsCommandError = function deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketPolicyCommand = function deserializeAws_restXmlPutBucketPolicyCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketPolicyCommandError = function deserializeAws_restXmlPutBucketPolicyCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketReplicationCommand = function deserializeAws_restXmlPutBucketReplicationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketReplicationCommandError = function deserializeAws_restXmlPutBucketReplicationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketRequestPaymentCommand = function deserializeAws_restXmlPutBucketRequestPaymentCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketRequestPaymentCommandError = function deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketTaggingCommand = function deserializeAws_restXmlPutBucketTaggingCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketTaggingCommandError = function deserializeAws_restXmlPutBucketTaggingCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketVersioningCommand = function deserializeAws_restXmlPutBucketVersioningCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketVersioningCommandError = function deserializeAws_restXmlPutBucketVersioningCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketWebsiteCommand = function deserializeAws_restXmlPutBucketWebsiteCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutBucketWebsiteCommandError = function deserializeAws_restXmlPutBucketWebsiteCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutObjectCommand = function deserializeAws_restXmlPutObjectCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutObjectCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            BucketKeyEnabled: undefined,
            ETag: undefined,
            Expiration: undefined,
            RequestCharged: undefined,
            SSECustomerAlgorithm: undefined,
            SSECustomerKeyMD5: undefined,
            SSEKMSEncryptionContext: undefined,
            SSEKMSKeyId: undefined,
            ServerSideEncryption: undefined,
            VersionId: undefined
          };

          if (output.headers["x-amz-expiration"] !== undefined) {
            contents.Expiration = output.headers["x-amz-expiration"];
          }

          if (output.headers["etag"] !== undefined) {
            contents.ETag = output.headers["etag"];
          }

          if (output.headers["x-amz-server-side-encryption"] !== undefined) {
            contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
          }

          if (output.headers["x-amz-version-id"] !== undefined) {
            contents.VersionId = output.headers["x-amz-version-id"];
          }

          if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
            contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
          }

          if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
            contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
          }

          if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
            contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
          }

          if (output.headers["x-amz-server-side-encryption-context"] !== undefined) {
            contents.SSEKMSEncryptionContext = output.headers["x-amz-server-side-encryption-context"];
          }

          if (output.headers["x-amz-server-side-encryption-bucket-key-enabled"] !== undefined) {
            contents.BucketKeyEnabled = output.headers["x-amz-server-side-encryption-bucket-key-enabled"] === "true";
          }

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutObjectCommandError = function deserializeAws_restXmlPutObjectCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutObjectAclCommand = function deserializeAws_restXmlPutObjectAclCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutObjectAclCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            RequestCharged: undefined
          };

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutObjectAclCommandError = function deserializeAws_restXmlPutObjectAclCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;

    var _d;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
      switch (_e.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _d = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "NoSuchKey":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.s3#NoSuchKey":
              return [3
              /*break*/
              , 2];
          }

          return [3
          /*break*/
          , 4];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([_e.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 5];

        case 4:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _e.label = 5;

        case 5:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutObjectLegalHoldCommand = function deserializeAws_restXmlPutObjectLegalHoldCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            RequestCharged: undefined
          };

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutObjectLegalHoldCommandError = function deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutObjectLockConfigurationCommand = function deserializeAws_restXmlPutObjectLockConfigurationCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            RequestCharged: undefined
          };

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutObjectLockConfigurationCommandError = function deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutObjectRetentionCommand = function deserializeAws_restXmlPutObjectRetentionCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            RequestCharged: undefined
          };

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutObjectRetentionCommandError = function deserializeAws_restXmlPutObjectRetentionCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutObjectTaggingCommand = function deserializeAws_restXmlPutObjectTaggingCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            VersionId: undefined
          };

          if (output.headers["x-amz-version-id"] !== undefined) {
            contents.VersionId = output.headers["x-amz-version-id"];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutObjectTaggingCommandError = function deserializeAws_restXmlPutObjectTaggingCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlPutPublicAccessBlockCommand = function deserializeAws_restXmlPutPublicAccessBlockCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output)
          };
          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlPutPublicAccessBlockCommandError = function deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlRestoreObjectCommand = function deserializeAws_restXmlRestoreObjectCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlRestoreObjectCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            RequestCharged: undefined,
            RestoreOutputPath: undefined
          };

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          if (output.headers["x-amz-restore-output-path"] !== undefined) {
            contents.RestoreOutputPath = output.headers["x-amz-restore-output-path"];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlRestoreObjectCommandError = function deserializeAws_restXmlRestoreObjectCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;

    var _d;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
      switch (_e.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _d = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _b = errorCode;

          switch (_b) {
            case "ObjectAlreadyInActiveTierError":
              return [3
              /*break*/
              , 2];

            case "com.amazonaws.s3#ObjectAlreadyInActiveTierError":
              return [3
              /*break*/
              , 2];
          }

          return [3
          /*break*/
          , 4];

        case 2:
          _c = [{}];
          return [4
          /*yield*/
          , deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];

        case 3:
          response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([_e.sent()])), {
            name: errorCode,
            $metadata: deserializeMetadata(output)
          }]);
          return [3
          /*break*/
          , 5];

        case 4:
          parsedBody = parsedOutput.body;
          errorCode = parsedBody.code || parsedBody.Code || errorCode;
          response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
            name: "" + errorCode,
            message: parsedBody.message || parsedBody.Message || errorCode,
            $fault: "client",
            $metadata: deserializeMetadata(output)
          });
          _e.label = 5;

        case 5:
          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlSelectObjectContentCommand = function deserializeAws_restXmlSelectObjectContentCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      if (output.statusCode !== 200 && output.statusCode >= 300) {
        return [2
        /*return*/
        , deserializeAws_restXmlSelectObjectContentCommandError(output, context)];
      }

      contents = {
        $metadata: deserializeMetadata(output),
        Payload: undefined
      };
      data = context.eventStreamMarshaller.deserialize(output.body, function (event) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
          var eventName, eventHeaders, eventMessage, parsedEvent;

          var _a;

          return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_b) {
            switch (_b.label) {
              case 0:
                eventName = Object.keys(event)[0];
                eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {
                  accummulator[curr[0]] = curr[1].value;
                  return accummulator;
                }, {});
                eventMessage = {
                  headers: eventHeaders,
                  body: event[eventName].body
                };
                parsedEvent = (_a = {}, _a[eventName] = eventMessage, _a);
                return [4
                /*yield*/
                , deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];

              case 1:
                return [2
                /*return*/
                , _b.sent()];
            }
          });
        });
      });
      contents.Payload = data;
      return [2
      /*return*/
      , Promise.resolve(contents)];
    });
  });
};

var deserializeAws_restXmlSelectObjectContentCommandError = function deserializeAws_restXmlSelectObjectContentCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlUploadPartCommand = function deserializeAws_restXmlUploadPartCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlUploadPartCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            BucketKeyEnabled: undefined,
            ETag: undefined,
            RequestCharged: undefined,
            SSECustomerAlgorithm: undefined,
            SSECustomerKeyMD5: undefined,
            SSEKMSKeyId: undefined,
            ServerSideEncryption: undefined
          };

          if (output.headers["x-amz-server-side-encryption"] !== undefined) {
            contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
          }

          if (output.headers["etag"] !== undefined) {
            contents.ETag = output.headers["etag"];
          }

          if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
            contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
          }

          if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
            contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
          }

          if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
            contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
          }

          if (output.headers["x-amz-server-side-encryption-bucket-key-enabled"] !== undefined) {
            contents.BucketKeyEnabled = output.headers["x-amz-server-side-encryption-bucket-key-enabled"] === "true";
          }

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , collectBody(output.body, context)];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlUploadPartCommandError = function deserializeAws_restXmlUploadPartCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlUploadPartCopyCommand = function deserializeAws_restXmlUploadPartCopyCommand(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2
            /*return*/
            , deserializeAws_restXmlUploadPartCopyCommandError(output, context)];
          }

          contents = {
            $metadata: deserializeMetadata(output),
            BucketKeyEnabled: undefined,
            CopyPartResult: undefined,
            CopySourceVersionId: undefined,
            RequestCharged: undefined,
            SSECustomerAlgorithm: undefined,
            SSECustomerKeyMD5: undefined,
            SSEKMSKeyId: undefined,
            ServerSideEncryption: undefined
          };

          if (output.headers["x-amz-copy-source-version-id"] !== undefined) {
            contents.CopySourceVersionId = output.headers["x-amz-copy-source-version-id"];
          }

          if (output.headers["x-amz-server-side-encryption"] !== undefined) {
            contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
          }

          if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
            contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
          }

          if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
            contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
          }

          if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
            contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
          }

          if (output.headers["x-amz-server-side-encryption-bucket-key-enabled"] !== undefined) {
            contents.BucketKeyEnabled = output.headers["x-amz-server-side-encryption-bucket-key-enabled"] === "true";
          }

          if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
          }

          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          data = _a.sent();
          contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);
          return [2
          /*return*/
          , Promise.resolve(contents)];
      }
    });
  });
};

var deserializeAws_restXmlUploadPartCopyCommandError = function deserializeAws_restXmlUploadPartCopyCommandError(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
          _b = {};
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
          errorCode = "UnknownError";
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);

          switch (errorCode) {
            default:
              parsedBody = parsedOutput.body;
              errorCode = parsedBody.code || parsedBody.Code || errorCode;
              response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), {
                name: "" + errorCode,
                message: parsedBody.message || parsedBody.Message || errorCode,
                $fault: "client",
                $metadata: deserializeMetadata(output)
              });
          }

          message = response.message || response.Message || errorCode;
          response.message = message;
          delete response.Message;
          return [2
          /*return*/
          , Promise.reject(Object.assign(new Error(message), response))];
      }
    });
  });
};

var deserializeAws_restXmlSelectObjectContentEventStream_event = function deserializeAws_restXmlSelectObjectContentEventStream_event(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var _a, _b, _c, _d, _e;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_f) {
      switch (_f.label) {
        case 0:
          if (!(output["Records"] !== undefined)) return [3
          /*break*/
          , 2];
          _a = {};
          return [4
          /*yield*/
          , deserializeAws_restXmlRecordsEvent_event(output["Records"], context)];

        case 1:
          return [2
          /*return*/
          , (_a.Records = _f.sent(), _a)];

        case 2:
          if (!(output["Stats"] !== undefined)) return [3
          /*break*/
          , 4];
          _b = {};
          return [4
          /*yield*/
          , deserializeAws_restXmlStatsEvent_event(output["Stats"], context)];

        case 3:
          return [2
          /*return*/
          , (_b.Stats = _f.sent(), _b)];

        case 4:
          if (!(output["Progress"] !== undefined)) return [3
          /*break*/
          , 6];
          _c = {};
          return [4
          /*yield*/
          , deserializeAws_restXmlProgressEvent_event(output["Progress"], context)];

        case 5:
          return [2
          /*return*/
          , (_c.Progress = _f.sent(), _c)];

        case 6:
          if (!(output["Cont"] !== undefined)) return [3
          /*break*/
          , 8];
          _d = {};
          return [4
          /*yield*/
          , deserializeAws_restXmlContinuationEvent_event(output["Cont"], context)];

        case 7:
          return [2
          /*return*/
          , (_d.Cont = _f.sent(), _d)];

        case 8:
          if (!(output["End"] !== undefined)) return [3
          /*break*/
          , 10];
          _e = {};
          return [4
          /*yield*/
          , deserializeAws_restXmlEndEvent_event(output["End"], context)];

        case 9:
          return [2
          /*return*/
          , (_e.End = _f.sent(), _e)];

        case 10:
          return [2
          /*return*/
          , {
            $unknown: output
          }];
      }
    });
  });
};

var deserializeAws_restXmlContinuationEvent_event = function deserializeAws_restXmlContinuationEvent_event(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      contents = {};
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_restXmlEndEvent_event = function deserializeAws_restXmlEndEvent_event(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      contents = {};
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_restXmlProgressEvent_event = function deserializeAws_restXmlProgressEvent_event(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, _a;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_b) {
      switch (_b.label) {
        case 0:
          contents = {};
          _a = contents;
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          _a.Details = _b.sent();
          return [2
          /*return*/
          , contents];
      }
    });
  });
};

var deserializeAws_restXmlRecordsEvent_event = function deserializeAws_restXmlRecordsEvent_event(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      contents = {};
      contents.Payload = output.body;
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_restXmlStatsEvent_event = function deserializeAws_restXmlStatsEvent_event(output, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, _a;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_b) {
      switch (_b.label) {
        case 0:
          contents = {};
          _a = contents;
          return [4
          /*yield*/
          , parseBody(output.body, context)];

        case 1:
          _a.Details = _b.sent();
          return [2
          /*return*/
          , contents];
      }
    });
  });
};

var deserializeAws_restXmlBucketAlreadyExistsResponse = function deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      contents = {
        name: "BucketAlreadyExists",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      };
      data = parsedOutput.body;
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      contents = {
        name: "BucketAlreadyOwnedByYou",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      };
      data = parsedOutput.body;
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_restXmlInvalidObjectStateResponse = function deserializeAws_restXmlInvalidObjectStateResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      contents = {
        name: "InvalidObjectState",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput),
        AccessTier: undefined,
        StorageClass: undefined
      };
      data = parsedOutput.body;

      if (data["AccessTier"] !== undefined) {
        contents.AccessTier = data["AccessTier"];
      }

      if (data["StorageClass"] !== undefined) {
        contents.StorageClass = data["StorageClass"];
      }

      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_restXmlNoSuchBucketResponse = function deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      contents = {
        name: "NoSuchBucket",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      };
      data = parsedOutput.body;
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_restXmlNoSuchKeyResponse = function deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      contents = {
        name: "NoSuchKey",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      };
      data = parsedOutput.body;
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_restXmlNoSuchUploadResponse = function deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      contents = {
        name: "NoSuchUpload",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      };
      data = parsedOutput.body;
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      contents = {
        name: "ObjectAlreadyInActiveTierError",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      };
      data = parsedOutput.body;
      return [2
      /*return*/
      , contents];
    });
  });
};

var deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
      contents = {
        name: "ObjectNotInActiveTierError",
        $fault: "client",
        $metadata: deserializeMetadata(parsedOutput)
      };
      data = parsedOutput.body;
      return [2
      /*return*/
      , contents];
    });
  });
};

var serializeAws_restXmlAbortIncompleteMultipartUpload = function serializeAws_restXmlAbortIncompleteMultipartUpload(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AbortIncompleteMultipartUpload");

  if (input.DaysAfterInitiation !== undefined && input.DaysAfterInitiation !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("DaysAfterInitiation").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.DaysAfterInitiation))).withName("DaysAfterInitiation");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlAccelerateConfiguration = function serializeAws_restXmlAccelerateConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccelerateConfiguration");

  if (input.Status !== undefined && input.Status !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketAccelerateStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlAccessControlPolicy = function serializeAws_restXmlAccessControlPolicy(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccessControlPolicy");

  if (input.Grants !== undefined && input.Grants !== null) {
    var nodes = serializeAws_restXmlGrants(input.Grants, context);
    var containerNode_1 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccessControlList");
    nodes.map(function (node) {
      containerNode_1.addChildNode(node);
    });
    bodyNode.addChildNode(containerNode_1);
  }

  if (input.Owner !== undefined && input.Owner !== null) {
    var node = serializeAws_restXmlOwner(input.Owner, context).withName("Owner");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlAccessControlTranslation = function serializeAws_restXmlAccessControlTranslation(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccessControlTranslation");

  if (input.Owner !== undefined && input.Owner !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("OwnerOverride").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Owner)).withName("Owner");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlAllowedHeaders = function serializeAws_restXmlAllowedHeaders(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AllowedHeader").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(entry));
    return node.withName("member");
  });
};

var serializeAws_restXmlAllowedMethods = function serializeAws_restXmlAllowedMethods(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AllowedMethod").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(entry));
    return node.withName("member");
  });
};

var serializeAws_restXmlAllowedOrigins = function serializeAws_restXmlAllowedOrigins(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AllowedOrigin").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(entry));
    return node.withName("member");
  });
};

var serializeAws_restXmlAnalyticsAndOperator = function serializeAws_restXmlAnalyticsAndOperator(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsAndOperator");

  if (input.Prefix !== undefined && input.Prefix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
    bodyNode.addChildNode(node);
  }

  if (input.Tags !== undefined && input.Tags !== null) {
    var nodes = serializeAws_restXmlTagSet(input.Tags, context);
    nodes.map(function (node) {
      node = node.withName("Tag");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlAnalyticsConfiguration = function serializeAws_restXmlAnalyticsConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsConfiguration");

  if (input.Id !== undefined && input.Id !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Id)).withName("Id");
    bodyNode.addChildNode(node);
  }

  if (input.Filter !== undefined && input.Filter !== null) {
    var node = serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(node);
  }

  if (input.StorageClassAnalysis !== undefined && input.StorageClassAnalysis !== null) {
    var node = serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName("StorageClassAnalysis");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlAnalyticsExportDestination = function serializeAws_restXmlAnalyticsExportDestination(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsExportDestination");

  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {
    var node = serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName("S3BucketDestination");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlAnalyticsFilter = function serializeAws_restXmlAnalyticsFilter(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsFilter");
  _models_models_0__WEBPACK_IMPORTED_MODULE_5__.AnalyticsFilter.visit(input, {
    Prefix: function Prefix(value) {
      var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(value)).withName("Prefix");
      bodyNode.addChildNode(node);
    },
    Tag: function Tag(value) {
      var node = serializeAws_restXmlTag(value, context).withName("Tag");
      bodyNode.addChildNode(node);
    },
    And: function And(value) {
      var node = serializeAws_restXmlAnalyticsAndOperator(value, context).withName("And");
      bodyNode.addChildNode(node);
    },
    _: function _(name, value) {
      if (!(value instanceof _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode || value instanceof _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText)) {
        throw new Error("Unable to serialize unknown union members in XML.");
      }

      bodyNode.addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode(name).addChildNode(value));
    }
  });
  return bodyNode;
};

var serializeAws_restXmlAnalyticsS3BucketDestination = function serializeAws_restXmlAnalyticsS3BucketDestination(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsS3BucketDestination");

  if (input.Format !== undefined && input.Format !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsS3ExportFileFormat").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Format)).withName("Format");
    bodyNode.addChildNode(node);
  }

  if (input.BucketAccountId !== undefined && input.BucketAccountId !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccountId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.BucketAccountId)).withName("BucketAccountId");
    bodyNode.addChildNode(node);
  }

  if (input.Bucket !== undefined && input.Bucket !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Bucket)).withName("Bucket");
    bodyNode.addChildNode(node);
  }

  if (input.Prefix !== undefined && input.Prefix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlBucketLifecycleConfiguration = function serializeAws_restXmlBucketLifecycleConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketLifecycleConfiguration");

  if (input.Rules !== undefined && input.Rules !== null) {
    var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);
    nodes.map(function (node) {
      node = node.withName("Rule");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlBucketLoggingStatus = function serializeAws_restXmlBucketLoggingStatus(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketLoggingStatus");

  if (input.LoggingEnabled !== undefined && input.LoggingEnabled !== null) {
    var node = serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName("LoggingEnabled");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlCompletedMultipartUpload = function serializeAws_restXmlCompletedMultipartUpload(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CompletedMultipartUpload");

  if (input.Parts !== undefined && input.Parts !== null) {
    var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);
    nodes.map(function (node) {
      node = node.withName("Part");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlCompletedPart = function serializeAws_restXmlCompletedPart(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CompletedPart");

  if (input.ETag !== undefined && input.ETag !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ETag").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ETag)).withName("ETag");
    bodyNode.addChildNode(node);
  }

  if (input.PartNumber !== undefined && input.PartNumber !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("PartNumber").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.PartNumber))).withName("PartNumber");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlCompletedPartList = function serializeAws_restXmlCompletedPartList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlCompletedPart(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlCondition = function serializeAws_restXmlCondition(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Condition");

  if (input.HttpErrorCodeReturnedEquals !== undefined && input.HttpErrorCodeReturnedEquals !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("HttpErrorCodeReturnedEquals").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.HttpErrorCodeReturnedEquals)).withName("HttpErrorCodeReturnedEquals");
    bodyNode.addChildNode(node);
  }

  if (input.KeyPrefixEquals !== undefined && input.KeyPrefixEquals !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("KeyPrefixEquals").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.KeyPrefixEquals)).withName("KeyPrefixEquals");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlCORSConfiguration = function serializeAws_restXmlCORSConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CORSConfiguration");

  if (input.CORSRules !== undefined && input.CORSRules !== null) {
    var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);
    nodes.map(function (node) {
      node = node.withName("CORSRule");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlCORSRule = function serializeAws_restXmlCORSRule(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CORSRule");

  if (input.AllowedHeaders !== undefined && input.AllowedHeaders !== null) {
    var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);
    nodes.map(function (node) {
      node = node.withName("AllowedHeader");
      bodyNode.addChildNode(node);
    });
  }

  if (input.AllowedMethods !== undefined && input.AllowedMethods !== null) {
    var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);
    nodes.map(function (node) {
      node = node.withName("AllowedMethod");
      bodyNode.addChildNode(node);
    });
  }

  if (input.AllowedOrigins !== undefined && input.AllowedOrigins !== null) {
    var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);
    nodes.map(function (node) {
      node = node.withName("AllowedOrigin");
      bodyNode.addChildNode(node);
    });
  }

  if (input.ExposeHeaders !== undefined && input.ExposeHeaders !== null) {
    var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);
    nodes.map(function (node) {
      node = node.withName("ExposeHeader");
      bodyNode.addChildNode(node);
    });
  }

  if (input.MaxAgeSeconds !== undefined && input.MaxAgeSeconds !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MaxAgeSeconds").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.MaxAgeSeconds))).withName("MaxAgeSeconds");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlCORSRules = function serializeAws_restXmlCORSRules(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlCORSRule(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlCreateBucketConfiguration = function serializeAws_restXmlCreateBucketConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CreateBucketConfiguration");

  if (input.LocationConstraint !== undefined && input.LocationConstraint !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketLocationConstraint").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.LocationConstraint)).withName("LocationConstraint");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlCSVInput = function serializeAws_restXmlCSVInput(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CSVInput");

  if (input.FileHeaderInfo !== undefined && input.FileHeaderInfo !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("FileHeaderInfo").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.FileHeaderInfo)).withName("FileHeaderInfo");
    bodyNode.addChildNode(node);
  }

  if (input.Comments !== undefined && input.Comments !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Comments").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Comments)).withName("Comments");
    bodyNode.addChildNode(node);
  }

  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QuoteEscapeCharacter").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.QuoteEscapeCharacter)).withName("QuoteEscapeCharacter");
    bodyNode.addChildNode(node);
  }

  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RecordDelimiter").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.RecordDelimiter)).withName("RecordDelimiter");
    bodyNode.addChildNode(node);
  }

  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("FieldDelimiter").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.FieldDelimiter)).withName("FieldDelimiter");
    bodyNode.addChildNode(node);
  }

  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QuoteCharacter").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.QuoteCharacter)).withName("QuoteCharacter");
    bodyNode.addChildNode(node);
  }

  if (input.AllowQuotedRecordDelimiter !== undefined && input.AllowQuotedRecordDelimiter !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AllowQuotedRecordDelimiter").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.AllowQuotedRecordDelimiter))).withName("AllowQuotedRecordDelimiter");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlCSVOutput = function serializeAws_restXmlCSVOutput(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CSVOutput");

  if (input.QuoteFields !== undefined && input.QuoteFields !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QuoteFields").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.QuoteFields)).withName("QuoteFields");
    bodyNode.addChildNode(node);
  }

  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QuoteEscapeCharacter").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.QuoteEscapeCharacter)).withName("QuoteEscapeCharacter");
    bodyNode.addChildNode(node);
  }

  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RecordDelimiter").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.RecordDelimiter)).withName("RecordDelimiter");
    bodyNode.addChildNode(node);
  }

  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("FieldDelimiter").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.FieldDelimiter)).withName("FieldDelimiter");
    bodyNode.addChildNode(node);
  }

  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QuoteCharacter").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.QuoteCharacter)).withName("QuoteCharacter");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlDefaultRetention = function serializeAws_restXmlDefaultRetention(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("DefaultRetention");

  if (input.Mode !== undefined && input.Mode !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockRetentionMode").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Mode)).withName("Mode");
    bodyNode.addChildNode(node);
  }

  if (input.Days !== undefined && input.Days !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Days").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Days))).withName("Days");
    bodyNode.addChildNode(node);
  }

  if (input.Years !== undefined && input.Years !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Years").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Years))).withName("Years");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlDelete = function serializeAws_restXmlDelete(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Delete");

  if (input.Objects !== undefined && input.Objects !== null) {
    var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);
    nodes.map(function (node) {
      node = node.withName("Object");
      bodyNode.addChildNode(node);
    });
  }

  if (input.Quiet !== undefined && input.Quiet !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Quiet").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Quiet))).withName("Quiet");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlDeleteMarkerReplication = function serializeAws_restXmlDeleteMarkerReplication(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("DeleteMarkerReplication");

  if (input.Status !== undefined && input.Status !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("DeleteMarkerReplicationStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlDestination = function serializeAws_restXmlDestination(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Destination");

  if (input.Bucket !== undefined && input.Bucket !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Bucket)).withName("Bucket");
    bodyNode.addChildNode(node);
  }

  if (input.Account !== undefined && input.Account !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccountId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Account)).withName("Account");
    bodyNode.addChildNode(node);
  }

  if (input.StorageClass !== undefined && input.StorageClass !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("StorageClass").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.StorageClass)).withName("StorageClass");
    bodyNode.addChildNode(node);
  }

  if (input.AccessControlTranslation !== undefined && input.AccessControlTranslation !== null) {
    var node = serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName("AccessControlTranslation");
    bodyNode.addChildNode(node);
  }

  if (input.EncryptionConfiguration !== undefined && input.EncryptionConfiguration !== null) {
    var node = serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName("EncryptionConfiguration");
    bodyNode.addChildNode(node);
  }

  if (input.ReplicationTime !== undefined && input.ReplicationTime !== null) {
    var node = serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName("ReplicationTime");
    bodyNode.addChildNode(node);
  }

  if (input.Metrics !== undefined && input.Metrics !== null) {
    var node = serializeAws_restXmlMetrics(input.Metrics, context).withName("Metrics");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlEncryption = function serializeAws_restXmlEncryption(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Encryption");

  if (input.EncryptionType !== undefined && input.EncryptionType !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ServerSideEncryption").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.EncryptionType)).withName("EncryptionType");
    bodyNode.addChildNode(node);
  }

  if (input.KMSKeyId !== undefined && input.KMSKeyId !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SSEKMSKeyId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.KMSKeyId)).withName("KMSKeyId");
    bodyNode.addChildNode(node);
  }

  if (input.KMSContext !== undefined && input.KMSContext !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("KMSContext").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.KMSContext)).withName("KMSContext");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlEncryptionConfiguration = function serializeAws_restXmlEncryptionConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("EncryptionConfiguration");

  if (input.ReplicaKmsKeyID !== undefined && input.ReplicaKmsKeyID !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicaKmsKeyID").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ReplicaKmsKeyID)).withName("ReplicaKmsKeyID");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlErrorDocument = function serializeAws_restXmlErrorDocument(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ErrorDocument");

  if (input.Key !== undefined && input.Key !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectKey").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Key)).withName("Key");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlEventList = function serializeAws_restXmlEventList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Event").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(entry));
    return node.withName("member");
  });
};

var serializeAws_restXmlExistingObjectReplication = function serializeAws_restXmlExistingObjectReplication(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExistingObjectReplication");

  if (input.Status !== undefined && input.Status !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExistingObjectReplicationStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlExposeHeaders = function serializeAws_restXmlExposeHeaders(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExposeHeader").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(entry));
    return node.withName("member");
  });
};

var serializeAws_restXmlFilterRule = function serializeAws_restXmlFilterRule(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("FilterRule");

  if (input.Name !== undefined && input.Name !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("FilterRuleName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Name)).withName("Name");
    bodyNode.addChildNode(node);
  }

  if (input.Value !== undefined && input.Value !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("FilterRuleValue").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Value)).withName("Value");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlFilterRuleList = function serializeAws_restXmlFilterRuleList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlFilterRule(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlGlacierJobParameters = function serializeAws_restXmlGlacierJobParameters(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("GlacierJobParameters");

  if (input.Tier !== undefined && input.Tier !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Tier").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Tier)).withName("Tier");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlGrant = function serializeAws_restXmlGrant(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Grant");

  if (input.Grantee !== undefined && input.Grantee !== null) {
    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName("Grantee");
    bodyNode.addChildNode(node);
  }

  if (input.Permission !== undefined && input.Permission !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Permission").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Permission)).withName("Permission");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlGrantee = function serializeAws_restXmlGrantee(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Grantee");

  if (input.DisplayName !== undefined && input.DisplayName !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("DisplayName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.DisplayName)).withName("DisplayName");
    bodyNode.addChildNode(node);
  }

  if (input.EmailAddress !== undefined && input.EmailAddress !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("EmailAddress").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.EmailAddress)).withName("EmailAddress");
    bodyNode.addChildNode(node);
  }

  if (input.ID !== undefined && input.ID !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ID").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ID)).withName("ID");
    bodyNode.addChildNode(node);
  }

  if (input.URI !== undefined && input.URI !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("URI").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.URI)).withName("URI");
    bodyNode.addChildNode(node);
  }

  if (input.Type !== undefined && input.Type !== null) {
    bodyNode.addAttribute("xsi:type", input.Type);
  }

  return bodyNode;
};

var serializeAws_restXmlGrants = function serializeAws_restXmlGrants(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlGrant(entry, context);
    return node.withName("Grant");
  });
};

var serializeAws_restXmlIndexDocument = function serializeAws_restXmlIndexDocument(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("IndexDocument");

  if (input.Suffix !== undefined && input.Suffix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Suffix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Suffix)).withName("Suffix");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlInputSerialization = function serializeAws_restXmlInputSerialization(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InputSerialization");

  if (input.CSV !== undefined && input.CSV !== null) {
    var node = serializeAws_restXmlCSVInput(input.CSV, context).withName("CSV");
    bodyNode.addChildNode(node);
  }

  if (input.CompressionType !== undefined && input.CompressionType !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CompressionType").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.CompressionType)).withName("CompressionType");
    bodyNode.addChildNode(node);
  }

  if (input.JSON !== undefined && input.JSON !== null) {
    var node = serializeAws_restXmlJSONInput(input.JSON, context).withName("JSON");
    bodyNode.addChildNode(node);
  }

  if (input.Parquet !== undefined && input.Parquet !== null) {
    var node = serializeAws_restXmlParquetInput(input.Parquet, context).withName("Parquet");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlIntelligentTieringAndOperator = function serializeAws_restXmlIntelligentTieringAndOperator(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("IntelligentTieringAndOperator");

  if (input.Prefix !== undefined && input.Prefix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
    bodyNode.addChildNode(node);
  }

  if (input.Tags !== undefined && input.Tags !== null) {
    var nodes = serializeAws_restXmlTagSet(input.Tags, context);
    nodes.map(function (node) {
      node = node.withName("Tag");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlIntelligentTieringConfiguration = function serializeAws_restXmlIntelligentTieringConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("IntelligentTieringConfiguration");

  if (input.Id !== undefined && input.Id !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("IntelligentTieringId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Id)).withName("Id");
    bodyNode.addChildNode(node);
  }

  if (input.Filter !== undefined && input.Filter !== null) {
    var node = serializeAws_restXmlIntelligentTieringFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(node);
  }

  if (input.Status !== undefined && input.Status !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("IntelligentTieringStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
    bodyNode.addChildNode(node);
  }

  if (input.Tierings !== undefined && input.Tierings !== null) {
    var nodes = serializeAws_restXmlTieringList(input.Tierings, context);
    nodes.map(function (node) {
      node = node.withName("Tiering");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlIntelligentTieringFilter = function serializeAws_restXmlIntelligentTieringFilter(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("IntelligentTieringFilter");

  if (input.Prefix !== undefined && input.Prefix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
    bodyNode.addChildNode(node);
  }

  if (input.Tag !== undefined && input.Tag !== null) {
    var node = serializeAws_restXmlTag(input.Tag, context).withName("Tag");
    bodyNode.addChildNode(node);
  }

  if (input.And !== undefined && input.And !== null) {
    var node = serializeAws_restXmlIntelligentTieringAndOperator(input.And, context).withName("And");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlInventoryConfiguration = function serializeAws_restXmlInventoryConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryConfiguration");

  if (input.Destination !== undefined && input.Destination !== null) {
    var node = serializeAws_restXmlInventoryDestination(input.Destination, context).withName("Destination");
    bodyNode.addChildNode(node);
  }

  if (input.IsEnabled !== undefined && input.IsEnabled !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("IsEnabled").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.IsEnabled))).withName("IsEnabled");
    bodyNode.addChildNode(node);
  }

  if (input.Filter !== undefined && input.Filter !== null) {
    var node = serializeAws_restXmlInventoryFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(node);
  }

  if (input.Id !== undefined && input.Id !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Id)).withName("Id");
    bodyNode.addChildNode(node);
  }

  if (input.IncludedObjectVersions !== undefined && input.IncludedObjectVersions !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryIncludedObjectVersions").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.IncludedObjectVersions)).withName("IncludedObjectVersions");
    bodyNode.addChildNode(node);
  }

  if (input.OptionalFields !== undefined && input.OptionalFields !== null) {
    var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);
    var containerNode_2 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("OptionalFields");
    nodes.map(function (node) {
      containerNode_2.addChildNode(node);
    });
    bodyNode.addChildNode(containerNode_2);
  }

  if (input.Schedule !== undefined && input.Schedule !== null) {
    var node = serializeAws_restXmlInventorySchedule(input.Schedule, context).withName("Schedule");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlInventoryDestination = function serializeAws_restXmlInventoryDestination(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryDestination");

  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {
    var node = serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName("S3BucketDestination");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlInventoryEncryption = function serializeAws_restXmlInventoryEncryption(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryEncryption");

  if (input.SSES3 !== undefined && input.SSES3 !== null) {
    var node = serializeAws_restXmlSSES3(input.SSES3, context).withName("SSE-S3");
    bodyNode.addChildNode(node);
  }

  if (input.SSEKMS !== undefined && input.SSEKMS !== null) {
    var node = serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName("SSE-KMS");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlInventoryFilter = function serializeAws_restXmlInventoryFilter(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryFilter");

  if (input.Prefix !== undefined && input.Prefix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlInventoryOptionalFields = function serializeAws_restXmlInventoryOptionalFields(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryOptionalField").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(entry));
    return node.withName("Field");
  });
};

var serializeAws_restXmlInventoryS3BucketDestination = function serializeAws_restXmlInventoryS3BucketDestination(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryS3BucketDestination");

  if (input.AccountId !== undefined && input.AccountId !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccountId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.AccountId)).withName("AccountId");
    bodyNode.addChildNode(node);
  }

  if (input.Bucket !== undefined && input.Bucket !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Bucket)).withName("Bucket");
    bodyNode.addChildNode(node);
  }

  if (input.Format !== undefined && input.Format !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryFormat").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Format)).withName("Format");
    bodyNode.addChildNode(node);
  }

  if (input.Prefix !== undefined && input.Prefix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
    bodyNode.addChildNode(node);
  }

  if (input.Encryption !== undefined && input.Encryption !== null) {
    var node = serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName("Encryption");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlInventorySchedule = function serializeAws_restXmlInventorySchedule(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventorySchedule");

  if (input.Frequency !== undefined && input.Frequency !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryFrequency").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Frequency)).withName("Frequency");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlJSONInput = function serializeAws_restXmlJSONInput(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("JSONInput");

  if (input.Type !== undefined && input.Type !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("JSONType").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Type)).withName("Type");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlJSONOutput = function serializeAws_restXmlJSONOutput(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("JSONOutput");

  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RecordDelimiter").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.RecordDelimiter)).withName("RecordDelimiter");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlLambdaFunctionConfiguration = function serializeAws_restXmlLambdaFunctionConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LambdaFunctionConfiguration");

  if (input.Id !== undefined && input.Id !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NotificationId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Id)).withName("Id");
    bodyNode.addChildNode(node);
  }

  if (input.LambdaFunctionArn !== undefined && input.LambdaFunctionArn !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LambdaFunctionArn").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.LambdaFunctionArn)).withName("CloudFunction");
    bodyNode.addChildNode(node);
  }

  if (input.Events !== undefined && input.Events !== null) {
    var nodes = serializeAws_restXmlEventList(input.Events, context);
    nodes.map(function (node) {
      node = node.withName("Event");
      bodyNode.addChildNode(node);
    });
  }

  if (input.Filter !== undefined && input.Filter !== null) {
    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlLambdaFunctionConfigurationList = function serializeAws_restXmlLambdaFunctionConfigurationList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlLifecycleExpiration = function serializeAws_restXmlLifecycleExpiration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LifecycleExpiration");

  if (input.Date !== undefined && input.Date !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Date").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Date.toISOString().split(".")[0] + "Z")).withName("Date");
    bodyNode.addChildNode(node);
  }

  if (input.Days !== undefined && input.Days !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Days").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Days))).withName("Days");
    bodyNode.addChildNode(node);
  }

  if (input.ExpiredObjectDeleteMarker !== undefined && input.ExpiredObjectDeleteMarker !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExpiredObjectDeleteMarker").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.ExpiredObjectDeleteMarker))).withName("ExpiredObjectDeleteMarker");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlLifecycleRule = function serializeAws_restXmlLifecycleRule(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LifecycleRule");

  if (input.Expiration !== undefined && input.Expiration !== null) {
    var node = serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName("Expiration");
    bodyNode.addChildNode(node);
  }

  if (input.ID !== undefined && input.ID !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ID").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ID)).withName("ID");
    bodyNode.addChildNode(node);
  }

  if (input.Prefix !== undefined && input.Prefix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
    bodyNode.addChildNode(node);
  }

  if (input.Filter !== undefined && input.Filter !== null) {
    var node = serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(node);
  }

  if (input.Status !== undefined && input.Status !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExpirationStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
    bodyNode.addChildNode(node);
  }

  if (input.Transitions !== undefined && input.Transitions !== null) {
    var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);
    nodes.map(function (node) {
      node = node.withName("Transition");
      bodyNode.addChildNode(node);
    });
  }

  if (input.NoncurrentVersionTransitions !== undefined && input.NoncurrentVersionTransitions !== null) {
    var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);
    nodes.map(function (node) {
      node = node.withName("NoncurrentVersionTransition");
      bodyNode.addChildNode(node);
    });
  }

  if (input.NoncurrentVersionExpiration !== undefined && input.NoncurrentVersionExpiration !== null) {
    var node = serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName("NoncurrentVersionExpiration");
    bodyNode.addChildNode(node);
  }

  if (input.AbortIncompleteMultipartUpload !== undefined && input.AbortIncompleteMultipartUpload !== null) {
    var node = serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName("AbortIncompleteMultipartUpload");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlLifecycleRuleAndOperator = function serializeAws_restXmlLifecycleRuleAndOperator(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LifecycleRuleAndOperator");

  if (input.Prefix !== undefined && input.Prefix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
    bodyNode.addChildNode(node);
  }

  if (input.Tags !== undefined && input.Tags !== null) {
    var nodes = serializeAws_restXmlTagSet(input.Tags, context);
    nodes.map(function (node) {
      node = node.withName("Tag");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlLifecycleRuleFilter = function serializeAws_restXmlLifecycleRuleFilter(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LifecycleRuleFilter");
  _models_models_0__WEBPACK_IMPORTED_MODULE_5__.LifecycleRuleFilter.visit(input, {
    Prefix: function Prefix(value) {
      var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(value)).withName("Prefix");
      bodyNode.addChildNode(node);
    },
    Tag: function Tag(value) {
      var node = serializeAws_restXmlTag(value, context).withName("Tag");
      bodyNode.addChildNode(node);
    },
    And: function And(value) {
      var node = serializeAws_restXmlLifecycleRuleAndOperator(value, context).withName("And");
      bodyNode.addChildNode(node);
    },
    _: function _(name, value) {
      if (!(value instanceof _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode || value instanceof _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText)) {
        throw new Error("Unable to serialize unknown union members in XML.");
      }

      bodyNode.addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode(name).addChildNode(value));
    }
  });
  return bodyNode;
};

var serializeAws_restXmlLifecycleRules = function serializeAws_restXmlLifecycleRules(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlLifecycleRule(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlLoggingEnabled = function serializeAws_restXmlLoggingEnabled(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LoggingEnabled");

  if (input.TargetBucket !== undefined && input.TargetBucket !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TargetBucket").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.TargetBucket)).withName("TargetBucket");
    bodyNode.addChildNode(node);
  }

  if (input.TargetGrants !== undefined && input.TargetGrants !== null) {
    var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);
    var containerNode_3 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TargetGrants");
    nodes.map(function (node) {
      containerNode_3.addChildNode(node);
    });
    bodyNode.addChildNode(containerNode_3);
  }

  if (input.TargetPrefix !== undefined && input.TargetPrefix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TargetPrefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.TargetPrefix)).withName("TargetPrefix");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlMetadataEntry = function serializeAws_restXmlMetadataEntry(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetadataEntry");

  if (input.Name !== undefined && input.Name !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetadataKey").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Name)).withName("Name");
    bodyNode.addChildNode(node);
  }

  if (input.Value !== undefined && input.Value !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetadataValue").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Value)).withName("Value");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlMetrics = function serializeAws_restXmlMetrics(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Metrics");

  if (input.Status !== undefined && input.Status !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetricsStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
    bodyNode.addChildNode(node);
  }

  if (input.EventThreshold !== undefined && input.EventThreshold !== null) {
    var node = serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName("EventThreshold");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlMetricsAndOperator = function serializeAws_restXmlMetricsAndOperator(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetricsAndOperator");

  if (input.Prefix !== undefined && input.Prefix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
    bodyNode.addChildNode(node);
  }

  if (input.Tags !== undefined && input.Tags !== null) {
    var nodes = serializeAws_restXmlTagSet(input.Tags, context);
    nodes.map(function (node) {
      node = node.withName("Tag");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlMetricsConfiguration = function serializeAws_restXmlMetricsConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetricsConfiguration");

  if (input.Id !== undefined && input.Id !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetricsId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Id)).withName("Id");
    bodyNode.addChildNode(node);
  }

  if (input.Filter !== undefined && input.Filter !== null) {
    var node = serializeAws_restXmlMetricsFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlMetricsFilter = function serializeAws_restXmlMetricsFilter(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetricsFilter");
  _models_models_0__WEBPACK_IMPORTED_MODULE_5__.MetricsFilter.visit(input, {
    Prefix: function Prefix(value) {
      var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(value)).withName("Prefix");
      bodyNode.addChildNode(node);
    },
    Tag: function Tag(value) {
      var node = serializeAws_restXmlTag(value, context).withName("Tag");
      bodyNode.addChildNode(node);
    },
    And: function And(value) {
      var node = serializeAws_restXmlMetricsAndOperator(value, context).withName("And");
      bodyNode.addChildNode(node);
    },
    _: function _(name, value) {
      if (!(value instanceof _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode || value instanceof _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText)) {
        throw new Error("Unable to serialize unknown union members in XML.");
      }

      bodyNode.addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode(name).addChildNode(value));
    }
  });
  return bodyNode;
};

var serializeAws_restXmlNoncurrentVersionExpiration = function serializeAws_restXmlNoncurrentVersionExpiration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NoncurrentVersionExpiration");

  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Days").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.NoncurrentDays))).withName("NoncurrentDays");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlNoncurrentVersionTransition = function serializeAws_restXmlNoncurrentVersionTransition(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NoncurrentVersionTransition");

  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Days").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.NoncurrentDays))).withName("NoncurrentDays");
    bodyNode.addChildNode(node);
  }

  if (input.StorageClass !== undefined && input.StorageClass !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TransitionStorageClass").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.StorageClass)).withName("StorageClass");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlNoncurrentVersionTransitionList = function serializeAws_restXmlNoncurrentVersionTransitionList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlNotificationConfiguration = function serializeAws_restXmlNotificationConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NotificationConfiguration");

  if (input.TopicConfigurations !== undefined && input.TopicConfigurations !== null) {
    var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);
    nodes.map(function (node) {
      node = node.withName("TopicConfiguration");
      bodyNode.addChildNode(node);
    });
  }

  if (input.QueueConfigurations !== undefined && input.QueueConfigurations !== null) {
    var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);
    nodes.map(function (node) {
      node = node.withName("QueueConfiguration");
      bodyNode.addChildNode(node);
    });
  }

  if (input.LambdaFunctionConfigurations !== undefined && input.LambdaFunctionConfigurations !== null) {
    var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);
    nodes.map(function (node) {
      node = node.withName("CloudFunctionConfiguration");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlNotificationConfigurationFilter = function serializeAws_restXmlNotificationConfigurationFilter(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NotificationConfigurationFilter");

  if (input.Key !== undefined && input.Key !== null) {
    var node = serializeAws_restXmlS3KeyFilter(input.Key, context).withName("S3Key");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlObjectIdentifier = function serializeAws_restXmlObjectIdentifier(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectIdentifier");

  if (input.Key !== undefined && input.Key !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectKey").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Key)).withName("Key");
    bodyNode.addChildNode(node);
  }

  if (input.VersionId !== undefined && input.VersionId !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectVersionId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.VersionId)).withName("VersionId");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlObjectIdentifierList = function serializeAws_restXmlObjectIdentifierList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlObjectIdentifier(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlObjectLockConfiguration = function serializeAws_restXmlObjectLockConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockConfiguration");

  if (input.ObjectLockEnabled !== undefined && input.ObjectLockEnabled !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockEnabled").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ObjectLockEnabled)).withName("ObjectLockEnabled");
    bodyNode.addChildNode(node);
  }

  if (input.Rule !== undefined && input.Rule !== null) {
    var node = serializeAws_restXmlObjectLockRule(input.Rule, context).withName("Rule");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlObjectLockLegalHold = function serializeAws_restXmlObjectLockLegalHold(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockLegalHold");

  if (input.Status !== undefined && input.Status !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockLegalHoldStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlObjectLockRetention = function serializeAws_restXmlObjectLockRetention(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockRetention");

  if (input.Mode !== undefined && input.Mode !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockRetentionMode").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Mode)).withName("Mode");
    bodyNode.addChildNode(node);
  }

  if (input.RetainUntilDate !== undefined && input.RetainUntilDate !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Date").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.RetainUntilDate.toISOString().split(".")[0] + "Z")).withName("RetainUntilDate");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlObjectLockRule = function serializeAws_restXmlObjectLockRule(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockRule");

  if (input.DefaultRetention !== undefined && input.DefaultRetention !== null) {
    var node = serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName("DefaultRetention");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlOutputLocation = function serializeAws_restXmlOutputLocation(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("OutputLocation");

  if (input.S3 !== undefined && input.S3 !== null) {
    var node = serializeAws_restXmlS3Location(input.S3, context).withName("S3");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlOutputSerialization = function serializeAws_restXmlOutputSerialization(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("OutputSerialization");

  if (input.CSV !== undefined && input.CSV !== null) {
    var node = serializeAws_restXmlCSVOutput(input.CSV, context).withName("CSV");
    bodyNode.addChildNode(node);
  }

  if (input.JSON !== undefined && input.JSON !== null) {
    var node = serializeAws_restXmlJSONOutput(input.JSON, context).withName("JSON");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlOwner = function serializeAws_restXmlOwner(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Owner");

  if (input.DisplayName !== undefined && input.DisplayName !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("DisplayName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.DisplayName)).withName("DisplayName");
    bodyNode.addChildNode(node);
  }

  if (input.ID !== undefined && input.ID !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ID").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ID)).withName("ID");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlOwnershipControls = function serializeAws_restXmlOwnershipControls(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("OwnershipControls");

  if (input.Rules !== undefined && input.Rules !== null) {
    var nodes = serializeAws_restXmlOwnershipControlsRules(input.Rules, context);
    nodes.map(function (node) {
      node = node.withName("Rule");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlOwnershipControlsRule = function serializeAws_restXmlOwnershipControlsRule(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("OwnershipControlsRule");

  if (input.ObjectOwnership !== undefined && input.ObjectOwnership !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectOwnership").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ObjectOwnership)).withName("ObjectOwnership");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlOwnershipControlsRules = function serializeAws_restXmlOwnershipControlsRules(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlOwnershipControlsRule(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlParquetInput = function serializeAws_restXmlParquetInput(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ParquetInput");
  return bodyNode;
};

var serializeAws_restXmlPublicAccessBlockConfiguration = function serializeAws_restXmlPublicAccessBlockConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("PublicAccessBlockConfiguration");

  if (input.BlockPublicAcls !== undefined && input.BlockPublicAcls !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Setting").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.BlockPublicAcls))).withName("BlockPublicAcls");
    bodyNode.addChildNode(node);
  }

  if (input.IgnorePublicAcls !== undefined && input.IgnorePublicAcls !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Setting").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.IgnorePublicAcls))).withName("IgnorePublicAcls");
    bodyNode.addChildNode(node);
  }

  if (input.BlockPublicPolicy !== undefined && input.BlockPublicPolicy !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Setting").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.BlockPublicPolicy))).withName("BlockPublicPolicy");
    bodyNode.addChildNode(node);
  }

  if (input.RestrictPublicBuckets !== undefined && input.RestrictPublicBuckets !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Setting").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.RestrictPublicBuckets))).withName("RestrictPublicBuckets");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlQueueConfiguration = function serializeAws_restXmlQueueConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QueueConfiguration");

  if (input.Id !== undefined && input.Id !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NotificationId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Id)).withName("Id");
    bodyNode.addChildNode(node);
  }

  if (input.QueueArn !== undefined && input.QueueArn !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QueueArn").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.QueueArn)).withName("Queue");
    bodyNode.addChildNode(node);
  }

  if (input.Events !== undefined && input.Events !== null) {
    var nodes = serializeAws_restXmlEventList(input.Events, context);
    nodes.map(function (node) {
      node = node.withName("Event");
      bodyNode.addChildNode(node);
    });
  }

  if (input.Filter !== undefined && input.Filter !== null) {
    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlQueueConfigurationList = function serializeAws_restXmlQueueConfigurationList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlQueueConfiguration(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlRedirect = function serializeAws_restXmlRedirect(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Redirect");

  if (input.HostName !== undefined && input.HostName !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("HostName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.HostName)).withName("HostName");
    bodyNode.addChildNode(node);
  }

  if (input.HttpRedirectCode !== undefined && input.HttpRedirectCode !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("HttpRedirectCode").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.HttpRedirectCode)).withName("HttpRedirectCode");
    bodyNode.addChildNode(node);
  }

  if (input.Protocol !== undefined && input.Protocol !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Protocol").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Protocol)).withName("Protocol");
    bodyNode.addChildNode(node);
  }

  if (input.ReplaceKeyPrefixWith !== undefined && input.ReplaceKeyPrefixWith !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplaceKeyPrefixWith").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ReplaceKeyPrefixWith)).withName("ReplaceKeyPrefixWith");
    bodyNode.addChildNode(node);
  }

  if (input.ReplaceKeyWith !== undefined && input.ReplaceKeyWith !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplaceKeyWith").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ReplaceKeyWith)).withName("ReplaceKeyWith");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlRedirectAllRequestsTo = function serializeAws_restXmlRedirectAllRequestsTo(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RedirectAllRequestsTo");

  if (input.HostName !== undefined && input.HostName !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("HostName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.HostName)).withName("HostName");
    bodyNode.addChildNode(node);
  }

  if (input.Protocol !== undefined && input.Protocol !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Protocol").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Protocol)).withName("Protocol");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlReplicaModifications = function serializeAws_restXmlReplicaModifications(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicaModifications");

  if (input.Status !== undefined && input.Status !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicaModificationsStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlReplicationConfiguration = function serializeAws_restXmlReplicationConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationConfiguration");

  if (input.Role !== undefined && input.Role !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Role").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Role)).withName("Role");
    bodyNode.addChildNode(node);
  }

  if (input.Rules !== undefined && input.Rules !== null) {
    var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);
    nodes.map(function (node) {
      node = node.withName("Rule");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlReplicationRule = function serializeAws_restXmlReplicationRule(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationRule");

  if (input.ID !== undefined && input.ID !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ID").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ID)).withName("ID");
    bodyNode.addChildNode(node);
  }

  if (input.Priority !== undefined && input.Priority !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Priority").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Priority))).withName("Priority");
    bodyNode.addChildNode(node);
  }

  if (input.Prefix !== undefined && input.Prefix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
    bodyNode.addChildNode(node);
  }

  if (input.Filter !== undefined && input.Filter !== null) {
    var node = serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(node);
  }

  if (input.Status !== undefined && input.Status !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationRuleStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
    bodyNode.addChildNode(node);
  }

  if (input.SourceSelectionCriteria !== undefined && input.SourceSelectionCriteria !== null) {
    var node = serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName("SourceSelectionCriteria");
    bodyNode.addChildNode(node);
  }

  if (input.ExistingObjectReplication !== undefined && input.ExistingObjectReplication !== null) {
    var node = serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName("ExistingObjectReplication");
    bodyNode.addChildNode(node);
  }

  if (input.Destination !== undefined && input.Destination !== null) {
    var node = serializeAws_restXmlDestination(input.Destination, context).withName("Destination");
    bodyNode.addChildNode(node);
  }

  if (input.DeleteMarkerReplication !== undefined && input.DeleteMarkerReplication !== null) {
    var node = serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName("DeleteMarkerReplication");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlReplicationRuleAndOperator = function serializeAws_restXmlReplicationRuleAndOperator(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationRuleAndOperator");

  if (input.Prefix !== undefined && input.Prefix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
    bodyNode.addChildNode(node);
  }

  if (input.Tags !== undefined && input.Tags !== null) {
    var nodes = serializeAws_restXmlTagSet(input.Tags, context);
    nodes.map(function (node) {
      node = node.withName("Tag");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlReplicationRuleFilter = function serializeAws_restXmlReplicationRuleFilter(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationRuleFilter");
  _models_models_0__WEBPACK_IMPORTED_MODULE_5__.ReplicationRuleFilter.visit(input, {
    Prefix: function Prefix(value) {
      var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(value)).withName("Prefix");
      bodyNode.addChildNode(node);
    },
    Tag: function Tag(value) {
      var node = serializeAws_restXmlTag(value, context).withName("Tag");
      bodyNode.addChildNode(node);
    },
    And: function And(value) {
      var node = serializeAws_restXmlReplicationRuleAndOperator(value, context).withName("And");
      bodyNode.addChildNode(node);
    },
    _: function _(name, value) {
      if (!(value instanceof _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode || value instanceof _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText)) {
        throw new Error("Unable to serialize unknown union members in XML.");
      }

      bodyNode.addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode(name).addChildNode(value));
    }
  });
  return bodyNode;
};

var serializeAws_restXmlReplicationRules = function serializeAws_restXmlReplicationRules(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlReplicationRule(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlReplicationTime = function serializeAws_restXmlReplicationTime(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationTime");

  if (input.Status !== undefined && input.Status !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationTimeStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
    bodyNode.addChildNode(node);
  }

  if (input.Time !== undefined && input.Time !== null) {
    var node = serializeAws_restXmlReplicationTimeValue(input.Time, context).withName("Time");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlReplicationTimeValue = function serializeAws_restXmlReplicationTimeValue(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationTimeValue");

  if (input.Minutes !== undefined && input.Minutes !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Minutes").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Minutes))).withName("Minutes");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlRequestPaymentConfiguration = function serializeAws_restXmlRequestPaymentConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RequestPaymentConfiguration");

  if (input.Payer !== undefined && input.Payer !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Payer").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Payer)).withName("Payer");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlRequestProgress = function serializeAws_restXmlRequestProgress(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RequestProgress");

  if (input.Enabled !== undefined && input.Enabled !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("EnableRequestProgress").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Enabled))).withName("Enabled");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlRestoreRequest = function serializeAws_restXmlRestoreRequest(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RestoreRequest");

  if (input.Days !== undefined && input.Days !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Days").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Days))).withName("Days");
    bodyNode.addChildNode(node);
  }

  if (input.GlacierJobParameters !== undefined && input.GlacierJobParameters !== null) {
    var node = serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName("GlacierJobParameters");
    bodyNode.addChildNode(node);
  }

  if (input.Type !== undefined && input.Type !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RestoreRequestType").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Type)).withName("Type");
    bodyNode.addChildNode(node);
  }

  if (input.Tier !== undefined && input.Tier !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Tier").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Tier)).withName("Tier");
    bodyNode.addChildNode(node);
  }

  if (input.Description !== undefined && input.Description !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Description").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Description)).withName("Description");
    bodyNode.addChildNode(node);
  }

  if (input.SelectParameters !== undefined && input.SelectParameters !== null) {
    var node = serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName("SelectParameters");
    bodyNode.addChildNode(node);
  }

  if (input.OutputLocation !== undefined && input.OutputLocation !== null) {
    var node = serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName("OutputLocation");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlRoutingRule = function serializeAws_restXmlRoutingRule(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RoutingRule");

  if (input.Condition !== undefined && input.Condition !== null) {
    var node = serializeAws_restXmlCondition(input.Condition, context).withName("Condition");
    bodyNode.addChildNode(node);
  }

  if (input.Redirect !== undefined && input.Redirect !== null) {
    var node = serializeAws_restXmlRedirect(input.Redirect, context).withName("Redirect");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlRoutingRules = function serializeAws_restXmlRoutingRules(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlRoutingRule(entry, context);
    return node.withName("RoutingRule");
  });
};

var serializeAws_restXmlS3KeyFilter = function serializeAws_restXmlS3KeyFilter(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("S3KeyFilter");

  if (input.FilterRules !== undefined && input.FilterRules !== null) {
    var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);
    nodes.map(function (node) {
      node = node.withName("FilterRule");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlS3Location = function serializeAws_restXmlS3Location(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("S3Location");

  if (input.BucketName !== undefined && input.BucketName !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.BucketName)).withName("BucketName");
    bodyNode.addChildNode(node);
  }

  if (input.Prefix !== undefined && input.Prefix !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LocationPrefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
    bodyNode.addChildNode(node);
  }

  if (input.Encryption !== undefined && input.Encryption !== null) {
    var node = serializeAws_restXmlEncryption(input.Encryption, context).withName("Encryption");
    bodyNode.addChildNode(node);
  }

  if (input.CannedACL !== undefined && input.CannedACL !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectCannedACL").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.CannedACL)).withName("CannedACL");
    bodyNode.addChildNode(node);
  }

  if (input.AccessControlList !== undefined && input.AccessControlList !== null) {
    var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);
    var containerNode_4 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccessControlList");
    nodes.map(function (node) {
      containerNode_4.addChildNode(node);
    });
    bodyNode.addChildNode(containerNode_4);
  }

  if (input.Tagging !== undefined && input.Tagging !== null) {
    var node = serializeAws_restXmlTagging(input.Tagging, context).withName("Tagging");
    bodyNode.addChildNode(node);
  }

  if (input.UserMetadata !== undefined && input.UserMetadata !== null) {
    var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);
    var containerNode_5 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("UserMetadata");
    nodes.map(function (node) {
      containerNode_5.addChildNode(node);
    });
    bodyNode.addChildNode(containerNode_5);
  }

  if (input.StorageClass !== undefined && input.StorageClass !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("StorageClass").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.StorageClass)).withName("StorageClass");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlScanRange = function serializeAws_restXmlScanRange(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ScanRange");

  if (input.Start !== undefined && input.Start !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Start").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Start))).withName("Start");
    bodyNode.addChildNode(node);
  }

  if (input.End !== undefined && input.End !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("End").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.End))).withName("End");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlSelectParameters = function serializeAws_restXmlSelectParameters(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SelectParameters");

  if (input.InputSerialization !== undefined && input.InputSerialization !== null) {
    var node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName("InputSerialization");
    bodyNode.addChildNode(node);
  }

  if (input.ExpressionType !== undefined && input.ExpressionType !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExpressionType").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ExpressionType)).withName("ExpressionType");
    bodyNode.addChildNode(node);
  }

  if (input.Expression !== undefined && input.Expression !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Expression").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Expression)).withName("Expression");
    bodyNode.addChildNode(node);
  }

  if (input.OutputSerialization !== undefined && input.OutputSerialization !== null) {
    var node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName("OutputSerialization");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlServerSideEncryptionByDefault = function serializeAws_restXmlServerSideEncryptionByDefault(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ServerSideEncryptionByDefault");

  if (input.SSEAlgorithm !== undefined && input.SSEAlgorithm !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ServerSideEncryption").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.SSEAlgorithm)).withName("SSEAlgorithm");
    bodyNode.addChildNode(node);
  }

  if (input.KMSMasterKeyID !== undefined && input.KMSMasterKeyID !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SSEKMSKeyId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.KMSMasterKeyID)).withName("KMSMasterKeyID");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlServerSideEncryptionConfiguration = function serializeAws_restXmlServerSideEncryptionConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ServerSideEncryptionConfiguration");

  if (input.Rules !== undefined && input.Rules !== null) {
    var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);
    nodes.map(function (node) {
      node = node.withName("Rule");
      bodyNode.addChildNode(node);
    });
  }

  return bodyNode;
};

var serializeAws_restXmlServerSideEncryptionRule = function serializeAws_restXmlServerSideEncryptionRule(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ServerSideEncryptionRule");

  if (input.ApplyServerSideEncryptionByDefault !== undefined && input.ApplyServerSideEncryptionByDefault !== null) {
    var node = serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName("ApplyServerSideEncryptionByDefault");
    bodyNode.addChildNode(node);
  }

  if (input.BucketKeyEnabled !== undefined && input.BucketKeyEnabled !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketKeyEnabled").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.BucketKeyEnabled))).withName("BucketKeyEnabled");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlServerSideEncryptionRules = function serializeAws_restXmlServerSideEncryptionRules(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlSourceSelectionCriteria = function serializeAws_restXmlSourceSelectionCriteria(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SourceSelectionCriteria");

  if (input.SseKmsEncryptedObjects !== undefined && input.SseKmsEncryptedObjects !== null) {
    var node = serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName("SseKmsEncryptedObjects");
    bodyNode.addChildNode(node);
  }

  if (input.ReplicaModifications !== undefined && input.ReplicaModifications !== null) {
    var node = serializeAws_restXmlReplicaModifications(input.ReplicaModifications, context).withName("ReplicaModifications");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlSSEKMS = function serializeAws_restXmlSSEKMS(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SSE-KMS");

  if (input.KeyId !== undefined && input.KeyId !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SSEKMSKeyId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.KeyId)).withName("KeyId");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlSseKmsEncryptedObjects = function serializeAws_restXmlSseKmsEncryptedObjects(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SseKmsEncryptedObjects");

  if (input.Status !== undefined && input.Status !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SseKmsEncryptedObjectsStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlSSES3 = function serializeAws_restXmlSSES3(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SSE-S3");
  return bodyNode;
};

var serializeAws_restXmlStorageClassAnalysis = function serializeAws_restXmlStorageClassAnalysis(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("StorageClassAnalysis");

  if (input.DataExport !== undefined && input.DataExport !== null) {
    var node = serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName("DataExport");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlStorageClassAnalysisDataExport = function serializeAws_restXmlStorageClassAnalysisDataExport(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("StorageClassAnalysisDataExport");

  if (input.OutputSchemaVersion !== undefined && input.OutputSchemaVersion !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("StorageClassAnalysisSchemaVersion").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.OutputSchemaVersion)).withName("OutputSchemaVersion");
    bodyNode.addChildNode(node);
  }

  if (input.Destination !== undefined && input.Destination !== null) {
    var node = serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName("Destination");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlTag = function serializeAws_restXmlTag(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Tag");

  if (input.Key !== undefined && input.Key !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectKey").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Key)).withName("Key");
    bodyNode.addChildNode(node);
  }

  if (input.Value !== undefined && input.Value !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Value").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Value)).withName("Value");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlTagging = function serializeAws_restXmlTagging(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Tagging");

  if (input.TagSet !== undefined && input.TagSet !== null) {
    var nodes = serializeAws_restXmlTagSet(input.TagSet, context);
    var containerNode_6 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TagSet");
    nodes.map(function (node) {
      containerNode_6.addChildNode(node);
    });
    bodyNode.addChildNode(containerNode_6);
  }

  return bodyNode;
};

var serializeAws_restXmlTagSet = function serializeAws_restXmlTagSet(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlTag(entry, context);
    return node.withName("Tag");
  });
};

var serializeAws_restXmlTargetGrant = function serializeAws_restXmlTargetGrant(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TargetGrant");

  if (input.Grantee !== undefined && input.Grantee !== null) {
    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName("Grantee");
    bodyNode.addChildNode(node);
  }

  if (input.Permission !== undefined && input.Permission !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketLogsPermission").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Permission)).withName("Permission");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlTargetGrants = function serializeAws_restXmlTargetGrants(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlTargetGrant(entry, context);
    return node.withName("Grant");
  });
};

var serializeAws_restXmlTiering = function serializeAws_restXmlTiering(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Tiering");

  if (input.Days !== undefined && input.Days !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("IntelligentTieringDays").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Days))).withName("Days");
    bodyNode.addChildNode(node);
  }

  if (input.AccessTier !== undefined && input.AccessTier !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("IntelligentTieringAccessTier").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.AccessTier)).withName("AccessTier");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlTieringList = function serializeAws_restXmlTieringList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlTiering(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlTopicConfiguration = function serializeAws_restXmlTopicConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TopicConfiguration");

  if (input.Id !== undefined && input.Id !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NotificationId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Id)).withName("Id");
    bodyNode.addChildNode(node);
  }

  if (input.TopicArn !== undefined && input.TopicArn !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TopicArn").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.TopicArn)).withName("Topic");
    bodyNode.addChildNode(node);
  }

  if (input.Events !== undefined && input.Events !== null) {
    var nodes = serializeAws_restXmlEventList(input.Events, context);
    nodes.map(function (node) {
      node = node.withName("Event");
      bodyNode.addChildNode(node);
    });
  }

  if (input.Filter !== undefined && input.Filter !== null) {
    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlTopicConfigurationList = function serializeAws_restXmlTopicConfigurationList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlTopicConfiguration(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlTransition = function serializeAws_restXmlTransition(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Transition");

  if (input.Date !== undefined && input.Date !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Date").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Date.toISOString().split(".")[0] + "Z")).withName("Date");
    bodyNode.addChildNode(node);
  }

  if (input.Days !== undefined && input.Days !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Days").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Days))).withName("Days");
    bodyNode.addChildNode(node);
  }

  if (input.StorageClass !== undefined && input.StorageClass !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TransitionStorageClass").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.StorageClass)).withName("StorageClass");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlTransitionList = function serializeAws_restXmlTransitionList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlTransition(entry, context);
    return node.withName("member");
  });
};

var serializeAws_restXmlUserMetadata = function serializeAws_restXmlUserMetadata(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    var node = serializeAws_restXmlMetadataEntry(entry, context);
    return node.withName("MetadataEntry");
  });
};

var serializeAws_restXmlVersioningConfiguration = function serializeAws_restXmlVersioningConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("VersioningConfiguration");

  if (input.MFADelete !== undefined && input.MFADelete !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MFADelete").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.MFADelete)).withName("MfaDelete");
    bodyNode.addChildNode(node);
  }

  if (input.Status !== undefined && input.Status !== null) {
    var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketVersioningStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
    bodyNode.addChildNode(node);
  }

  return bodyNode;
};

var serializeAws_restXmlWebsiteConfiguration = function serializeAws_restXmlWebsiteConfiguration(input, context) {
  var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("WebsiteConfiguration");

  if (input.ErrorDocument !== undefined && input.ErrorDocument !== null) {
    var node = serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName("ErrorDocument");
    bodyNode.addChildNode(node);
  }

  if (input.IndexDocument !== undefined && input.IndexDocument !== null) {
    var node = serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName("IndexDocument");
    bodyNode.addChildNode(node);
  }

  if (input.RedirectAllRequestsTo !== undefined && input.RedirectAllRequestsTo !== null) {
    var node = serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName("RedirectAllRequestsTo");
    bodyNode.addChildNode(node);
  }

  if (input.RoutingRules !== undefined && input.RoutingRules !== null) {
    var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);
    var containerNode_7 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RoutingRules");
    nodes.map(function (node) {
      containerNode_7.addChildNode(node);
    });
    bodyNode.addChildNode(containerNode_7);
  }

  return bodyNode;
};

var deserializeAws_restXmlAbortIncompleteMultipartUpload = function deserializeAws_restXmlAbortIncompleteMultipartUpload(output, context) {
  var contents = {
    DaysAfterInitiation: undefined
  };

  if (output["DaysAfterInitiation"] !== undefined) {
    contents.DaysAfterInitiation = parseInt(output["DaysAfterInitiation"]);
  }

  return contents;
};

var deserializeAws_restXmlAccessControlTranslation = function deserializeAws_restXmlAccessControlTranslation(output, context) {
  var contents = {
    Owner: undefined
  };

  if (output["Owner"] !== undefined) {
    contents.Owner = output["Owner"];
  }

  return contents;
};

var deserializeAws_restXmlAllowedHeaders = function deserializeAws_restXmlAllowedHeaders(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return entry;
  });
};

var deserializeAws_restXmlAllowedMethods = function deserializeAws_restXmlAllowedMethods(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return entry;
  });
};

var deserializeAws_restXmlAllowedOrigins = function deserializeAws_restXmlAllowedOrigins(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return entry;
  });
};

var deserializeAws_restXmlAnalyticsAndOperator = function deserializeAws_restXmlAnalyticsAndOperator(output, context) {
  var contents = {
    Prefix: undefined,
    Tags: undefined
  };

  if (output["Prefix"] !== undefined) {
    contents.Prefix = output["Prefix"];
  }

  if (output.Tag === "") {
    contents.Tags = [];
  }

  if (output["Tag"] !== undefined) {
    contents.Tags = deserializeAws_restXmlTagSet((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Tag"]), context);
  }

  return contents;
};

var deserializeAws_restXmlAnalyticsConfiguration = function deserializeAws_restXmlAnalyticsConfiguration(output, context) {
  var contents = {
    Id: undefined,
    Filter: undefined,
    StorageClassAnalysis: undefined
  };

  if (output["Id"] !== undefined) {
    contents.Id = output["Id"];
  }

  if (output["Filter"] !== undefined) {
    contents.Filter = deserializeAws_restXmlAnalyticsFilter(output["Filter"], context);
  }

  if (output["StorageClassAnalysis"] !== undefined) {
    contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output["StorageClassAnalysis"], context);
  }

  return contents;
};

var deserializeAws_restXmlAnalyticsConfigurationList = function deserializeAws_restXmlAnalyticsConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlAnalyticsConfiguration(entry, context);
  });
};

var deserializeAws_restXmlAnalyticsExportDestination = function deserializeAws_restXmlAnalyticsExportDestination(output, context) {
  var contents = {
    S3BucketDestination: undefined
  };

  if (output["S3BucketDestination"] !== undefined) {
    contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output["S3BucketDestination"], context);
  }

  return contents;
};

var deserializeAws_restXmlAnalyticsFilter = function deserializeAws_restXmlAnalyticsFilter(output, context) {
  if (output["Prefix"] !== undefined) {
    return {
      Prefix: output["Prefix"]
    };
  }

  if (output["Tag"] !== undefined) {
    return {
      Tag: deserializeAws_restXmlTag(output["Tag"], context)
    };
  }

  if (output["And"] !== undefined) {
    return {
      And: deserializeAws_restXmlAnalyticsAndOperator(output["And"], context)
    };
  }

  return {
    $unknown: Object.entries(output)[0]
  };
};

var deserializeAws_restXmlAnalyticsS3BucketDestination = function deserializeAws_restXmlAnalyticsS3BucketDestination(output, context) {
  var contents = {
    Format: undefined,
    BucketAccountId: undefined,
    Bucket: undefined,
    Prefix: undefined
  };

  if (output["Format"] !== undefined) {
    contents.Format = output["Format"];
  }

  if (output["BucketAccountId"] !== undefined) {
    contents.BucketAccountId = output["BucketAccountId"];
  }

  if (output["Bucket"] !== undefined) {
    contents.Bucket = output["Bucket"];
  }

  if (output["Prefix"] !== undefined) {
    contents.Prefix = output["Prefix"];
  }

  return contents;
};

var deserializeAws_restXmlBucket = function deserializeAws_restXmlBucket(output, context) {
  var contents = {
    Name: undefined,
    CreationDate: undefined
  };

  if (output["Name"] !== undefined) {
    contents.Name = output["Name"];
  }

  if (output["CreationDate"] !== undefined) {
    contents.CreationDate = new Date(output["CreationDate"]);
  }

  return contents;
};

var deserializeAws_restXmlBuckets = function deserializeAws_restXmlBuckets(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlBucket(entry, context);
  });
};

var deserializeAws_restXmlCommonPrefix = function deserializeAws_restXmlCommonPrefix(output, context) {
  var contents = {
    Prefix: undefined
  };

  if (output["Prefix"] !== undefined) {
    contents.Prefix = output["Prefix"];
  }

  return contents;
};

var deserializeAws_restXmlCommonPrefixList = function deserializeAws_restXmlCommonPrefixList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlCommonPrefix(entry, context);
  });
};

var deserializeAws_restXmlCondition = function deserializeAws_restXmlCondition(output, context) {
  var contents = {
    HttpErrorCodeReturnedEquals: undefined,
    KeyPrefixEquals: undefined
  };

  if (output["HttpErrorCodeReturnedEquals"] !== undefined) {
    contents.HttpErrorCodeReturnedEquals = output["HttpErrorCodeReturnedEquals"];
  }

  if (output["KeyPrefixEquals"] !== undefined) {
    contents.KeyPrefixEquals = output["KeyPrefixEquals"];
  }

  return contents;
};

var deserializeAws_restXmlCopyObjectResult = function deserializeAws_restXmlCopyObjectResult(output, context) {
  var contents = {
    ETag: undefined,
    LastModified: undefined
  };

  if (output["ETag"] !== undefined) {
    contents.ETag = output["ETag"];
  }

  if (output["LastModified"] !== undefined) {
    contents.LastModified = new Date(output["LastModified"]);
  }

  return contents;
};

var deserializeAws_restXmlCopyPartResult = function deserializeAws_restXmlCopyPartResult(output, context) {
  var contents = {
    ETag: undefined,
    LastModified: undefined
  };

  if (output["ETag"] !== undefined) {
    contents.ETag = output["ETag"];
  }

  if (output["LastModified"] !== undefined) {
    contents.LastModified = new Date(output["LastModified"]);
  }

  return contents;
};

var deserializeAws_restXmlCORSRule = function deserializeAws_restXmlCORSRule(output, context) {
  var contents = {
    AllowedHeaders: undefined,
    AllowedMethods: undefined,
    AllowedOrigins: undefined,
    ExposeHeaders: undefined,
    MaxAgeSeconds: undefined
  };

  if (output.AllowedHeader === "") {
    contents.AllowedHeaders = [];
  }

  if (output["AllowedHeader"] !== undefined) {
    contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["AllowedHeader"]), context);
  }

  if (output.AllowedMethod === "") {
    contents.AllowedMethods = [];
  }

  if (output["AllowedMethod"] !== undefined) {
    contents.AllowedMethods = deserializeAws_restXmlAllowedMethods((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["AllowedMethod"]), context);
  }

  if (output.AllowedOrigin === "") {
    contents.AllowedOrigins = [];
  }

  if (output["AllowedOrigin"] !== undefined) {
    contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["AllowedOrigin"]), context);
  }

  if (output.ExposeHeader === "") {
    contents.ExposeHeaders = [];
  }

  if (output["ExposeHeader"] !== undefined) {
    contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["ExposeHeader"]), context);
  }

  if (output["MaxAgeSeconds"] !== undefined) {
    contents.MaxAgeSeconds = parseInt(output["MaxAgeSeconds"]);
  }

  return contents;
};

var deserializeAws_restXmlCORSRules = function deserializeAws_restXmlCORSRules(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlCORSRule(entry, context);
  });
};

var deserializeAws_restXmlDefaultRetention = function deserializeAws_restXmlDefaultRetention(output, context) {
  var contents = {
    Mode: undefined,
    Days: undefined,
    Years: undefined
  };

  if (output["Mode"] !== undefined) {
    contents.Mode = output["Mode"];
  }

  if (output["Days"] !== undefined) {
    contents.Days = parseInt(output["Days"]);
  }

  if (output["Years"] !== undefined) {
    contents.Years = parseInt(output["Years"]);
  }

  return contents;
};

var deserializeAws_restXmlDeletedObject = function deserializeAws_restXmlDeletedObject(output, context) {
  var contents = {
    Key: undefined,
    VersionId: undefined,
    DeleteMarker: undefined,
    DeleteMarkerVersionId: undefined
  };

  if (output["Key"] !== undefined) {
    contents.Key = output["Key"];
  }

  if (output["VersionId"] !== undefined) {
    contents.VersionId = output["VersionId"];
  }

  if (output["DeleteMarker"] !== undefined) {
    contents.DeleteMarker = output["DeleteMarker"] == "true";
  }

  if (output["DeleteMarkerVersionId"] !== undefined) {
    contents.DeleteMarkerVersionId = output["DeleteMarkerVersionId"];
  }

  return contents;
};

var deserializeAws_restXmlDeletedObjects = function deserializeAws_restXmlDeletedObjects(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlDeletedObject(entry, context);
  });
};

var deserializeAws_restXmlDeleteMarkerEntry = function deserializeAws_restXmlDeleteMarkerEntry(output, context) {
  var contents = {
    Owner: undefined,
    Key: undefined,
    VersionId: undefined,
    IsLatest: undefined,
    LastModified: undefined
  };

  if (output["Owner"] !== undefined) {
    contents.Owner = deserializeAws_restXmlOwner(output["Owner"], context);
  }

  if (output["Key"] !== undefined) {
    contents.Key = output["Key"];
  }

  if (output["VersionId"] !== undefined) {
    contents.VersionId = output["VersionId"];
  }

  if (output["IsLatest"] !== undefined) {
    contents.IsLatest = output["IsLatest"] == "true";
  }

  if (output["LastModified"] !== undefined) {
    contents.LastModified = new Date(output["LastModified"]);
  }

  return contents;
};

var deserializeAws_restXmlDeleteMarkerReplication = function deserializeAws_restXmlDeleteMarkerReplication(output, context) {
  var contents = {
    Status: undefined
  };

  if (output["Status"] !== undefined) {
    contents.Status = output["Status"];
  }

  return contents;
};

var deserializeAws_restXmlDeleteMarkers = function deserializeAws_restXmlDeleteMarkers(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlDeleteMarkerEntry(entry, context);
  });
};

var deserializeAws_restXmlDestination = function deserializeAws_restXmlDestination(output, context) {
  var contents = {
    Bucket: undefined,
    Account: undefined,
    StorageClass: undefined,
    AccessControlTranslation: undefined,
    EncryptionConfiguration: undefined,
    ReplicationTime: undefined,
    Metrics: undefined
  };

  if (output["Bucket"] !== undefined) {
    contents.Bucket = output["Bucket"];
  }

  if (output["Account"] !== undefined) {
    contents.Account = output["Account"];
  }

  if (output["StorageClass"] !== undefined) {
    contents.StorageClass = output["StorageClass"];
  }

  if (output["AccessControlTranslation"] !== undefined) {
    contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output["AccessControlTranslation"], context);
  }

  if (output["EncryptionConfiguration"] !== undefined) {
    contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output["EncryptionConfiguration"], context);
  }

  if (output["ReplicationTime"] !== undefined) {
    contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output["ReplicationTime"], context);
  }

  if (output["Metrics"] !== undefined) {
    contents.Metrics = deserializeAws_restXmlMetrics(output["Metrics"], context);
  }

  return contents;
};

var deserializeAws_restXmlEncryptionConfiguration = function deserializeAws_restXmlEncryptionConfiguration(output, context) {
  var contents = {
    ReplicaKmsKeyID: undefined
  };

  if (output["ReplicaKmsKeyID"] !== undefined) {
    contents.ReplicaKmsKeyID = output["ReplicaKmsKeyID"];
  }

  return contents;
};

var deserializeAws_restXml_Error = function deserializeAws_restXml_Error(output, context) {
  var contents = {
    Key: undefined,
    VersionId: undefined,
    Code: undefined,
    Message: undefined
  };

  if (output["Key"] !== undefined) {
    contents.Key = output["Key"];
  }

  if (output["VersionId"] !== undefined) {
    contents.VersionId = output["VersionId"];
  }

  if (output["Code"] !== undefined) {
    contents.Code = output["Code"];
  }

  if (output["Message"] !== undefined) {
    contents.Message = output["Message"];
  }

  return contents;
};

var deserializeAws_restXmlErrorDocument = function deserializeAws_restXmlErrorDocument(output, context) {
  var contents = {
    Key: undefined
  };

  if (output["Key"] !== undefined) {
    contents.Key = output["Key"];
  }

  return contents;
};

var deserializeAws_restXmlErrors = function deserializeAws_restXmlErrors(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXml_Error(entry, context);
  });
};

var deserializeAws_restXmlEventList = function deserializeAws_restXmlEventList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return entry;
  });
};

var deserializeAws_restXmlExistingObjectReplication = function deserializeAws_restXmlExistingObjectReplication(output, context) {
  var contents = {
    Status: undefined
  };

  if (output["Status"] !== undefined) {
    contents.Status = output["Status"];
  }

  return contents;
};

var deserializeAws_restXmlExposeHeaders = function deserializeAws_restXmlExposeHeaders(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return entry;
  });
};

var deserializeAws_restXmlFilterRule = function deserializeAws_restXmlFilterRule(output, context) {
  var contents = {
    Name: undefined,
    Value: undefined
  };

  if (output["Name"] !== undefined) {
    contents.Name = output["Name"];
  }

  if (output["Value"] !== undefined) {
    contents.Value = output["Value"];
  }

  return contents;
};

var deserializeAws_restXmlFilterRuleList = function deserializeAws_restXmlFilterRuleList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlFilterRule(entry, context);
  });
};

var deserializeAws_restXmlGrant = function deserializeAws_restXmlGrant(output, context) {
  var contents = {
    Grantee: undefined,
    Permission: undefined
  };

  if (output["Grantee"] !== undefined) {
    contents.Grantee = deserializeAws_restXmlGrantee(output["Grantee"], context);
  }

  if (output["Permission"] !== undefined) {
    contents.Permission = output["Permission"];
  }

  return contents;
};

var deserializeAws_restXmlGrantee = function deserializeAws_restXmlGrantee(output, context) {
  var contents = {
    DisplayName: undefined,
    EmailAddress: undefined,
    ID: undefined,
    URI: undefined,
    Type: undefined
  };

  if (output["DisplayName"] !== undefined) {
    contents.DisplayName = output["DisplayName"];
  }

  if (output["EmailAddress"] !== undefined) {
    contents.EmailAddress = output["EmailAddress"];
  }

  if (output["ID"] !== undefined) {
    contents.ID = output["ID"];
  }

  if (output["URI"] !== undefined) {
    contents.URI = output["URI"];
  }

  if (output["xsi:type"] !== undefined) {
    contents.Type = output["xsi:type"];
  }

  return contents;
};

var deserializeAws_restXmlGrants = function deserializeAws_restXmlGrants(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlGrant(entry, context);
  });
};

var deserializeAws_restXmlIndexDocument = function deserializeAws_restXmlIndexDocument(output, context) {
  var contents = {
    Suffix: undefined
  };

  if (output["Suffix"] !== undefined) {
    contents.Suffix = output["Suffix"];
  }

  return contents;
};

var deserializeAws_restXmlInitiator = function deserializeAws_restXmlInitiator(output, context) {
  var contents = {
    ID: undefined,
    DisplayName: undefined
  };

  if (output["ID"] !== undefined) {
    contents.ID = output["ID"];
  }

  if (output["DisplayName"] !== undefined) {
    contents.DisplayName = output["DisplayName"];
  }

  return contents;
};

var deserializeAws_restXmlIntelligentTieringAndOperator = function deserializeAws_restXmlIntelligentTieringAndOperator(output, context) {
  var contents = {
    Prefix: undefined,
    Tags: undefined
  };

  if (output["Prefix"] !== undefined) {
    contents.Prefix = output["Prefix"];
  }

  if (output.Tag === "") {
    contents.Tags = [];
  }

  if (output["Tag"] !== undefined) {
    contents.Tags = deserializeAws_restXmlTagSet((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Tag"]), context);
  }

  return contents;
};

var deserializeAws_restXmlIntelligentTieringConfiguration = function deserializeAws_restXmlIntelligentTieringConfiguration(output, context) {
  var contents = {
    Id: undefined,
    Filter: undefined,
    Status: undefined,
    Tierings: undefined
  };

  if (output["Id"] !== undefined) {
    contents.Id = output["Id"];
  }

  if (output["Filter"] !== undefined) {
    contents.Filter = deserializeAws_restXmlIntelligentTieringFilter(output["Filter"], context);
  }

  if (output["Status"] !== undefined) {
    contents.Status = output["Status"];
  }

  if (output.Tiering === "") {
    contents.Tierings = [];
  }

  if (output["Tiering"] !== undefined) {
    contents.Tierings = deserializeAws_restXmlTieringList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Tiering"]), context);
  }

  return contents;
};

var deserializeAws_restXmlIntelligentTieringConfigurationList = function deserializeAws_restXmlIntelligentTieringConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlIntelligentTieringConfiguration(entry, context);
  });
};

var deserializeAws_restXmlIntelligentTieringFilter = function deserializeAws_restXmlIntelligentTieringFilter(output, context) {
  var contents = {
    Prefix: undefined,
    Tag: undefined,
    And: undefined
  };

  if (output["Prefix"] !== undefined) {
    contents.Prefix = output["Prefix"];
  }

  if (output["Tag"] !== undefined) {
    contents.Tag = deserializeAws_restXmlTag(output["Tag"], context);
  }

  if (output["And"] !== undefined) {
    contents.And = deserializeAws_restXmlIntelligentTieringAndOperator(output["And"], context);
  }

  return contents;
};

var deserializeAws_restXmlInventoryConfiguration = function deserializeAws_restXmlInventoryConfiguration(output, context) {
  var contents = {
    Destination: undefined,
    IsEnabled: undefined,
    Filter: undefined,
    Id: undefined,
    IncludedObjectVersions: undefined,
    OptionalFields: undefined,
    Schedule: undefined
  };

  if (output["Destination"] !== undefined) {
    contents.Destination = deserializeAws_restXmlInventoryDestination(output["Destination"], context);
  }

  if (output["IsEnabled"] !== undefined) {
    contents.IsEnabled = output["IsEnabled"] == "true";
  }

  if (output["Filter"] !== undefined) {
    contents.Filter = deserializeAws_restXmlInventoryFilter(output["Filter"], context);
  }

  if (output["Id"] !== undefined) {
    contents.Id = output["Id"];
  }

  if (output["IncludedObjectVersions"] !== undefined) {
    contents.IncludedObjectVersions = output["IncludedObjectVersions"];
  }

  if (output.OptionalFields === "") {
    contents.OptionalFields = [];
  }

  if (output["OptionalFields"] !== undefined && output["OptionalFields"]["Field"] !== undefined) {
    contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["OptionalFields"]["Field"]), context);
  }

  if (output["Schedule"] !== undefined) {
    contents.Schedule = deserializeAws_restXmlInventorySchedule(output["Schedule"], context);
  }

  return contents;
};

var deserializeAws_restXmlInventoryConfigurationList = function deserializeAws_restXmlInventoryConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlInventoryConfiguration(entry, context);
  });
};

var deserializeAws_restXmlInventoryDestination = function deserializeAws_restXmlInventoryDestination(output, context) {
  var contents = {
    S3BucketDestination: undefined
  };

  if (output["S3BucketDestination"] !== undefined) {
    contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output["S3BucketDestination"], context);
  }

  return contents;
};

var deserializeAws_restXmlInventoryEncryption = function deserializeAws_restXmlInventoryEncryption(output, context) {
  var contents = {
    SSES3: undefined,
    SSEKMS: undefined
  };

  if (output["SSE-S3"] !== undefined) {
    contents.SSES3 = deserializeAws_restXmlSSES3(output["SSE-S3"], context);
  }

  if (output["SSE-KMS"] !== undefined) {
    contents.SSEKMS = deserializeAws_restXmlSSEKMS(output["SSE-KMS"], context);
  }

  return contents;
};

var deserializeAws_restXmlInventoryFilter = function deserializeAws_restXmlInventoryFilter(output, context) {
  var contents = {
    Prefix: undefined
  };

  if (output["Prefix"] !== undefined) {
    contents.Prefix = output["Prefix"];
  }

  return contents;
};

var deserializeAws_restXmlInventoryOptionalFields = function deserializeAws_restXmlInventoryOptionalFields(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return entry;
  });
};

var deserializeAws_restXmlInventoryS3BucketDestination = function deserializeAws_restXmlInventoryS3BucketDestination(output, context) {
  var contents = {
    AccountId: undefined,
    Bucket: undefined,
    Format: undefined,
    Prefix: undefined,
    Encryption: undefined
  };

  if (output["AccountId"] !== undefined) {
    contents.AccountId = output["AccountId"];
  }

  if (output["Bucket"] !== undefined) {
    contents.Bucket = output["Bucket"];
  }

  if (output["Format"] !== undefined) {
    contents.Format = output["Format"];
  }

  if (output["Prefix"] !== undefined) {
    contents.Prefix = output["Prefix"];
  }

  if (output["Encryption"] !== undefined) {
    contents.Encryption = deserializeAws_restXmlInventoryEncryption(output["Encryption"], context);
  }

  return contents;
};

var deserializeAws_restXmlInventorySchedule = function deserializeAws_restXmlInventorySchedule(output, context) {
  var contents = {
    Frequency: undefined
  };

  if (output["Frequency"] !== undefined) {
    contents.Frequency = output["Frequency"];
  }

  return contents;
};

var deserializeAws_restXmlLambdaFunctionConfiguration = function deserializeAws_restXmlLambdaFunctionConfiguration(output, context) {
  var contents = {
    Id: undefined,
    LambdaFunctionArn: undefined,
    Events: undefined,
    Filter: undefined
  };

  if (output["Id"] !== undefined) {
    contents.Id = output["Id"];
  }

  if (output["CloudFunction"] !== undefined) {
    contents.LambdaFunctionArn = output["CloudFunction"];
  }

  if (output.Event === "") {
    contents.Events = [];
  }

  if (output["Event"] !== undefined) {
    contents.Events = deserializeAws_restXmlEventList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Event"]), context);
  }

  if (output["Filter"] !== undefined) {
    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output["Filter"], context);
  }

  return contents;
};

var deserializeAws_restXmlLambdaFunctionConfigurationList = function deserializeAws_restXmlLambdaFunctionConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlLambdaFunctionConfiguration(entry, context);
  });
};

var deserializeAws_restXmlLifecycleExpiration = function deserializeAws_restXmlLifecycleExpiration(output, context) {
  var contents = {
    Date: undefined,
    Days: undefined,
    ExpiredObjectDeleteMarker: undefined
  };

  if (output["Date"] !== undefined) {
    contents.Date = new Date(output["Date"]);
  }

  if (output["Days"] !== undefined) {
    contents.Days = parseInt(output["Days"]);
  }

  if (output["ExpiredObjectDeleteMarker"] !== undefined) {
    contents.ExpiredObjectDeleteMarker = output["ExpiredObjectDeleteMarker"] == "true";
  }

  return contents;
};

var deserializeAws_restXmlLifecycleRule = function deserializeAws_restXmlLifecycleRule(output, context) {
  var contents = {
    Expiration: undefined,
    ID: undefined,
    Prefix: undefined,
    Filter: undefined,
    Status: undefined,
    Transitions: undefined,
    NoncurrentVersionTransitions: undefined,
    NoncurrentVersionExpiration: undefined,
    AbortIncompleteMultipartUpload: undefined
  };

  if (output["Expiration"] !== undefined) {
    contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output["Expiration"], context);
  }

  if (output["ID"] !== undefined) {
    contents.ID = output["ID"];
  }

  if (output["Prefix"] !== undefined) {
    contents.Prefix = output["Prefix"];
  }

  if (output["Filter"] !== undefined) {
    contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(output["Filter"], context);
  }

  if (output["Status"] !== undefined) {
    contents.Status = output["Status"];
  }

  if (output.Transition === "") {
    contents.Transitions = [];
  }

  if (output["Transition"] !== undefined) {
    contents.Transitions = deserializeAws_restXmlTransitionList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Transition"]), context);
  }

  if (output.NoncurrentVersionTransition === "") {
    contents.NoncurrentVersionTransitions = [];
  }

  if (output["NoncurrentVersionTransition"] !== undefined) {
    contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["NoncurrentVersionTransition"]), context);
  }

  if (output["NoncurrentVersionExpiration"] !== undefined) {
    contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output["NoncurrentVersionExpiration"], context);
  }

  if (output["AbortIncompleteMultipartUpload"] !== undefined) {
    contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output["AbortIncompleteMultipartUpload"], context);
  }

  return contents;
};

var deserializeAws_restXmlLifecycleRuleAndOperator = function deserializeAws_restXmlLifecycleRuleAndOperator(output, context) {
  var contents = {
    Prefix: undefined,
    Tags: undefined
  };

  if (output["Prefix"] !== undefined) {
    contents.Prefix = output["Prefix"];
  }

  if (output.Tag === "") {
    contents.Tags = [];
  }

  if (output["Tag"] !== undefined) {
    contents.Tags = deserializeAws_restXmlTagSet((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Tag"]), context);
  }

  return contents;
};

var deserializeAws_restXmlLifecycleRuleFilter = function deserializeAws_restXmlLifecycleRuleFilter(output, context) {
  if (output["Prefix"] !== undefined) {
    return {
      Prefix: output["Prefix"]
    };
  }

  if (output["Tag"] !== undefined) {
    return {
      Tag: deserializeAws_restXmlTag(output["Tag"], context)
    };
  }

  if (output["And"] !== undefined) {
    return {
      And: deserializeAws_restXmlLifecycleRuleAndOperator(output["And"], context)
    };
  }

  return {
    $unknown: Object.entries(output)[0]
  };
};

var deserializeAws_restXmlLifecycleRules = function deserializeAws_restXmlLifecycleRules(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlLifecycleRule(entry, context);
  });
};

var deserializeAws_restXmlLoggingEnabled = function deserializeAws_restXmlLoggingEnabled(output, context) {
  var contents = {
    TargetBucket: undefined,
    TargetGrants: undefined,
    TargetPrefix: undefined
  };

  if (output["TargetBucket"] !== undefined) {
    contents.TargetBucket = output["TargetBucket"];
  }

  if (output.TargetGrants === "") {
    contents.TargetGrants = [];
  }

  if (output["TargetGrants"] !== undefined && output["TargetGrants"]["Grant"] !== undefined) {
    contents.TargetGrants = deserializeAws_restXmlTargetGrants((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["TargetGrants"]["Grant"]), context);
  }

  if (output["TargetPrefix"] !== undefined) {
    contents.TargetPrefix = output["TargetPrefix"];
  }

  return contents;
};

var deserializeAws_restXmlMetrics = function deserializeAws_restXmlMetrics(output, context) {
  var contents = {
    Status: undefined,
    EventThreshold: undefined
  };

  if (output["Status"] !== undefined) {
    contents.Status = output["Status"];
  }

  if (output["EventThreshold"] !== undefined) {
    contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output["EventThreshold"], context);
  }

  return contents;
};

var deserializeAws_restXmlMetricsAndOperator = function deserializeAws_restXmlMetricsAndOperator(output, context) {
  var contents = {
    Prefix: undefined,
    Tags: undefined
  };

  if (output["Prefix"] !== undefined) {
    contents.Prefix = output["Prefix"];
  }

  if (output.Tag === "") {
    contents.Tags = [];
  }

  if (output["Tag"] !== undefined) {
    contents.Tags = deserializeAws_restXmlTagSet((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Tag"]), context);
  }

  return contents;
};

var deserializeAws_restXmlMetricsConfiguration = function deserializeAws_restXmlMetricsConfiguration(output, context) {
  var contents = {
    Id: undefined,
    Filter: undefined
  };

  if (output["Id"] !== undefined) {
    contents.Id = output["Id"];
  }

  if (output["Filter"] !== undefined) {
    contents.Filter = deserializeAws_restXmlMetricsFilter(output["Filter"], context);
  }

  return contents;
};

var deserializeAws_restXmlMetricsConfigurationList = function deserializeAws_restXmlMetricsConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlMetricsConfiguration(entry, context);
  });
};

var deserializeAws_restXmlMetricsFilter = function deserializeAws_restXmlMetricsFilter(output, context) {
  if (output["Prefix"] !== undefined) {
    return {
      Prefix: output["Prefix"]
    };
  }

  if (output["Tag"] !== undefined) {
    return {
      Tag: deserializeAws_restXmlTag(output["Tag"], context)
    };
  }

  if (output["And"] !== undefined) {
    return {
      And: deserializeAws_restXmlMetricsAndOperator(output["And"], context)
    };
  }

  return {
    $unknown: Object.entries(output)[0]
  };
};

var deserializeAws_restXmlMultipartUpload = function deserializeAws_restXmlMultipartUpload(output, context) {
  var contents = {
    UploadId: undefined,
    Key: undefined,
    Initiated: undefined,
    StorageClass: undefined,
    Owner: undefined,
    Initiator: undefined
  };

  if (output["UploadId"] !== undefined) {
    contents.UploadId = output["UploadId"];
  }

  if (output["Key"] !== undefined) {
    contents.Key = output["Key"];
  }

  if (output["Initiated"] !== undefined) {
    contents.Initiated = new Date(output["Initiated"]);
  }

  if (output["StorageClass"] !== undefined) {
    contents.StorageClass = output["StorageClass"];
  }

  if (output["Owner"] !== undefined) {
    contents.Owner = deserializeAws_restXmlOwner(output["Owner"], context);
  }

  if (output["Initiator"] !== undefined) {
    contents.Initiator = deserializeAws_restXmlInitiator(output["Initiator"], context);
  }

  return contents;
};

var deserializeAws_restXmlMultipartUploadList = function deserializeAws_restXmlMultipartUploadList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlMultipartUpload(entry, context);
  });
};

var deserializeAws_restXmlNoncurrentVersionExpiration = function deserializeAws_restXmlNoncurrentVersionExpiration(output, context) {
  var contents = {
    NoncurrentDays: undefined
  };

  if (output["NoncurrentDays"] !== undefined) {
    contents.NoncurrentDays = parseInt(output["NoncurrentDays"]);
  }

  return contents;
};

var deserializeAws_restXmlNoncurrentVersionTransition = function deserializeAws_restXmlNoncurrentVersionTransition(output, context) {
  var contents = {
    NoncurrentDays: undefined,
    StorageClass: undefined
  };

  if (output["NoncurrentDays"] !== undefined) {
    contents.NoncurrentDays = parseInt(output["NoncurrentDays"]);
  }

  if (output["StorageClass"] !== undefined) {
    contents.StorageClass = output["StorageClass"];
  }

  return contents;
};

var deserializeAws_restXmlNoncurrentVersionTransitionList = function deserializeAws_restXmlNoncurrentVersionTransitionList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlNoncurrentVersionTransition(entry, context);
  });
};

var deserializeAws_restXmlNotificationConfigurationFilter = function deserializeAws_restXmlNotificationConfigurationFilter(output, context) {
  var contents = {
    Key: undefined
  };

  if (output["S3Key"] !== undefined) {
    contents.Key = deserializeAws_restXmlS3KeyFilter(output["S3Key"], context);
  }

  return contents;
};

var deserializeAws_restXml_Object = function deserializeAws_restXml_Object(output, context) {
  var contents = {
    Key: undefined,
    LastModified: undefined,
    ETag: undefined,
    Size: undefined,
    StorageClass: undefined,
    Owner: undefined
  };

  if (output["Key"] !== undefined) {
    contents.Key = output["Key"];
  }

  if (output["LastModified"] !== undefined) {
    contents.LastModified = new Date(output["LastModified"]);
  }

  if (output["ETag"] !== undefined) {
    contents.ETag = output["ETag"];
  }

  if (output["Size"] !== undefined) {
    contents.Size = parseInt(output["Size"]);
  }

  if (output["StorageClass"] !== undefined) {
    contents.StorageClass = output["StorageClass"];
  }

  if (output["Owner"] !== undefined) {
    contents.Owner = deserializeAws_restXmlOwner(output["Owner"], context);
  }

  return contents;
};

var deserializeAws_restXmlObjectList = function deserializeAws_restXmlObjectList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXml_Object(entry, context);
  });
};

var deserializeAws_restXmlObjectLockConfiguration = function deserializeAws_restXmlObjectLockConfiguration(output, context) {
  var contents = {
    ObjectLockEnabled: undefined,
    Rule: undefined
  };

  if (output["ObjectLockEnabled"] !== undefined) {
    contents.ObjectLockEnabled = output["ObjectLockEnabled"];
  }

  if (output["Rule"] !== undefined) {
    contents.Rule = deserializeAws_restXmlObjectLockRule(output["Rule"], context);
  }

  return contents;
};

var deserializeAws_restXmlObjectLockLegalHold = function deserializeAws_restXmlObjectLockLegalHold(output, context) {
  var contents = {
    Status: undefined
  };

  if (output["Status"] !== undefined) {
    contents.Status = output["Status"];
  }

  return contents;
};

var deserializeAws_restXmlObjectLockRetention = function deserializeAws_restXmlObjectLockRetention(output, context) {
  var contents = {
    Mode: undefined,
    RetainUntilDate: undefined
  };

  if (output["Mode"] !== undefined) {
    contents.Mode = output["Mode"];
  }

  if (output["RetainUntilDate"] !== undefined) {
    contents.RetainUntilDate = new Date(output["RetainUntilDate"]);
  }

  return contents;
};

var deserializeAws_restXmlObjectLockRule = function deserializeAws_restXmlObjectLockRule(output, context) {
  var contents = {
    DefaultRetention: undefined
  };

  if (output["DefaultRetention"] !== undefined) {
    contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output["DefaultRetention"], context);
  }

  return contents;
};

var deserializeAws_restXmlObjectVersion = function deserializeAws_restXmlObjectVersion(output, context) {
  var contents = {
    ETag: undefined,
    Size: undefined,
    StorageClass: undefined,
    Key: undefined,
    VersionId: undefined,
    IsLatest: undefined,
    LastModified: undefined,
    Owner: undefined
  };

  if (output["ETag"] !== undefined) {
    contents.ETag = output["ETag"];
  }

  if (output["Size"] !== undefined) {
    contents.Size = parseInt(output["Size"]);
  }

  if (output["StorageClass"] !== undefined) {
    contents.StorageClass = output["StorageClass"];
  }

  if (output["Key"] !== undefined) {
    contents.Key = output["Key"];
  }

  if (output["VersionId"] !== undefined) {
    contents.VersionId = output["VersionId"];
  }

  if (output["IsLatest"] !== undefined) {
    contents.IsLatest = output["IsLatest"] == "true";
  }

  if (output["LastModified"] !== undefined) {
    contents.LastModified = new Date(output["LastModified"]);
  }

  if (output["Owner"] !== undefined) {
    contents.Owner = deserializeAws_restXmlOwner(output["Owner"], context);
  }

  return contents;
};

var deserializeAws_restXmlObjectVersionList = function deserializeAws_restXmlObjectVersionList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlObjectVersion(entry, context);
  });
};

var deserializeAws_restXmlOwner = function deserializeAws_restXmlOwner(output, context) {
  var contents = {
    DisplayName: undefined,
    ID: undefined
  };

  if (output["DisplayName"] !== undefined) {
    contents.DisplayName = output["DisplayName"];
  }

  if (output["ID"] !== undefined) {
    contents.ID = output["ID"];
  }

  return contents;
};

var deserializeAws_restXmlOwnershipControls = function deserializeAws_restXmlOwnershipControls(output, context) {
  var contents = {
    Rules: undefined
  };

  if (output.Rule === "") {
    contents.Rules = [];
  }

  if (output["Rule"] !== undefined) {
    contents.Rules = deserializeAws_restXmlOwnershipControlsRules((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Rule"]), context);
  }

  return contents;
};

var deserializeAws_restXmlOwnershipControlsRule = function deserializeAws_restXmlOwnershipControlsRule(output, context) {
  var contents = {
    ObjectOwnership: undefined
  };

  if (output["ObjectOwnership"] !== undefined) {
    contents.ObjectOwnership = output["ObjectOwnership"];
  }

  return contents;
};

var deserializeAws_restXmlOwnershipControlsRules = function deserializeAws_restXmlOwnershipControlsRules(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlOwnershipControlsRule(entry, context);
  });
};

var deserializeAws_restXmlPart = function deserializeAws_restXmlPart(output, context) {
  var contents = {
    PartNumber: undefined,
    LastModified: undefined,
    ETag: undefined,
    Size: undefined
  };

  if (output["PartNumber"] !== undefined) {
    contents.PartNumber = parseInt(output["PartNumber"]);
  }

  if (output["LastModified"] !== undefined) {
    contents.LastModified = new Date(output["LastModified"]);
  }

  if (output["ETag"] !== undefined) {
    contents.ETag = output["ETag"];
  }

  if (output["Size"] !== undefined) {
    contents.Size = parseInt(output["Size"]);
  }

  return contents;
};

var deserializeAws_restXmlParts = function deserializeAws_restXmlParts(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlPart(entry, context);
  });
};

var deserializeAws_restXmlPolicyStatus = function deserializeAws_restXmlPolicyStatus(output, context) {
  var contents = {
    IsPublic: undefined
  };

  if (output["IsPublic"] !== undefined) {
    contents.IsPublic = output["IsPublic"] == "true";
  }

  return contents;
};

var deserializeAws_restXmlPublicAccessBlockConfiguration = function deserializeAws_restXmlPublicAccessBlockConfiguration(output, context) {
  var contents = {
    BlockPublicAcls: undefined,
    IgnorePublicAcls: undefined,
    BlockPublicPolicy: undefined,
    RestrictPublicBuckets: undefined
  };

  if (output["BlockPublicAcls"] !== undefined) {
    contents.BlockPublicAcls = output["BlockPublicAcls"] == "true";
  }

  if (output["IgnorePublicAcls"] !== undefined) {
    contents.IgnorePublicAcls = output["IgnorePublicAcls"] == "true";
  }

  if (output["BlockPublicPolicy"] !== undefined) {
    contents.BlockPublicPolicy = output["BlockPublicPolicy"] == "true";
  }

  if (output["RestrictPublicBuckets"] !== undefined) {
    contents.RestrictPublicBuckets = output["RestrictPublicBuckets"] == "true";
  }

  return contents;
};

var deserializeAws_restXmlQueueConfiguration = function deserializeAws_restXmlQueueConfiguration(output, context) {
  var contents = {
    Id: undefined,
    QueueArn: undefined,
    Events: undefined,
    Filter: undefined
  };

  if (output["Id"] !== undefined) {
    contents.Id = output["Id"];
  }

  if (output["Queue"] !== undefined) {
    contents.QueueArn = output["Queue"];
  }

  if (output.Event === "") {
    contents.Events = [];
  }

  if (output["Event"] !== undefined) {
    contents.Events = deserializeAws_restXmlEventList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Event"]), context);
  }

  if (output["Filter"] !== undefined) {
    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output["Filter"], context);
  }

  return contents;
};

var deserializeAws_restXmlQueueConfigurationList = function deserializeAws_restXmlQueueConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlQueueConfiguration(entry, context);
  });
};

var deserializeAws_restXmlRedirect = function deserializeAws_restXmlRedirect(output, context) {
  var contents = {
    HostName: undefined,
    HttpRedirectCode: undefined,
    Protocol: undefined,
    ReplaceKeyPrefixWith: undefined,
    ReplaceKeyWith: undefined
  };

  if (output["HostName"] !== undefined) {
    contents.HostName = output["HostName"];
  }

  if (output["HttpRedirectCode"] !== undefined) {
    contents.HttpRedirectCode = output["HttpRedirectCode"];
  }

  if (output["Protocol"] !== undefined) {
    contents.Protocol = output["Protocol"];
  }

  if (output["ReplaceKeyPrefixWith"] !== undefined) {
    contents.ReplaceKeyPrefixWith = output["ReplaceKeyPrefixWith"];
  }

  if (output["ReplaceKeyWith"] !== undefined) {
    contents.ReplaceKeyWith = output["ReplaceKeyWith"];
  }

  return contents;
};

var deserializeAws_restXmlRedirectAllRequestsTo = function deserializeAws_restXmlRedirectAllRequestsTo(output, context) {
  var contents = {
    HostName: undefined,
    Protocol: undefined
  };

  if (output["HostName"] !== undefined) {
    contents.HostName = output["HostName"];
  }

  if (output["Protocol"] !== undefined) {
    contents.Protocol = output["Protocol"];
  }

  return contents;
};

var deserializeAws_restXmlReplicaModifications = function deserializeAws_restXmlReplicaModifications(output, context) {
  var contents = {
    Status: undefined
  };

  if (output["Status"] !== undefined) {
    contents.Status = output["Status"];
  }

  return contents;
};

var deserializeAws_restXmlReplicationConfiguration = function deserializeAws_restXmlReplicationConfiguration(output, context) {
  var contents = {
    Role: undefined,
    Rules: undefined
  };

  if (output["Role"] !== undefined) {
    contents.Role = output["Role"];
  }

  if (output.Rule === "") {
    contents.Rules = [];
  }

  if (output["Rule"] !== undefined) {
    contents.Rules = deserializeAws_restXmlReplicationRules((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Rule"]), context);
  }

  return contents;
};

var deserializeAws_restXmlReplicationRule = function deserializeAws_restXmlReplicationRule(output, context) {
  var contents = {
    ID: undefined,
    Priority: undefined,
    Prefix: undefined,
    Filter: undefined,
    Status: undefined,
    SourceSelectionCriteria: undefined,
    ExistingObjectReplication: undefined,
    Destination: undefined,
    DeleteMarkerReplication: undefined
  };

  if (output["ID"] !== undefined) {
    contents.ID = output["ID"];
  }

  if (output["Priority"] !== undefined) {
    contents.Priority = parseInt(output["Priority"]);
  }

  if (output["Prefix"] !== undefined) {
    contents.Prefix = output["Prefix"];
  }

  if (output["Filter"] !== undefined) {
    contents.Filter = deserializeAws_restXmlReplicationRuleFilter(output["Filter"], context);
  }

  if (output["Status"] !== undefined) {
    contents.Status = output["Status"];
  }

  if (output["SourceSelectionCriteria"] !== undefined) {
    contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output["SourceSelectionCriteria"], context);
  }

  if (output["ExistingObjectReplication"] !== undefined) {
    contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output["ExistingObjectReplication"], context);
  }

  if (output["Destination"] !== undefined) {
    contents.Destination = deserializeAws_restXmlDestination(output["Destination"], context);
  }

  if (output["DeleteMarkerReplication"] !== undefined) {
    contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output["DeleteMarkerReplication"], context);
  }

  return contents;
};

var deserializeAws_restXmlReplicationRuleAndOperator = function deserializeAws_restXmlReplicationRuleAndOperator(output, context) {
  var contents = {
    Prefix: undefined,
    Tags: undefined
  };

  if (output["Prefix"] !== undefined) {
    contents.Prefix = output["Prefix"];
  }

  if (output.Tag === "") {
    contents.Tags = [];
  }

  if (output["Tag"] !== undefined) {
    contents.Tags = deserializeAws_restXmlTagSet((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Tag"]), context);
  }

  return contents;
};

var deserializeAws_restXmlReplicationRuleFilter = function deserializeAws_restXmlReplicationRuleFilter(output, context) {
  if (output["Prefix"] !== undefined) {
    return {
      Prefix: output["Prefix"]
    };
  }

  if (output["Tag"] !== undefined) {
    return {
      Tag: deserializeAws_restXmlTag(output["Tag"], context)
    };
  }

  if (output["And"] !== undefined) {
    return {
      And: deserializeAws_restXmlReplicationRuleAndOperator(output["And"], context)
    };
  }

  return {
    $unknown: Object.entries(output)[0]
  };
};

var deserializeAws_restXmlReplicationRules = function deserializeAws_restXmlReplicationRules(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlReplicationRule(entry, context);
  });
};

var deserializeAws_restXmlReplicationTime = function deserializeAws_restXmlReplicationTime(output, context) {
  var contents = {
    Status: undefined,
    Time: undefined
  };

  if (output["Status"] !== undefined) {
    contents.Status = output["Status"];
  }

  if (output["Time"] !== undefined) {
    contents.Time = deserializeAws_restXmlReplicationTimeValue(output["Time"], context);
  }

  return contents;
};

var deserializeAws_restXmlReplicationTimeValue = function deserializeAws_restXmlReplicationTimeValue(output, context) {
  var contents = {
    Minutes: undefined
  };

  if (output["Minutes"] !== undefined) {
    contents.Minutes = parseInt(output["Minutes"]);
  }

  return contents;
};

var deserializeAws_restXmlRoutingRule = function deserializeAws_restXmlRoutingRule(output, context) {
  var contents = {
    Condition: undefined,
    Redirect: undefined
  };

  if (output["Condition"] !== undefined) {
    contents.Condition = deserializeAws_restXmlCondition(output["Condition"], context);
  }

  if (output["Redirect"] !== undefined) {
    contents.Redirect = deserializeAws_restXmlRedirect(output["Redirect"], context);
  }

  return contents;
};

var deserializeAws_restXmlRoutingRules = function deserializeAws_restXmlRoutingRules(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlRoutingRule(entry, context);
  });
};

var deserializeAws_restXmlS3KeyFilter = function deserializeAws_restXmlS3KeyFilter(output, context) {
  var contents = {
    FilterRules: undefined
  };

  if (output.FilterRule === "") {
    contents.FilterRules = [];
  }

  if (output["FilterRule"] !== undefined) {
    contents.FilterRules = deserializeAws_restXmlFilterRuleList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["FilterRule"]), context);
  }

  return contents;
};

var deserializeAws_restXmlServerSideEncryptionByDefault = function deserializeAws_restXmlServerSideEncryptionByDefault(output, context) {
  var contents = {
    SSEAlgorithm: undefined,
    KMSMasterKeyID: undefined
  };

  if (output["SSEAlgorithm"] !== undefined) {
    contents.SSEAlgorithm = output["SSEAlgorithm"];
  }

  if (output["KMSMasterKeyID"] !== undefined) {
    contents.KMSMasterKeyID = output["KMSMasterKeyID"];
  }

  return contents;
};

var deserializeAws_restXmlServerSideEncryptionConfiguration = function deserializeAws_restXmlServerSideEncryptionConfiguration(output, context) {
  var contents = {
    Rules: undefined
  };

  if (output.Rule === "") {
    contents.Rules = [];
  }

  if (output["Rule"] !== undefined) {
    contents.Rules = deserializeAws_restXmlServerSideEncryptionRules((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Rule"]), context);
  }

  return contents;
};

var deserializeAws_restXmlServerSideEncryptionRule = function deserializeAws_restXmlServerSideEncryptionRule(output, context) {
  var contents = {
    ApplyServerSideEncryptionByDefault: undefined,
    BucketKeyEnabled: undefined
  };

  if (output["ApplyServerSideEncryptionByDefault"] !== undefined) {
    contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output["ApplyServerSideEncryptionByDefault"], context);
  }

  if (output["BucketKeyEnabled"] !== undefined) {
    contents.BucketKeyEnabled = output["BucketKeyEnabled"] == "true";
  }

  return contents;
};

var deserializeAws_restXmlServerSideEncryptionRules = function deserializeAws_restXmlServerSideEncryptionRules(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlServerSideEncryptionRule(entry, context);
  });
};

var deserializeAws_restXmlSourceSelectionCriteria = function deserializeAws_restXmlSourceSelectionCriteria(output, context) {
  var contents = {
    SseKmsEncryptedObjects: undefined,
    ReplicaModifications: undefined
  };

  if (output["SseKmsEncryptedObjects"] !== undefined) {
    contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output["SseKmsEncryptedObjects"], context);
  }

  if (output["ReplicaModifications"] !== undefined) {
    contents.ReplicaModifications = deserializeAws_restXmlReplicaModifications(output["ReplicaModifications"], context);
  }

  return contents;
};

var deserializeAws_restXmlSSEKMS = function deserializeAws_restXmlSSEKMS(output, context) {
  var contents = {
    KeyId: undefined
  };

  if (output["KeyId"] !== undefined) {
    contents.KeyId = output["KeyId"];
  }

  return contents;
};

var deserializeAws_restXmlSseKmsEncryptedObjects = function deserializeAws_restXmlSseKmsEncryptedObjects(output, context) {
  var contents = {
    Status: undefined
  };

  if (output["Status"] !== undefined) {
    contents.Status = output["Status"];
  }

  return contents;
};

var deserializeAws_restXmlSSES3 = function deserializeAws_restXmlSSES3(output, context) {
  var contents = {};
  return contents;
};

var deserializeAws_restXmlStorageClassAnalysis = function deserializeAws_restXmlStorageClassAnalysis(output, context) {
  var contents = {
    DataExport: undefined
  };

  if (output["DataExport"] !== undefined) {
    contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output["DataExport"], context);
  }

  return contents;
};

var deserializeAws_restXmlStorageClassAnalysisDataExport = function deserializeAws_restXmlStorageClassAnalysisDataExport(output, context) {
  var contents = {
    OutputSchemaVersion: undefined,
    Destination: undefined
  };

  if (output["OutputSchemaVersion"] !== undefined) {
    contents.OutputSchemaVersion = output["OutputSchemaVersion"];
  }

  if (output["Destination"] !== undefined) {
    contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output["Destination"], context);
  }

  return contents;
};

var deserializeAws_restXmlTag = function deserializeAws_restXmlTag(output, context) {
  var contents = {
    Key: undefined,
    Value: undefined
  };

  if (output["Key"] !== undefined) {
    contents.Key = output["Key"];
  }

  if (output["Value"] !== undefined) {
    contents.Value = output["Value"];
  }

  return contents;
};

var deserializeAws_restXmlTagSet = function deserializeAws_restXmlTagSet(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlTag(entry, context);
  });
};

var deserializeAws_restXmlTargetGrant = function deserializeAws_restXmlTargetGrant(output, context) {
  var contents = {
    Grantee: undefined,
    Permission: undefined
  };

  if (output["Grantee"] !== undefined) {
    contents.Grantee = deserializeAws_restXmlGrantee(output["Grantee"], context);
  }

  if (output["Permission"] !== undefined) {
    contents.Permission = output["Permission"];
  }

  return contents;
};

var deserializeAws_restXmlTargetGrants = function deserializeAws_restXmlTargetGrants(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlTargetGrant(entry, context);
  });
};

var deserializeAws_restXmlTiering = function deserializeAws_restXmlTiering(output, context) {
  var contents = {
    Days: undefined,
    AccessTier: undefined
  };

  if (output["Days"] !== undefined) {
    contents.Days = parseInt(output["Days"]);
  }

  if (output["AccessTier"] !== undefined) {
    contents.AccessTier = output["AccessTier"];
  }

  return contents;
};

var deserializeAws_restXmlTieringList = function deserializeAws_restXmlTieringList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlTiering(entry, context);
  });
};

var deserializeAws_restXmlTopicConfiguration = function deserializeAws_restXmlTopicConfiguration(output, context) {
  var contents = {
    Id: undefined,
    TopicArn: undefined,
    Events: undefined,
    Filter: undefined
  };

  if (output["Id"] !== undefined) {
    contents.Id = output["Id"];
  }

  if (output["Topic"] !== undefined) {
    contents.TopicArn = output["Topic"];
  }

  if (output.Event === "") {
    contents.Events = [];
  }

  if (output["Event"] !== undefined) {
    contents.Events = deserializeAws_restXmlEventList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Event"]), context);
  }

  if (output["Filter"] !== undefined) {
    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output["Filter"], context);
  }

  return contents;
};

var deserializeAws_restXmlTopicConfigurationList = function deserializeAws_restXmlTopicConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlTopicConfiguration(entry, context);
  });
};

var deserializeAws_restXmlTransition = function deserializeAws_restXmlTransition(output, context) {
  var contents = {
    Date: undefined,
    Days: undefined,
    StorageClass: undefined
  };

  if (output["Date"] !== undefined) {
    contents.Date = new Date(output["Date"]);
  }

  if (output["Days"] !== undefined) {
    contents.Days = parseInt(output["Days"]);
  }

  if (output["StorageClass"] !== undefined) {
    contents.StorageClass = output["StorageClass"];
  }

  return contents;
};

var deserializeAws_restXmlTransitionList = function deserializeAws_restXmlTransitionList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    if (entry === null) {
      return null;
    }

    return deserializeAws_restXmlTransition(entry, context);
  });
};

var deserializeMetadata = function deserializeMetadata(output) {
  var _a;

  return {
    httpStatusCode: output.statusCode,
    requestId: (_a = output.headers["x-amzn-requestid"]) !== null && _a !== void 0 ? _a : output.headers["x-amzn-request-id"],
    extendedRequestId: output.headers["x-amz-id-2"],
    cfId: output.headers["x-amz-cf-id"]
  };
}; // Collect low-level response body stream to Uint8Array.


var collectBody = function collectBody(streamBody, context) {
  if (streamBody === void 0) {
    streamBody = new Uint8Array();
  }

  if (streamBody instanceof Uint8Array) {
    return Promise.resolve(streamBody);
  }

  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());
}; // Encode Uint8Array data into string with utf-8.


var collectBodyString = function collectBodyString(streamBody, context) {
  return collectBody(streamBody, context).then(function (body) {
    return context.utf8Encoder(body);
  });
};

var isSerializableHeaderValue = function isSerializableHeaderValue(value) {
  return value !== undefined && value !== null && value !== "" && (!Object.getOwnPropertyNames(value).includes("length") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes("size") || value.size != 0);
};

var decodeEscapedXML = function decodeEscapedXML(str) {
  return str.replace(/&amp;/g, "&").replace(/&apos;/g, "'").replace(/&quot;/g, '"').replace(/&gt;/g, ">").replace(/&lt;/g, "<");
};

var parseBody = function parseBody(streamBody, context) {
  return collectBodyString(streamBody, context).then(function (encoded) {
    if (encoded.length) {
      var parsedObj = (0,fast_xml_parser__WEBPACK_IMPORTED_MODULE_3__.parse)(encoded, {
        attributeNamePrefix: "",
        ignoreAttributes: false,
        parseNodeValue: false,
        tagValueProcessor: function tagValueProcessor(val, tagName) {
          return decodeEscapedXML(val);
        }
      });
      var textNodeName = "#text";
      var key = Object.keys(parsedObj)[0];
      var parsedObjToReturn = parsedObj[key];

      if (parsedObjToReturn[textNodeName]) {
        parsedObjToReturn[key] = parsedObjToReturn[textNodeName];
        delete parsedObjToReturn[textNodeName];
      }

      return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getValueFromTextNode)(parsedObjToReturn);
    }

    return {};
  });
};

var loadRestXmlErrorCode = function loadRestXmlErrorCode(output, data) {
  if (data.Code !== undefined) {
    return data.Code;
  }

  if (output.statusCode == 404) {
    return "NotFound";
  }

  return "";
};

/***/ }),

/***/ 11572:
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/runtimeConfig.browser.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClientDefaultValues": function() { return /* binding */ ClientDefaultValues; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./package.json */ 46122);
/* harmony import */ var _aws_crypto_sha256_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-crypto/sha256-browser */ 48464);
/* harmony import */ var _aws_crypto_sha256_browser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_crypto_sha256_browser__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _aws_sdk_eventstream_serde_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/eventstream-serde-browser */ 11911);
/* harmony import */ var _aws_sdk_fetch_http_handler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/fetch-http-handler */ 16423);
/* harmony import */ var _aws_sdk_hash_blob_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/hash-blob-browser */ 22026);
/* harmony import */ var _aws_sdk_invalid_dependency__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/invalid-dependency */ 3015);
/* harmony import */ var _aws_sdk_md5_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/md5-js */ 20723);
/* harmony import */ var _aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-sdk/middleware-retry */ 9485);
/* harmony import */ var _aws_sdk_util_base64_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/util-base64-browser */ 80149);
/* harmony import */ var _aws_sdk_util_body_length_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aws-sdk/util-body-length-browser */ 88920);
/* harmony import */ var _aws_sdk_util_user_agent_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @aws-sdk/util-user-agent-browser */ 94190);
/* harmony import */ var _aws_sdk_util_utf8_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @aws-sdk/util-utf8-browser */ 89937);
/* harmony import */ var _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./runtimeConfig.shared */ 58023);














/**
 * @internal
 */

var ClientDefaultValues = (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_11__.__assign)({}, _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_12__.ClientSharedValues), {
  runtime: "browser",
  base64Decoder: _aws_sdk_util_base64_browser__WEBPACK_IMPORTED_MODULE_7__.fromBase64,
  base64Encoder: _aws_sdk_util_base64_browser__WEBPACK_IMPORTED_MODULE_7__.toBase64,
  bodyLengthChecker: _aws_sdk_util_body_length_browser__WEBPACK_IMPORTED_MODULE_8__.calculateBodyLength,
  credentialDefaultProvider: function credentialDefaultProvider(_) {
    return function () {
      return Promise.reject(new Error("Credential is missing"));
    };
  },
  defaultUserAgentProvider: (0,_aws_sdk_util_user_agent_browser__WEBPACK_IMPORTED_MODULE_9__.defaultUserAgent)({
    serviceId: _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_12__.ClientSharedValues.serviceId,
    clientVersion: _package_json__WEBPACK_IMPORTED_MODULE_13__.version
  }),
  eventStreamSerdeProvider: _aws_sdk_eventstream_serde_browser__WEBPACK_IMPORTED_MODULE_1__.eventStreamSerdeProvider,
  maxAttempts: _aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_MAX_ATTEMPTS,
  md5: _aws_sdk_md5_js__WEBPACK_IMPORTED_MODULE_5__.Md5,
  region: (0,_aws_sdk_invalid_dependency__WEBPACK_IMPORTED_MODULE_4__.invalidProvider)("Region is missing"),
  requestHandler: new _aws_sdk_fetch_http_handler__WEBPACK_IMPORTED_MODULE_2__.FetchHttpHandler(),
  sha256: _aws_crypto_sha256_browser__WEBPACK_IMPORTED_MODULE_0__.Sha256,
  streamCollector: _aws_sdk_fetch_http_handler__WEBPACK_IMPORTED_MODULE_2__.streamCollector,
  streamHasher: _aws_sdk_hash_blob_browser__WEBPACK_IMPORTED_MODULE_3__.blobHasher,
  utf8Decoder: _aws_sdk_util_utf8_browser__WEBPACK_IMPORTED_MODULE_10__.fromUtf8,
  utf8Encoder: _aws_sdk_util_utf8_browser__WEBPACK_IMPORTED_MODULE_10__.toUtf8
});

/***/ }),

/***/ 58023:
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/runtimeConfig.shared.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClientSharedValues": function() { return /* binding */ ClientSharedValues; }
/* harmony export */ });
/* harmony import */ var _endpoints__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./endpoints */ 81084);
/* harmony import */ var _aws_sdk_url_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/url-parser */ 82779);


/**
 * @internal
 */

var ClientSharedValues = {
  apiVersion: "2006-03-01",
  disableHostPrefix: false,
  logger: {},
  regionInfoProvider: _endpoints__WEBPACK_IMPORTED_MODULE_1__.defaultRegionInfoProvider,
  serviceId: "S3",
  signingEscapePath: false,
  urlParser: _aws_sdk_url_parser__WEBPACK_IMPORTED_MODULE_0__.parseUrl,
  useArnRegion: false
};

/***/ }),

/***/ 89937:
/*!**********************************!*\
  !*** @aws-sdk/util-utf8-browser ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": function() { return /* binding */ fromUtf8; },
/* harmony export */   "toUtf8": function() { return /* binding */ toUtf8; }
/* harmony export */ });
/* harmony import */ var _pureJs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pureJs */ 91559);
/* harmony import */ var _whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./whatwgEncodingApi */ 74892);


var fromUtf8 = function fromUtf8(input) {
  return typeof TextEncoder === "function" ? (0,_whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__.fromUtf8)(input) : (0,_pureJs__WEBPACK_IMPORTED_MODULE_0__.fromUtf8)(input);
};
var toUtf8 = function toUtf8(input) {
  return typeof TextDecoder === "function" ? (0,_whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__.toUtf8)(input) : (0,_pureJs__WEBPACK_IMPORTED_MODULE_0__.toUtf8)(input);
};

/***/ }),

/***/ 91559:
/*!****************!*\
  !*** ./pureJs ***!
  \****************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": function() { return /* binding */ fromUtf8; },
/* harmony export */   "toUtf8": function() { return /* binding */ toUtf8; }
/* harmony export */ });
/**
 * Converts a JS string from its native UCS-2/UTF-16 representation into a
 * Uint8Array of the bytes used to represent the equivalent characters in UTF-8.
 *
 * Cribbed from the `goog.crypt.stringToUtf8ByteArray` function in the Google
 * Closure library, though updated to use typed arrays.
 */
var fromUtf8 = function fromUtf8(input) {
  var bytes = [];

  for (var i = 0, len = input.length; i < len; i++) {
    var value = input.charCodeAt(i);

    if (value < 0x80) {
      bytes.push(value);
    } else if (value < 0x800) {
      bytes.push(value >> 6 | 192, value & 63 | 128);
    } else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
      var surrogatePair = 0x10000 + ((value & 1023) << 10) + (input.charCodeAt(++i) & 1023);
      bytes.push(surrogatePair >> 18 | 240, surrogatePair >> 12 & 63 | 128, surrogatePair >> 6 & 63 | 128, surrogatePair & 63 | 128);
    } else {
      bytes.push(value >> 12 | 224, value >> 6 & 63 | 128, value & 63 | 128);
    }
  }

  return Uint8Array.from(bytes);
};
/**
 * Converts a typed array of bytes containing UTF-8 data into a native JS
 * string.
 *
 * Partly cribbed from the `goog.crypt.utf8ByteArrayToString` function in the
 * Google Closure library, though updated to use typed arrays and to better
 * handle astral plane code points.
 */

var toUtf8 = function toUtf8(input) {
  var decoded = "";

  for (var i = 0, len = input.length; i < len; i++) {
    var byte = input[i];

    if (byte < 0x80) {
      decoded += String.fromCharCode(byte);
    } else if (192 <= byte && byte < 224) {
      var nextByte = input[++i];
      decoded += String.fromCharCode((byte & 31) << 6 | nextByte & 63);
    } else if (240 <= byte && byte < 365) {
      var surrogatePair = [byte, input[++i], input[++i], input[++i]];
      var encoded = "%" + surrogatePair.map(function (byteValue) {
        return byteValue.toString(16);
      }).join("%");
      decoded += decodeURIComponent(encoded);
    } else {
      decoded += String.fromCharCode((byte & 15) << 12 | (input[++i] & 63) << 6 | input[++i] & 63);
    }
  }

  return decoded;
};

/***/ }),

/***/ 74892:
/*!***************************!*\
  !*** ./whatwgEncodingApi ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": function() { return /* binding */ fromUtf8; },
/* harmony export */   "toUtf8": function() { return /* binding */ toUtf8; }
/* harmony export */ });
function fromUtf8(input) {
  return new TextEncoder().encode(input);
}
function toUtf8(input) {
  return new TextDecoder("utf-8").decode(input);
}

/***/ }),

/***/ 74860:
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-marshaller/dist/es/EventStreamMarshaller.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventStreamMarshaller": function() { return /* binding */ EventStreamMarshaller; }
/* harmony export */ });
/* harmony import */ var _aws_crypto_crc32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-crypto/crc32 */ 25926);
/* harmony import */ var _HeaderMarshaller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./HeaderMarshaller */ 43455);
/* harmony import */ var _splitMessage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./splitMessage */ 89654);



/**
 * A marshaller that can convert binary-packed event stream messages into
 * JavaScript objects and back again into their binary format.
 */

var EventStreamMarshaller = function () {
  function EventStreamMarshaller(toUtf8, fromUtf8) {
    this.headerMarshaller = new _HeaderMarshaller__WEBPACK_IMPORTED_MODULE_1__.HeaderMarshaller(toUtf8, fromUtf8);
  }
  /**
   * Convert a structured JavaScript object with tagged headers into a binary
   * event stream message.
   */


  EventStreamMarshaller.prototype.marshall = function (_a) {
    var rawHeaders = _a.headers,
        body = _a.body;
    var headers = this.headerMarshaller.format(rawHeaders);
    var length = headers.byteLength + body.byteLength + 16;
    var out = new Uint8Array(length);
    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
    var checksum = new _aws_crypto_crc32__WEBPACK_IMPORTED_MODULE_0__.Crc32(); // Format message

    view.setUint32(0, length, false);
    view.setUint32(4, headers.byteLength, false);
    view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);
    out.set(headers, 12);
    out.set(body, headers.byteLength + 12); // Write trailing message checksum

    view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);
    return out;
  };
  /**
   * Convert a binary event stream message into a JavaScript object with an
   * opaque, binary body and tagged, parsed headers.
   */


  EventStreamMarshaller.prototype.unmarshall = function (message) {
    var _a = (0,_splitMessage__WEBPACK_IMPORTED_MODULE_2__.splitMessage)(message),
        headers = _a.headers,
        body = _a.body;

    return {
      headers: this.headerMarshaller.parse(headers),
      body: body
    };
  };
  /**
   * Convert a structured JavaScript object with tagged headers into a binary
   * event stream message header.
   */


  EventStreamMarshaller.prototype.formatHeaders = function (rawHeaders) {
    return this.headerMarshaller.format(rawHeaders);
  };

  return EventStreamMarshaller;
}();



/***/ }),

/***/ 43455:
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-marshaller/dist/es/HeaderMarshaller.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeaderMarshaller": function() { return /* binding */ HeaderMarshaller; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 6389);
/* harmony import */ var _aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-hex-encoding */ 57963);
/* harmony import */ var _Int64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Int64 */ 48364);



/**
 * @internal
 */

var HeaderMarshaller = function () {
  function HeaderMarshaller(toUtf8, fromUtf8) {
    this.toUtf8 = toUtf8;
    this.fromUtf8 = fromUtf8;
  }

  HeaderMarshaller.prototype.format = function (headers) {
    var e_1, _a, e_2, _b;

    var chunks = [];

    try {
      for (var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__values)(Object.keys(headers)), _d = _c.next(); !_d.done; _d = _c.next()) {
        var headerName = _d.value;
        var bytes = this.fromUtf8(headerName);
        chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    var out = new Uint8Array(chunks.reduce(function (carry, bytes) {
      return carry + bytes.byteLength;
    }, 0));
    var position = 0;

    try {
      for (var chunks_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__values)(chunks), chunks_1_1 = chunks_1.next(); !chunks_1_1.done; chunks_1_1 = chunks_1.next()) {
        var chunk = chunks_1_1.value;
        out.set(chunk, position);
        position += chunk.byteLength;
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (chunks_1_1 && !chunks_1_1.done && (_b = chunks_1.return)) _b.call(chunks_1);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    return out;
  };

  HeaderMarshaller.prototype.formatHeaderValue = function (header) {
    switch (header.type) {
      case "boolean":
        return Uint8Array.from([header.value ? 0
        /* boolTrue */
        : 1
        /* boolFalse */
        ]);

      case "byte":
        return Uint8Array.from([2
        /* byte */
        , header.value]);

      case "short":
        var shortView = new DataView(new ArrayBuffer(3));
        shortView.setUint8(0, 3
        /* short */
        );
        shortView.setInt16(1, header.value, false);
        return new Uint8Array(shortView.buffer);

      case "integer":
        var intView = new DataView(new ArrayBuffer(5));
        intView.setUint8(0, 4
        /* integer */
        );
        intView.setInt32(1, header.value, false);
        return new Uint8Array(intView.buffer);

      case "long":
        var longBytes = new Uint8Array(9);
        longBytes[0] = 5
        /* long */
        ;
        longBytes.set(header.value.bytes, 1);
        return longBytes;

      case "binary":
        var binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));
        binView.setUint8(0, 6
        /* byteArray */
        );
        binView.setUint16(1, header.value.byteLength, false);
        var binBytes = new Uint8Array(binView.buffer);
        binBytes.set(header.value, 3);
        return binBytes;

      case "string":
        var utf8Bytes = this.fromUtf8(header.value);
        var strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));
        strView.setUint8(0, 7
        /* string */
        );
        strView.setUint16(1, utf8Bytes.byteLength, false);
        var strBytes = new Uint8Array(strView.buffer);
        strBytes.set(utf8Bytes, 3);
        return strBytes;

      case "timestamp":
        var tsBytes = new Uint8Array(9);
        tsBytes[0] = 8
        /* timestamp */
        ;
        tsBytes.set(_Int64__WEBPACK_IMPORTED_MODULE_1__.Int64.fromNumber(header.value.valueOf()).bytes, 1);
        return tsBytes;

      case "uuid":
        if (!UUID_PATTERN.test(header.value)) {
          throw new Error("Invalid UUID received: " + header.value);
        }

        var uuidBytes = new Uint8Array(17);
        uuidBytes[0] = 9
        /* uuid */
        ;
        uuidBytes.set((0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.fromHex)(header.value.replace(/\-/g, "")), 1);
        return uuidBytes;
    }
  };

  HeaderMarshaller.prototype.parse = function (headers) {
    var out = {};
    var position = 0;

    while (position < headers.byteLength) {
      var nameLength = headers.getUint8(position++);
      var name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));
      position += nameLength;

      switch (headers.getUint8(position++)) {
        case 0
        /* boolTrue */
        :
          out[name] = {
            type: BOOLEAN_TAG,
            value: true
          };
          break;

        case 1
        /* boolFalse */
        :
          out[name] = {
            type: BOOLEAN_TAG,
            value: false
          };
          break;

        case 2
        /* byte */
        :
          out[name] = {
            type: BYTE_TAG,
            value: headers.getInt8(position++)
          };
          break;

        case 3
        /* short */
        :
          out[name] = {
            type: SHORT_TAG,
            value: headers.getInt16(position, false)
          };
          position += 2;
          break;

        case 4
        /* integer */
        :
          out[name] = {
            type: INT_TAG,
            value: headers.getInt32(position, false)
          };
          position += 4;
          break;

        case 5
        /* long */
        :
          out[name] = {
            type: LONG_TAG,
            value: new _Int64__WEBPACK_IMPORTED_MODULE_1__.Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8))
          };
          position += 8;
          break;

        case 6
        /* byteArray */
        :
          var binaryLength = headers.getUint16(position, false);
          position += 2;
          out[name] = {
            type: BINARY_TAG,
            value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength)
          };
          position += binaryLength;
          break;

        case 7
        /* string */
        :
          var stringLength = headers.getUint16(position, false);
          position += 2;
          out[name] = {
            type: STRING_TAG,
            value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength))
          };
          position += stringLength;
          break;

        case 8
        /* timestamp */
        :
          out[name] = {
            type: TIMESTAMP_TAG,
            value: new Date(new _Int64__WEBPACK_IMPORTED_MODULE_1__.Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf())
          };
          position += 8;
          break;

        case 9
        /* uuid */
        :
          var uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);
          position += 16;
          out[name] = {
            type: UUID_TAG,
            value: (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(uuidBytes.subarray(0, 4)) + "-" + (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(uuidBytes.subarray(4, 6)) + "-" + (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(uuidBytes.subarray(6, 8)) + "-" + (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(uuidBytes.subarray(8, 10)) + "-" + (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(uuidBytes.subarray(10))
          };
          break;

        default:
          throw new Error("Unrecognized header type tag");
      }
    }

    return out;
  };

  return HeaderMarshaller;
}();


var HEADER_VALUE_TYPE;

(function (HEADER_VALUE_TYPE) {
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["boolTrue"] = 0] = "boolTrue";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["boolFalse"] = 1] = "boolFalse";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["byte"] = 2] = "byte";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["short"] = 3] = "short";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["integer"] = 4] = "integer";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["long"] = 5] = "long";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["byteArray"] = 6] = "byteArray";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["string"] = 7] = "string";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["timestamp"] = 8] = "timestamp";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["uuid"] = 9] = "uuid";
})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));

var BOOLEAN_TAG = "boolean";
var BYTE_TAG = "byte";
var SHORT_TAG = "short";
var INT_TAG = "integer";
var LONG_TAG = "long";
var BINARY_TAG = "binary";
var STRING_TAG = "string";
var TIMESTAMP_TAG = "timestamp";
var UUID_TAG = "uuid";
var UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;

/***/ }),

/***/ 48364:
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-marshaller/dist/es/Int64.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Int64": function() { return /* binding */ Int64; }
/* harmony export */ });
/* harmony import */ var _aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-hex-encoding */ 57963);

/**
 * A lossless representation of a signed, 64-bit integer. Instances of this
 * class may be used in arithmetic expressions as if they were numeric
 * primitives, but the binary representation will be preserved unchanged as the
 * `bytes` property of the object. The bytes should be encoded as big-endian,
 * two's complement integers.
 */

var Int64 = function () {
  function Int64(bytes) {
    this.bytes = bytes;

    if (bytes.byteLength !== 8) {
      throw new Error("Int64 buffers must be exactly 8 bytes");
    }
  }

  Int64.fromNumber = function (number) {
    if (number > 9223372036854775807 || number < -9223372036854775808) {
      throw new Error(number + " is too large (or, if negative, too small) to represent as an Int64");
    }

    var bytes = new Uint8Array(8);

    for (var i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {
      bytes[i] = remaining;
    }

    if (number < 0) {
      negate(bytes);
    }

    return new Int64(bytes);
  };
  /**
   * Called implicitly by infix arithmetic operators.
   */


  Int64.prototype.valueOf = function () {
    var bytes = this.bytes.slice(0);
    var negative = bytes[0] & 128;

    if (negative) {
      negate(bytes);
    }

    return parseInt((0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(bytes), 16) * (negative ? -1 : 1);
  };

  Int64.prototype.toString = function () {
    return String(this.valueOf());
  };

  return Int64;
}();



function negate(bytes) {
  for (var i = 0; i < 8; i++) {
    bytes[i] ^= 0xff;
  }

  for (var i = 7; i > -1; i--) {
    bytes[i]++;
    if (bytes[i] !== 0) break;
  }
}

/***/ }),

/***/ 8683:
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-marshaller/dist/es/Message.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ 87799:
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-marshaller/dist/es/index.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventStreamMarshaller": function() { return /* reexport safe */ _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_0__.EventStreamMarshaller; },
/* harmony export */   "Int64": function() { return /* reexport safe */ _Int64__WEBPACK_IMPORTED_MODULE_1__.Int64; }
/* harmony export */ });
/* harmony import */ var _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventStreamMarshaller */ 74860);
/* harmony import */ var _Int64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Int64 */ 48364);
/* harmony import */ var _Message__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Message */ 8683);




/***/ }),

/***/ 89654:
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-marshaller/dist/es/splitMessage.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "splitMessage": function() { return /* binding */ splitMessage; }
/* harmony export */ });
/* harmony import */ var _aws_crypto_crc32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-crypto/crc32 */ 25926);
 // All prelude components are unsigned, 32-bit integers

var PRELUDE_MEMBER_LENGTH = 4; // The prelude consists of two components

var PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2; // Checksums are always CRC32 hashes.

var CHECKSUM_LENGTH = 4; // Messages must include a full prelude, a prelude checksum, and a message checksum

var MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;
/**
 * @internal
 */

function splitMessage(_a) {
  var byteLength = _a.byteLength,
      byteOffset = _a.byteOffset,
      buffer = _a.buffer;

  if (byteLength < MINIMUM_MESSAGE_LENGTH) {
    throw new Error("Provided message too short to accommodate event stream message overhead");
  }

  var view = new DataView(buffer, byteOffset, byteLength);
  var messageLength = view.getUint32(0, false);

  if (byteLength !== messageLength) {
    throw new Error("Reported message length does not match received message length");
  }

  var headerLength = view.getUint32(PRELUDE_MEMBER_LENGTH, false);
  var expectedPreludeChecksum = view.getUint32(PRELUDE_LENGTH, false);
  var expectedMessageChecksum = view.getUint32(byteLength - CHECKSUM_LENGTH, false);
  var checksummer = new _aws_crypto_crc32__WEBPACK_IMPORTED_MODULE_0__.Crc32().update(new Uint8Array(buffer, byteOffset, PRELUDE_LENGTH));

  if (expectedPreludeChecksum !== checksummer.digest()) {
    throw new Error("The prelude checksum specified in the message (" + expectedPreludeChecksum + ") does not match the calculated CRC32 checksum (" + checksummer.digest() + ")");
  }

  checksummer.update(new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH, byteLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH)));

  if (expectedMessageChecksum !== checksummer.digest()) {
    throw new Error("The message checksum (" + checksummer.digest() + ") did not match the expected value of " + expectedMessageChecksum);
  }

  return {
    headers: new DataView(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH, headerLength),
    body: new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH + headerLength, messageLength - headerLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH + CHECKSUM_LENGTH))
  };
}

/***/ }),

/***/ 30400:
/*!******************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-browser/dist/es/EventStreamMarshaller.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventStreamMarshaller": function() { return /* binding */ EventStreamMarshaller; }
/* harmony export */ });
/* harmony import */ var _aws_sdk_eventstream_marshaller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/eventstream-marshaller */ 87799);
/* harmony import */ var _aws_sdk_eventstream_serde_universal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/eventstream-serde-universal */ 61916);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ 76799);



/**
 * Utility class used to serialize and deserialize event streams in
 * browsers and ReactNative.
 *
 * In browsers where ReadableStream API is available:
 * * deserialize from ReadableStream to an async iterable of output structure
 * * serialize from async iterable of input structure to ReadableStream
 * In ReactNative where only async iterable API is available:
 * * deserialize from async iterable of binaries to async iterable of output structure
 * * serialize from async iterable of input structure to async iterable of binaries
 *
 * We use ReadableStream API in browsers because of the consistency with other
 * streaming operations, where ReadableStream API is used to denote streaming data.
 * Whereas in ReactNative, ReadableStream API is not available, we use async iterable
 * for streaming data although it has lower throughput.
 */

var EventStreamMarshaller = function () {
  function EventStreamMarshaller(_a) {
    var utf8Encoder = _a.utf8Encoder,
        utf8Decoder = _a.utf8Decoder;
    this.eventMarshaller = new _aws_sdk_eventstream_marshaller__WEBPACK_IMPORTED_MODULE_0__.EventStreamMarshaller(utf8Encoder, utf8Decoder);
    this.universalMarshaller = new _aws_sdk_eventstream_serde_universal__WEBPACK_IMPORTED_MODULE_1__.EventStreamMarshaller({
      utf8Decoder: utf8Decoder,
      utf8Encoder: utf8Encoder
    });
  }

  EventStreamMarshaller.prototype.deserialize = function (body, deserializer) {
    var bodyIterable = isReadableStream(body) ? (0,_utils__WEBPACK_IMPORTED_MODULE_2__.readableStreamtoIterable)(body) : body;
    return this.universalMarshaller.deserialize(bodyIterable, deserializer);
  };
  /**
   * Generate a stream that serialize events into stream of binary chunks;
   *
   * Caveat is that streaming request payload doesn't work on browser with native
   * xhr or fetch handler currently because they don't support upload streaming.
   * reference:
   * * https://bugs.chromium.org/p/chromium/issues/detail?id=688906
   * * https://bugzilla.mozilla.org/show_bug.cgi?id=1387483
   *
   */


  EventStreamMarshaller.prototype.serialize = function (input, serializer) {
    var serialziedIterable = this.universalMarshaller.serialize(input, serializer);
    return typeof ReadableStream === "function" ? (0,_utils__WEBPACK_IMPORTED_MODULE_2__.iterableToReadableStream)(serialziedIterable) : serialziedIterable;
  };

  return EventStreamMarshaller;
}();



var isReadableStream = function isReadableStream(body) {
  return typeof ReadableStream === "function" && body instanceof ReadableStream;
};

/***/ }),

/***/ 11911:
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-browser/dist/es/index.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eventStreamSerdeProvider": function() { return /* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_0__.eventStreamSerdeProvider; },
/* harmony export */   "EventStreamMarshaller": function() { return /* reexport safe */ _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_1__.EventStreamMarshaller; },
/* harmony export */   "iterableToReadableStream": function() { return /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.iterableToReadableStream; },
/* harmony export */   "readableStreamtoIterable": function() { return /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.readableStreamtoIterable; }
/* harmony export */ });
/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider */ 16162);
/* harmony import */ var _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EventStreamMarshaller */ 30400);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ 76799);




/***/ }),

/***/ 16162:
/*!*****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-browser/dist/es/provider.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eventStreamSerdeProvider": function() { return /* binding */ eventStreamSerdeProvider; }
/* harmony export */ });
/* harmony import */ var _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventStreamMarshaller */ 30400);

/** browser event stream serde utils provider */

var eventStreamSerdeProvider = function eventStreamSerdeProvider(options) {
  return new _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_0__.EventStreamMarshaller(options);
};

/***/ }),

/***/ 76799:
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-browser/dist/es/utils.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "readableStreamtoIterable": function() { return /* binding */ readableStreamtoIterable; },
/* harmony export */   "iterableToReadableStream": function() { return /* binding */ iterableToReadableStream; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 54648);

/**
 * A util function converting ReadableStream into an async iterable.
 * Reference: https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate
 */

var readableStreamtoIterable = function readableStreamtoIterable(readableStream) {
  var _a;

  return _a = {}, _a[Symbol.asyncIterator] = function () {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__asyncGenerator)(this, arguments, function () {
      var reader, _a, done, value;

      return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_b) {
        switch (_b.label) {
          case 0:
            reader = readableStream.getReader();
            _b.label = 1;

          case 1:
            _b.trys.push([1,, 9, 10]);

            _b.label = 2;

          case 2:
            if (false) {}
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(reader.read())];

          case 3:
            _a = _b.sent(), done = _a.done, value = _a.value;
            if (!done) return [3
            /*break*/
            , 5];
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(void 0)];

          case 4:
            return [2
            /*return*/
            , _b.sent()];

          case 5:
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(value)];

          case 6:
            return [4
            /*yield*/
            , _b.sent()];

          case 7:
            _b.sent();

            return [3
            /*break*/
            , 2];

          case 8:
            return [3
            /*break*/
            , 10];

          case 9:
            reader.releaseLock();
            return [7
            /*endfinally*/
            ];

          case 10:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, _a;
};
/**
 * A util function converting async iterable to a ReadableStream.
 */

var iterableToReadableStream = function iterableToReadableStream(asyncIterable) {
  var iterator = asyncIterable[Symbol.asyncIterator]();
  return new ReadableStream({
    pull: function pull(controller) {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function () {
        var _a, done, value;

        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_b) {
          switch (_b.label) {
            case 0:
              return [4
              /*yield*/
              , iterator.next()];

            case 1:
              _a = _b.sent(), done = _a.done, value = _a.value;

              if (done) {
                return [2
                /*return*/
                , controller.close()];
              }

              controller.enqueue(value);
              return [2
              /*return*/
              ];
          }
        });
      });
    }
  });
};

/***/ }),

/***/ 85586:
/*!***************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-config-resolver/dist/es/EventStreamSerdeConfig.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "resolveEventStreamSerdeConfig": function() { return /* binding */ resolveEventStreamSerdeConfig; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 48583);

var resolveEventStreamSerdeConfig = function resolveEventStreamSerdeConfig(input) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, input), {
    eventStreamMarshaller: input.eventStreamSerdeProvider(input)
  });
};

/***/ }),

/***/ 66021:
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-config-resolver/dist/es/index.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "resolveEventStreamSerdeConfig": function() { return /* reexport safe */ _EventStreamSerdeConfig__WEBPACK_IMPORTED_MODULE_0__.resolveEventStreamSerdeConfig; }
/* harmony export */ });
/* harmony import */ var _EventStreamSerdeConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventStreamSerdeConfig */ 85586);


/***/ }),

/***/ 60998:
/*!********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-universal/dist/es/EventStreamMarshaller.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventStreamMarshaller": function() { return /* binding */ EventStreamMarshaller; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 38461);
/* harmony import */ var _aws_sdk_eventstream_marshaller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/eventstream-marshaller */ 87799);
/* harmony import */ var _getChunkedStream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getChunkedStream */ 89797);
/* harmony import */ var _getUnmarshalledStream__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getUnmarshalledStream */ 65167);





var EventStreamMarshaller = function () {
  function EventStreamMarshaller(_a) {
    var utf8Encoder = _a.utf8Encoder,
        utf8Decoder = _a.utf8Decoder;
    this.eventMarshaller = new _aws_sdk_eventstream_marshaller__WEBPACK_IMPORTED_MODULE_0__.EventStreamMarshaller(utf8Encoder, utf8Decoder);
    this.utfEncoder = utf8Encoder;
  }

  EventStreamMarshaller.prototype.deserialize = function (body, deserializer) {
    var chunkedStream = (0,_getChunkedStream__WEBPACK_IMPORTED_MODULE_1__.getChunkedStream)(body);
    var unmarshalledStream = (0,_getUnmarshalledStream__WEBPACK_IMPORTED_MODULE_2__.getUnmarshalledStream)(chunkedStream, {
      eventMarshaller: this.eventMarshaller,
      deserializer: deserializer,
      toUtf8: this.utfEncoder
    });
    return unmarshalledStream;
  };

  EventStreamMarshaller.prototype.serialize = function (input, serializer) {
    var _a; // eslint-disable-next-line @typescript-eslint/no-this-alias


    var self = this;

    var serializedIterator = function serializedIterator() {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncGenerator)(this, arguments, function () {
        var input_1, input_1_1, chunk, payloadBuf, e_1_1;

        var e_1, _a;

        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_b) {
          switch (_b.label) {
            case 0:
              _b.trys.push([0, 7, 8, 13]);

              input_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncValues)(input);
              _b.label = 1;

            case 1:
              return [4
              /*yield*/
              , (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(input_1.next())];

            case 2:
              if (!(input_1_1 = _b.sent(), !input_1_1.done)) return [3
              /*break*/
              , 6];
              chunk = input_1_1.value;
              payloadBuf = self.eventMarshaller.marshall(serializer(chunk));
              return [4
              /*yield*/
              , (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(payloadBuf)];

            case 3:
              return [4
              /*yield*/
              , _b.sent()];

            case 4:
              _b.sent();

              _b.label = 5;

            case 5:
              return [3
              /*break*/
              , 1];

            case 6:
              return [3
              /*break*/
              , 13];

            case 7:
              e_1_1 = _b.sent();
              e_1 = {
                error: e_1_1
              };
              return [3
              /*break*/
              , 13];

            case 8:
              _b.trys.push([8,, 11, 12]);

              if (!(input_1_1 && !input_1_1.done && (_a = input_1.return))) return [3
              /*break*/
              , 10];
              return [4
              /*yield*/
              , (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(_a.call(input_1))];

            case 9:
              _b.sent();

              _b.label = 10;

            case 10:
              return [3
              /*break*/
              , 12];

            case 11:
              if (e_1) throw e_1.error;
              return [7
              /*endfinally*/
              ];

            case 12:
              return [7
              /*endfinally*/
              ];

            case 13:
              return [4
              /*yield*/
              , (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(new Uint8Array(0))];

            case 14:
              // Ending frame
              return [4
              /*yield*/
              , _b.sent()];

            case 15:
              // Ending frame
              _b.sent();

              return [2
              /*return*/
              ];
          }
        });
      });
    };

    return _a = {}, _a[Symbol.asyncIterator] = serializedIterator, _a;
  };

  return EventStreamMarshaller;
}();



/***/ }),

/***/ 89797:
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-universal/dist/es/getChunkedStream.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getChunkedStream": function() { return /* binding */ getChunkedStream; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 38461);

function getChunkedStream(source) {
  var _a;

  var currentMessageTotalLength = 0;
  var currentMessagePendingLength = 0;
  var currentMessage = null;
  var messageLengthBuffer = null;

  var allocateMessage = function allocateMessage(size) {
    if (typeof size !== "number") {
      throw new Error("Attempted to allocate an event message where size was not a number: " + size);
    }

    currentMessageTotalLength = size;
    currentMessagePendingLength = 4;
    currentMessage = new Uint8Array(size);
    var currentMessageView = new DataView(currentMessage.buffer);
    currentMessageView.setUint32(0, size, false); //set big-endian Uint32 to 0~3 bytes
  };

  var iterator = function iterator() {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__asyncGenerator)(this, arguments, function () {
      var sourceIterator, _a, value, done, chunkLength, currentOffset, bytesRemaining, numBytesForTotal, numBytesToWrite;

      return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_b) {
        switch (_b.label) {
          case 0:
            sourceIterator = source[Symbol.asyncIterator]();
            _b.label = 1;

          case 1:
            if (false) {}
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(sourceIterator.next())];

          case 2:
            _a = _b.sent(), value = _a.value, done = _a.done;
            if (!done) return [3
            /*break*/
            , 10];
            if (!!currentMessageTotalLength) return [3
            /*break*/
            , 4];
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(void 0)];

          case 3:
            return [2
            /*return*/
            , _b.sent()];

          case 4:
            if (!(currentMessageTotalLength === currentMessagePendingLength)) return [3
            /*break*/
            , 7];
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(currentMessage)];

          case 5:
            return [4
            /*yield*/
            , _b.sent()];

          case 6:
            _b.sent();

            return [3
            /*break*/
            , 8];

          case 7:
            throw new Error("Truncated event message received.");

          case 8:
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(void 0)];

          case 9:
            return [2
            /*return*/
            , _b.sent()];

          case 10:
            chunkLength = value.length;
            currentOffset = 0;
            _b.label = 11;

          case 11:
            if (!(currentOffset < chunkLength)) return [3
            /*break*/
            , 15]; // create new message if necessary

            if (!currentMessage) {
              bytesRemaining = chunkLength - currentOffset; // prevent edge case where total length spans 2 chunks

              if (!messageLengthBuffer) {
                messageLengthBuffer = new Uint8Array(4);
              }

              numBytesForTotal = Math.min(4 - currentMessagePendingLength, // remaining bytes to fill the messageLengthBuffer
              bytesRemaining // bytes left in chunk
              );
              messageLengthBuffer.set( // @ts-ignore error TS2532: Object is possibly 'undefined' for value
              value.slice(currentOffset, currentOffset + numBytesForTotal), currentMessagePendingLength);
              currentMessagePendingLength += numBytesForTotal;
              currentOffset += numBytesForTotal;

              if (currentMessagePendingLength < 4) {
                // not enough information to create the current message
                return [3
                /*break*/
                , 15];
              }

              allocateMessage(new DataView(messageLengthBuffer.buffer).getUint32(0, false));
              messageLengthBuffer = null;
            }

            numBytesToWrite = Math.min(currentMessageTotalLength - currentMessagePendingLength, // number of bytes left to complete message
            chunkLength - currentOffset // number of bytes left in the original chunk
            );
            currentMessage.set( // @ts-ignore error TS2532: Object is possibly 'undefined' for value
            value.slice(currentOffset, currentOffset + numBytesToWrite), currentMessagePendingLength);
            currentMessagePendingLength += numBytesToWrite;
            currentOffset += numBytesToWrite;
            if (!(currentMessageTotalLength && currentMessageTotalLength === currentMessagePendingLength)) return [3
            /*break*/
            , 14];
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(currentMessage)];

          case 12:
            // push out the message
            return [4
            /*yield*/
            , _b.sent()];

          case 13:
            // push out the message
            _b.sent(); // cleanup


            currentMessage = null;
            currentMessageTotalLength = 0;
            currentMessagePendingLength = 0;
            _b.label = 14;

          case 14:
            return [3
            /*break*/
            , 11];

          case 15:
            return [3
            /*break*/
            , 1];

          case 16:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  return _a = {}, _a[Symbol.asyncIterator] = iterator, _a;
}

/***/ }),

/***/ 65167:
/*!********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-universal/dist/es/getUnmarshalledStream.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getUnmarshalledStream": function() { return /* binding */ getUnmarshalledStream; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 38461);

function getUnmarshalledStream(source, options) {
  var _a;

  return _a = {}, _a[Symbol.asyncIterator] = function () {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__asyncGenerator)(this, arguments, function () {
      var source_1, source_1_1, chunk, message, messageType, unmodeledError, code, exception, deserializedException, error, event, deserialized, e_1_1;

      var _a, _b;

      var e_1, _c;

      return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_d) {
        switch (_d.label) {
          case 0:
            _d.trys.push([0, 12, 13, 18]);

            source_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__asyncValues)(source);
            _d.label = 1;

          case 1:
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(source_1.next())];

          case 2:
            if (!(source_1_1 = _d.sent(), !source_1_1.done)) return [3
            /*break*/
            , 11];
            chunk = source_1_1.value;
            message = options.eventMarshaller.unmarshall(chunk);
            messageType = message.headers[":message-type"].value;
            if (!(messageType === "error")) return [3
            /*break*/
            , 3];
            unmodeledError = new Error(message.headers[":error-message"].value || "UnknownError");
            unmodeledError.name = message.headers[":error-code"].value;
            throw unmodeledError;

          case 3:
            if (!(messageType === "exception")) return [3
            /*break*/
            , 5];
            code = message.headers[":exception-type"].value;
            exception = (_a = {}, _a[code] = message, _a);
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(options.deserializer(exception))];

          case 4:
            deserializedException = _d.sent();

            if (deserializedException.$unknown) {
              error = new Error(options.toUtf8(message.body));
              error.name = code;
              throw error;
            }

            throw deserializedException[code];

          case 5:
            if (!(messageType === "event")) return [3
            /*break*/
            , 9];
            event = (_b = {}, _b[message.headers[":event-type"].value] = message, _b);
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(options.deserializer(event))];

          case 6:
            deserialized = _d.sent();
            if (deserialized.$unknown) return [3
            /*break*/
            , 10];
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(deserialized)];

          case 7:
            return [4
            /*yield*/
            , _d.sent()];

          case 8:
            _d.sent();

            return [3
            /*break*/
            , 10];

          case 9:
            throw Error("Unrecognizable event type: " + message.headers[":event-type"].value);

          case 10:
            return [3
            /*break*/
            , 1];

          case 11:
            return [3
            /*break*/
            , 18];

          case 12:
            e_1_1 = _d.sent();
            e_1 = {
              error: e_1_1
            };
            return [3
            /*break*/
            , 18];

          case 13:
            _d.trys.push([13,, 16, 17]);

            if (!(source_1_1 && !source_1_1.done && (_c = source_1.return))) return [3
            /*break*/
            , 15];
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(_c.call(source_1))];

          case 14:
            _d.sent();

            _d.label = 15;

          case 15:
            return [3
            /*break*/
            , 17];

          case 16:
            if (e_1) throw e_1.error;
            return [7
            /*endfinally*/
            ];

          case 17:
            return [7
            /*endfinally*/
            ];

          case 18:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, _a;
}

/***/ }),

/***/ 61916:
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-universal/dist/es/index.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eventStreamSerdeProvider": function() { return /* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_0__.eventStreamSerdeProvider; },
/* harmony export */   "EventStreamMarshaller": function() { return /* reexport safe */ _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_1__.EventStreamMarshaller; }
/* harmony export */ });
/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider */ 73316);
/* harmony import */ var _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EventStreamMarshaller */ 60998);



/***/ }),

/***/ 73316:
/*!*******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-universal/dist/es/provider.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eventStreamSerdeProvider": function() { return /* binding */ eventStreamSerdeProvider; }
/* harmony export */ });
/* harmony import */ var _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventStreamMarshaller */ 60998);

/** NodeJS event stream utils provider */

var eventStreamSerdeProvider = function eventStreamSerdeProvider(options) {
  return new _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_0__.EventStreamMarshaller(options);
};

/***/ }),

/***/ 22026:
/*!******************************************************************!*\
  !*** ./node_modules/@aws-sdk/hash-blob-browser/dist/es/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "blobHasher": function() { return /* binding */ blobHasher; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 825);
/* harmony import */ var _aws_sdk_chunked_blob_reader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/chunked-blob-reader */ 18057);


var blobHasher = function blobHasher(hashCtor, blob) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function () {
    var hash;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          hash = new hashCtor();
          return [4
          /*yield*/
          , (0,_aws_sdk_chunked_blob_reader__WEBPACK_IMPORTED_MODULE_0__.blobReader)(blob, function (chunk) {
            hash.update(chunk);
          })];

        case 1:
          _a.sent();

          return [2
          /*return*/
          , hash.digest()];
      }
    });
  });
};

/***/ }),

/***/ 74403:
/*!***********************************************************!*\
  !*** ./node_modules/@aws-sdk/md5-js/dist/es/constants.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BLOCK_SIZE": function() { return /* binding */ BLOCK_SIZE; },
/* harmony export */   "DIGEST_LENGTH": function() { return /* binding */ DIGEST_LENGTH; },
/* harmony export */   "INIT": function() { return /* binding */ INIT; }
/* harmony export */ });
/**
 * @internal
 */
var BLOCK_SIZE = 64;
/**
 * @internal
 */

var DIGEST_LENGTH = 16;
/**
 * @internal
 */

var INIT = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476];

/***/ }),

/***/ 20723:
/*!*******************************************************!*\
  !*** ./node_modules/@aws-sdk/md5-js/dist/es/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Md5": function() { return /* binding */ Md5; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 51029);
/* harmony import */ var _aws_sdk_util_utf8_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-utf8-browser */ 56917);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ 74403);




var Md5 = function () {
  function Md5() {
    this.state = Uint32Array.from(_constants__WEBPACK_IMPORTED_MODULE_1__.INIT);
    this.buffer = new DataView(new ArrayBuffer(_constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE));
    this.bufferLength = 0;
    this.bytesHashed = 0;
    this.finished = false;
  }

  Md5.prototype.update = function (sourceData) {
    if (isEmptyData(sourceData)) {
      return;
    } else if (this.finished) {
      throw new Error("Attempted to update an already finished hash.");
    }

    var data = convertToBuffer(sourceData);
    var position = 0;
    var byteLength = data.byteLength;
    this.bytesHashed += byteLength;

    while (byteLength > 0) {
      this.buffer.setUint8(this.bufferLength++, data[position++]);
      byteLength--;

      if (this.bufferLength === _constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE) {
        this.hashBuffer();
        this.bufferLength = 0;
      }
    }
  };

  Md5.prototype.digest = function () {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function () {
      var _a, buffer, undecoratedLength, bytesHashed, bitsHashed, i, i, out, i;

      return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_b) {
        if (!this.finished) {
          _a = this, buffer = _a.buffer, undecoratedLength = _a.bufferLength, bytesHashed = _a.bytesHashed;
          bitsHashed = bytesHashed * 8;
          buffer.setUint8(this.bufferLength++, 128); // Ensure the final block has enough room for the hashed length

          if (undecoratedLength % _constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE >= _constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE - 8) {
            for (i = this.bufferLength; i < _constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE; i++) {
              buffer.setUint8(i, 0);
            }

            this.hashBuffer();
            this.bufferLength = 0;
          }

          for (i = this.bufferLength; i < _constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE - 8; i++) {
            buffer.setUint8(i, 0);
          }

          buffer.setUint32(_constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE - 8, bitsHashed >>> 0, true);
          buffer.setUint32(_constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE - 4, Math.floor(bitsHashed / 0x100000000), true);
          this.hashBuffer();
          this.finished = true;
        }

        out = new DataView(new ArrayBuffer(_constants__WEBPACK_IMPORTED_MODULE_1__.DIGEST_LENGTH));

        for (i = 0; i < 4; i++) {
          out.setUint32(i * 4, this.state[i], true);
        }

        return [2
        /*return*/
        , new Uint8Array(out.buffer, out.byteOffset, out.byteLength)];
      });
    });
  };

  Md5.prototype.hashBuffer = function () {
    var _a = this,
        buffer = _a.buffer,
        state = _a.state;

    var a = state[0],
        b = state[1],
        c = state[2],
        d = state[3];
    a = ff(a, b, c, d, buffer.getUint32(0, true), 7, 0xd76aa478);
    d = ff(d, a, b, c, buffer.getUint32(4, true), 12, 0xe8c7b756);
    c = ff(c, d, a, b, buffer.getUint32(8, true), 17, 0x242070db);
    b = ff(b, c, d, a, buffer.getUint32(12, true), 22, 0xc1bdceee);
    a = ff(a, b, c, d, buffer.getUint32(16, true), 7, 0xf57c0faf);
    d = ff(d, a, b, c, buffer.getUint32(20, true), 12, 0x4787c62a);
    c = ff(c, d, a, b, buffer.getUint32(24, true), 17, 0xa8304613);
    b = ff(b, c, d, a, buffer.getUint32(28, true), 22, 0xfd469501);
    a = ff(a, b, c, d, buffer.getUint32(32, true), 7, 0x698098d8);
    d = ff(d, a, b, c, buffer.getUint32(36, true), 12, 0x8b44f7af);
    c = ff(c, d, a, b, buffer.getUint32(40, true), 17, 0xffff5bb1);
    b = ff(b, c, d, a, buffer.getUint32(44, true), 22, 0x895cd7be);
    a = ff(a, b, c, d, buffer.getUint32(48, true), 7, 0x6b901122);
    d = ff(d, a, b, c, buffer.getUint32(52, true), 12, 0xfd987193);
    c = ff(c, d, a, b, buffer.getUint32(56, true), 17, 0xa679438e);
    b = ff(b, c, d, a, buffer.getUint32(60, true), 22, 0x49b40821);
    a = gg(a, b, c, d, buffer.getUint32(4, true), 5, 0xf61e2562);
    d = gg(d, a, b, c, buffer.getUint32(24, true), 9, 0xc040b340);
    c = gg(c, d, a, b, buffer.getUint32(44, true), 14, 0x265e5a51);
    b = gg(b, c, d, a, buffer.getUint32(0, true), 20, 0xe9b6c7aa);
    a = gg(a, b, c, d, buffer.getUint32(20, true), 5, 0xd62f105d);
    d = gg(d, a, b, c, buffer.getUint32(40, true), 9, 0x02441453);
    c = gg(c, d, a, b, buffer.getUint32(60, true), 14, 0xd8a1e681);
    b = gg(b, c, d, a, buffer.getUint32(16, true), 20, 0xe7d3fbc8);
    a = gg(a, b, c, d, buffer.getUint32(36, true), 5, 0x21e1cde6);
    d = gg(d, a, b, c, buffer.getUint32(56, true), 9, 0xc33707d6);
    c = gg(c, d, a, b, buffer.getUint32(12, true), 14, 0xf4d50d87);
    b = gg(b, c, d, a, buffer.getUint32(32, true), 20, 0x455a14ed);
    a = gg(a, b, c, d, buffer.getUint32(52, true), 5, 0xa9e3e905);
    d = gg(d, a, b, c, buffer.getUint32(8, true), 9, 0xfcefa3f8);
    c = gg(c, d, a, b, buffer.getUint32(28, true), 14, 0x676f02d9);
    b = gg(b, c, d, a, buffer.getUint32(48, true), 20, 0x8d2a4c8a);
    a = hh(a, b, c, d, buffer.getUint32(20, true), 4, 0xfffa3942);
    d = hh(d, a, b, c, buffer.getUint32(32, true), 11, 0x8771f681);
    c = hh(c, d, a, b, buffer.getUint32(44, true), 16, 0x6d9d6122);
    b = hh(b, c, d, a, buffer.getUint32(56, true), 23, 0xfde5380c);
    a = hh(a, b, c, d, buffer.getUint32(4, true), 4, 0xa4beea44);
    d = hh(d, a, b, c, buffer.getUint32(16, true), 11, 0x4bdecfa9);
    c = hh(c, d, a, b, buffer.getUint32(28, true), 16, 0xf6bb4b60);
    b = hh(b, c, d, a, buffer.getUint32(40, true), 23, 0xbebfbc70);
    a = hh(a, b, c, d, buffer.getUint32(52, true), 4, 0x289b7ec6);
    d = hh(d, a, b, c, buffer.getUint32(0, true), 11, 0xeaa127fa);
    c = hh(c, d, a, b, buffer.getUint32(12, true), 16, 0xd4ef3085);
    b = hh(b, c, d, a, buffer.getUint32(24, true), 23, 0x04881d05);
    a = hh(a, b, c, d, buffer.getUint32(36, true), 4, 0xd9d4d039);
    d = hh(d, a, b, c, buffer.getUint32(48, true), 11, 0xe6db99e5);
    c = hh(c, d, a, b, buffer.getUint32(60, true), 16, 0x1fa27cf8);
    b = hh(b, c, d, a, buffer.getUint32(8, true), 23, 0xc4ac5665);
    a = ii(a, b, c, d, buffer.getUint32(0, true), 6, 0xf4292244);
    d = ii(d, a, b, c, buffer.getUint32(28, true), 10, 0x432aff97);
    c = ii(c, d, a, b, buffer.getUint32(56, true), 15, 0xab9423a7);
    b = ii(b, c, d, a, buffer.getUint32(20, true), 21, 0xfc93a039);
    a = ii(a, b, c, d, buffer.getUint32(48, true), 6, 0x655b59c3);
    d = ii(d, a, b, c, buffer.getUint32(12, true), 10, 0x8f0ccc92);
    c = ii(c, d, a, b, buffer.getUint32(40, true), 15, 0xffeff47d);
    b = ii(b, c, d, a, buffer.getUint32(4, true), 21, 0x85845dd1);
    a = ii(a, b, c, d, buffer.getUint32(32, true), 6, 0x6fa87e4f);
    d = ii(d, a, b, c, buffer.getUint32(60, true), 10, 0xfe2ce6e0);
    c = ii(c, d, a, b, buffer.getUint32(24, true), 15, 0xa3014314);
    b = ii(b, c, d, a, buffer.getUint32(52, true), 21, 0x4e0811a1);
    a = ii(a, b, c, d, buffer.getUint32(16, true), 6, 0xf7537e82);
    d = ii(d, a, b, c, buffer.getUint32(44, true), 10, 0xbd3af235);
    c = ii(c, d, a, b, buffer.getUint32(8, true), 15, 0x2ad7d2bb);
    b = ii(b, c, d, a, buffer.getUint32(36, true), 21, 0xeb86d391);
    state[0] = a + state[0] & 0xffffffff;
    state[1] = b + state[1] & 0xffffffff;
    state[2] = c + state[2] & 0xffffffff;
    state[3] = d + state[3] & 0xffffffff;
  };

  return Md5;
}();



function cmn(q, a, b, x, s, t) {
  a = (a + q & 0xffffffff) + (x + t & 0xffffffff) & 0xffffffff;
  return (a << s | a >>> 32 - s) + b & 0xffffffff;
}

function ff(a, b, c, d, x, s, t) {
  return cmn(b & c | ~b & d, a, b, x, s, t);
}

function gg(a, b, c, d, x, s, t) {
  return cmn(b & d | c & ~d, a, b, x, s, t);
}

function hh(a, b, c, d, x, s, t) {
  return cmn(b ^ c ^ d, a, b, x, s, t);
}

function ii(a, b, c, d, x, s, t) {
  return cmn(c ^ (b | ~d), a, b, x, s, t);
}

function isEmptyData(data) {
  if (typeof data === "string") {
    return data.length === 0;
  }

  return data.byteLength === 0;
}

function convertToBuffer(data) {
  if (typeof data === "string") {
    return (0,_aws_sdk_util_utf8_browser__WEBPACK_IMPORTED_MODULE_0__.fromUtf8)(data);
  }

  if (ArrayBuffer.isView(data)) {
    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
  }

  return new Uint8Array(data);
}

/***/ }),

/***/ 56917:
/*!**********************************!*\
  !*** @aws-sdk/util-utf8-browser ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": function() { return /* binding */ fromUtf8; },
/* harmony export */   "toUtf8": function() { return /* binding */ toUtf8; }
/* harmony export */ });
/* harmony import */ var _pureJs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pureJs */ 41953);
/* harmony import */ var _whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./whatwgEncodingApi */ 19791);


var fromUtf8 = function fromUtf8(input) {
  return typeof TextEncoder === "function" ? (0,_whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__.fromUtf8)(input) : (0,_pureJs__WEBPACK_IMPORTED_MODULE_0__.fromUtf8)(input);
};
var toUtf8 = function toUtf8(input) {
  return typeof TextDecoder === "function" ? (0,_whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__.toUtf8)(input) : (0,_pureJs__WEBPACK_IMPORTED_MODULE_0__.toUtf8)(input);
};

/***/ }),

/***/ 41953:
/*!****************!*\
  !*** ./pureJs ***!
  \****************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": function() { return /* binding */ fromUtf8; },
/* harmony export */   "toUtf8": function() { return /* binding */ toUtf8; }
/* harmony export */ });
/**
 * Converts a JS string from its native UCS-2/UTF-16 representation into a
 * Uint8Array of the bytes used to represent the equivalent characters in UTF-8.
 *
 * Cribbed from the `goog.crypt.stringToUtf8ByteArray` function in the Google
 * Closure library, though updated to use typed arrays.
 */
var fromUtf8 = function fromUtf8(input) {
  var bytes = [];

  for (var i = 0, len = input.length; i < len; i++) {
    var value = input.charCodeAt(i);

    if (value < 0x80) {
      bytes.push(value);
    } else if (value < 0x800) {
      bytes.push(value >> 6 | 192, value & 63 | 128);
    } else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
      var surrogatePair = 0x10000 + ((value & 1023) << 10) + (input.charCodeAt(++i) & 1023);
      bytes.push(surrogatePair >> 18 | 240, surrogatePair >> 12 & 63 | 128, surrogatePair >> 6 & 63 | 128, surrogatePair & 63 | 128);
    } else {
      bytes.push(value >> 12 | 224, value >> 6 & 63 | 128, value & 63 | 128);
    }
  }

  return Uint8Array.from(bytes);
};
/**
 * Converts a typed array of bytes containing UTF-8 data into a native JS
 * string.
 *
 * Partly cribbed from the `goog.crypt.utf8ByteArrayToString` function in the
 * Google Closure library, though updated to use typed arrays and to better
 * handle astral plane code points.
 */

var toUtf8 = function toUtf8(input) {
  var decoded = "";

  for (var i = 0, len = input.length; i < len; i++) {
    var byte = input[i];

    if (byte < 0x80) {
      decoded += String.fromCharCode(byte);
    } else if (192 <= byte && byte < 224) {
      var nextByte = input[++i];
      decoded += String.fromCharCode((byte & 31) << 6 | nextByte & 63);
    } else if (240 <= byte && byte < 365) {
      var surrogatePair = [byte, input[++i], input[++i], input[++i]];
      var encoded = "%" + surrogatePair.map(function (byteValue) {
        return byteValue.toString(16);
      }).join("%");
      decoded += decodeURIComponent(encoded);
    } else {
      decoded += String.fromCharCode((byte & 15) << 12 | (input[++i] & 63) << 6 | input[++i] & 63);
    }
  }

  return decoded;
};

/***/ }),

/***/ 19791:
/*!***************************!*\
  !*** ./whatwgEncodingApi ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": function() { return /* binding */ fromUtf8; },
/* harmony export */   "toUtf8": function() { return /* binding */ toUtf8; }
/* harmony export */ });
function fromUtf8(input) {
  return new TextEncoder().encode(input);
}
function toUtf8(input) {
  return new TextDecoder("utf-8").decode(input);
}

/***/ }),

/***/ 87575:
/*!**********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/bucketEndpointMiddleware.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bucketEndpointMiddleware": function() { return /* binding */ bucketEndpointMiddleware; },
/* harmony export */   "bucketEndpointMiddlewareOptions": function() { return /* binding */ bucketEndpointMiddlewareOptions; },
/* harmony export */   "getBucketEndpointPlugin": function() { return /* binding */ getBucketEndpointPlugin; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 54984);
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);
/* harmony import */ var _aws_sdk_util_arn_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/util-arn-parser */ 33481);
/* harmony import */ var _bucketHostname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bucketHostname */ 73414);
/* harmony import */ var _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bucketHostnameUtils */ 76924);





var bucketEndpointMiddleware = function bucketEndpointMiddleware(options) {
  return function (next, context) {
    return function (args) {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
        var bucketName, replaceBucketInPath, request, bucketArn, clientRegion, _a, _b, partition, _c, signingRegion, useArnRegion, _d, hostname, bucketEndpoint, modifiedSigningRegion, signingService, clientRegion, _e, _f, hostname, bucketEndpoint;

        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_g) {
          switch (_g.label) {
            case 0:
              bucketName = args.input.Bucket;
              replaceBucketInPath = options.bucketEndpoint;
              request = args.request;
              if (!_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(request)) return [3
              /*break*/
              , 8];
              if (!options.bucketEndpoint) return [3
              /*break*/
              , 1];
              request.hostname = bucketName;
              return [3
              /*break*/
              , 7];

            case 1:
              if (!(0,_aws_sdk_util_arn_parser__WEBPACK_IMPORTED_MODULE_1__.validate)(bucketName)) return [3
              /*break*/
              , 5];
              bucketArn = (0,_aws_sdk_util_arn_parser__WEBPACK_IMPORTED_MODULE_1__.parse)(bucketName);
              _a = _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.getPseudoRegion;
              return [4
              /*yield*/
              , options.region()];

            case 2:
              clientRegion = _a.apply(void 0, [_g.sent()]);
              return [4
              /*yield*/
              , options.regionInfoProvider(clientRegion)];

            case 3:
              _b = _g.sent() || {}, partition = _b.partition, _c = _b.signingRegion, signingRegion = _c === void 0 ? clientRegion : _c;
              return [4
              /*yield*/
              , options.useArnRegion()];

            case 4:
              useArnRegion = _g.sent();
              _d = (0,_bucketHostname__WEBPACK_IMPORTED_MODULE_2__.bucketHostname)({
                bucketName: bucketArn,
                baseHostname: request.hostname,
                accelerateEndpoint: options.useAccelerateEndpoint,
                dualstackEndpoint: options.useDualstackEndpoint,
                pathStyleEndpoint: options.forcePathStyle,
                tlsCompatible: request.protocol === "https:",
                useArnRegion: useArnRegion,
                clientPartition: partition,
                clientSigningRegion: signingRegion,
                clientRegion: clientRegion,
                isCustomEndpoint: options.isCustomEndpoint
              }), hostname = _d.hostname, bucketEndpoint = _d.bucketEndpoint, modifiedSigningRegion = _d.signingRegion, signingService = _d.signingService; // If the request needs to use a region or service name inferred from ARN that different from client region, we
              // need to set them in the handler context so the signer will use them

              if (modifiedSigningRegion && modifiedSigningRegion !== signingRegion) {
                context["signing_region"] = modifiedSigningRegion;
              }

              if (signingService && signingService !== "s3") {
                context["signing_service"] = signingService;
              }

              request.hostname = hostname;
              replaceBucketInPath = bucketEndpoint;
              return [3
              /*break*/
              , 7];

            case 5:
              _e = _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.getPseudoRegion;
              return [4
              /*yield*/
              , options.region()];

            case 6:
              clientRegion = _e.apply(void 0, [_g.sent()]);
              _f = (0,_bucketHostname__WEBPACK_IMPORTED_MODULE_2__.bucketHostname)({
                bucketName: bucketName,
                clientRegion: clientRegion,
                baseHostname: request.hostname,
                accelerateEndpoint: options.useAccelerateEndpoint,
                dualstackEndpoint: options.useDualstackEndpoint,
                pathStyleEndpoint: options.forcePathStyle,
                tlsCompatible: request.protocol === "https:",
                isCustomEndpoint: options.isCustomEndpoint
              }), hostname = _f.hostname, bucketEndpoint = _f.bucketEndpoint;
              request.hostname = hostname;
              replaceBucketInPath = bucketEndpoint;
              _g.label = 7;

            case 7:
              if (replaceBucketInPath) {
                request.path = request.path.replace(/^(\/)?[^\/]+/, "");

                if (request.path === "") {
                  request.path = "/";
                }
              }

              _g.label = 8;

            case 8:
              return [2
              /*return*/
              , next((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, args), {
                request: request
              }))];
          }
        });
      });
    };
  };
};
var bucketEndpointMiddlewareOptions = {
  tags: ["BUCKET_ENDPOINT"],
  name: "bucketEndpointMiddleware",
  relation: "before",
  toMiddleware: "hostHeaderMiddleware",
  override: true
};
var getBucketEndpointPlugin = function getBucketEndpointPlugin(options) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.addRelativeTo(bucketEndpointMiddleware(options), bucketEndpointMiddlewareOptions);
    }
  };
};

/***/ }),

/***/ 73414:
/*!************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/bucketHostname.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bucketHostname": function() { return /* binding */ bucketHostname; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 54984);
/* harmony import */ var _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bucketHostnameUtils */ 76924);


var bucketHostname = function bucketHostname(options) {
  var isCustomEndpoint = options.isCustomEndpoint,
      baseHostname = options.baseHostname,
      dualstackEndpoint = options.dualstackEndpoint,
      accelerateEndpoint = options.accelerateEndpoint;

  if (isCustomEndpoint) {
    if (dualstackEndpoint) throw new Error("Dualstack endpoint is not supported with custom endpoint");
    if (accelerateEndpoint) throw new Error("Accelerate endpoint is not supported with custom endpoint");
  }

  return (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.isBucketNameOptions)(options) ? // Construct endpoint when bucketName is a string referring to a bucket name
  getEndpointFromBucketName((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, options), {
    isCustomEndpoint: isCustomEndpoint
  })) : // Construct endpoint when bucketName is an ARN referring to an S3 resource like Access Point
  getEndpointFromArn((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, options), {
    isCustomEndpoint: isCustomEndpoint
  }));
};

var getEndpointFromArn = function getEndpointFromArn(options) {
  var isCustomEndpoint = options.isCustomEndpoint,
      baseHostname = options.baseHostname;

  var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(isCustomEndpoint ? [options.clientRegion, baseHostname] : // Infer client region and hostname suffix from hostname from endpoints.json, like `s3.us-west-2.amazonaws.com`
  (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.getSuffixForArnEndpoint)(baseHostname), 2),
      clientRegion = _a[0],
      hostnameSuffix = _a[1];

  var pathStyleEndpoint = options.pathStyleEndpoint,
      _b = options.dualstackEndpoint,
      dualstackEndpoint = _b === void 0 ? false : _b,
      _c = options.accelerateEndpoint,
      accelerateEndpoint = _c === void 0 ? false : _c,
      _d = options.tlsCompatible,
      tlsCompatible = _d === void 0 ? true : _d,
      useArnRegion = options.useArnRegion,
      bucketName = options.bucketName,
      _e = options.clientPartition,
      clientPartition = _e === void 0 ? "aws" : _e,
      _f = options.clientSigningRegion,
      clientSigningRegion = _f === void 0 ? clientRegion : _f;
  (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateArnEndpointOptions)({
    pathStyleEndpoint: pathStyleEndpoint,
    accelerateEndpoint: accelerateEndpoint,
    tlsCompatible: tlsCompatible
  }); // Validate and parse the ARN supplied as a bucket name

  var service = bucketName.service,
      partition = bucketName.partition,
      accountId = bucketName.accountId,
      region = bucketName.region,
      resource = bucketName.resource;
  (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateService)(service);
  (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validatePartition)(partition, {
    clientPartition: clientPartition
  });
  (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateAccountId)(accountId);
  (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateRegion)(region, {
    useArnRegion: useArnRegion,
    clientRegion: clientRegion,
    clientSigningRegion: clientSigningRegion
  });

  var _g = (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.getArnResources)(resource),
      accesspointName = _g.accesspointName,
      outpostId = _g.outpostId;

  (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateDNSHostLabel)(accesspointName + "-" + accountId, {
    tlsCompatible: tlsCompatible
  });
  var endpointRegion = useArnRegion ? region : clientRegion;
  var signingRegion = useArnRegion ? region : clientSigningRegion;

  if (outpostId) {
    // if this is an Outpost ARN
    (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateOutpostService)(service);
    (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateDNSHostLabel)(outpostId, {
      tlsCompatible: tlsCompatible
    });
    (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateNoDualstack)(dualstackEndpoint);
    (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateNoFIPS)(endpointRegion);
    var hostnamePrefix_1 = accesspointName + "-" + accountId + "." + outpostId;
    return {
      bucketEndpoint: true,
      hostname: "" + hostnamePrefix_1 + (isCustomEndpoint ? "" : ".s3-outposts." + endpointRegion) + "." + hostnameSuffix,
      signingRegion: signingRegion,
      signingService: "s3-outposts"
    };
  } // construct endpoint from Accesspoint ARN


  (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateS3Service)(service);
  var hostnamePrefix = accesspointName + "-" + accountId;
  return {
    bucketEndpoint: true,
    hostname: "" + hostnamePrefix + (isCustomEndpoint ? "" : ".s3-accesspoint" + (dualstackEndpoint ? ".dualstack" : "") + "." + endpointRegion) + "." + hostnameSuffix,
    signingRegion: signingRegion
  };
};

var getEndpointFromBucketName = function getEndpointFromBucketName(_a) {
  var _b = _a.accelerateEndpoint,
      accelerateEndpoint = _b === void 0 ? false : _b,
      region = _a.clientRegion,
      baseHostname = _a.baseHostname,
      bucketName = _a.bucketName,
      _c = _a.dualstackEndpoint,
      dualstackEndpoint = _c === void 0 ? false : _c,
      _d = _a.pathStyleEndpoint,
      pathStyleEndpoint = _d === void 0 ? false : _d,
      _e = _a.tlsCompatible,
      tlsCompatible = _e === void 0 ? true : _e,
      _f = _a.isCustomEndpoint,
      isCustomEndpoint = _f === void 0 ? false : _f;

  var _g = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(isCustomEndpoint ? [region, baseHostname] : (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.getSuffix)(baseHostname), 2),
      clientRegion = _g[0],
      hostnameSuffix = _g[1];

  if (pathStyleEndpoint || !(0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.isDnsCompatibleBucketName)(bucketName) || tlsCompatible && _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.DOT_PATTERN.test(bucketName)) {
    return {
      bucketEndpoint: false,
      hostname: dualstackEndpoint ? "s3.dualstack." + clientRegion + "." + hostnameSuffix : baseHostname
    };
  }

  if (accelerateEndpoint) {
    baseHostname = "s3-accelerate" + (dualstackEndpoint ? ".dualstack" : "") + "." + hostnameSuffix;
  } else if (dualstackEndpoint) {
    baseHostname = "s3.dualstack." + clientRegion + "." + hostnameSuffix;
  }

  return {
    bucketEndpoint: true,
    hostname: bucketName + "." + baseHostname
  };
};

/***/ }),

/***/ 76924:
/*!*****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/bucketHostnameUtils.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DOT_PATTERN": function() { return /* binding */ DOT_PATTERN; },
/* harmony export */   "S3_HOSTNAME_PATTERN": function() { return /* binding */ S3_HOSTNAME_PATTERN; },
/* harmony export */   "isBucketNameOptions": function() { return /* binding */ isBucketNameOptions; },
/* harmony export */   "getPseudoRegion": function() { return /* binding */ getPseudoRegion; },
/* harmony export */   "isDnsCompatibleBucketName": function() { return /* binding */ isDnsCompatibleBucketName; },
/* harmony export */   "getSuffix": function() { return /* binding */ getSuffix; },
/* harmony export */   "getSuffixForArnEndpoint": function() { return /* binding */ getSuffixForArnEndpoint; },
/* harmony export */   "validateArnEndpointOptions": function() { return /* binding */ validateArnEndpointOptions; },
/* harmony export */   "validateService": function() { return /* binding */ validateService; },
/* harmony export */   "validateS3Service": function() { return /* binding */ validateS3Service; },
/* harmony export */   "validateOutpostService": function() { return /* binding */ validateOutpostService; },
/* harmony export */   "validatePartition": function() { return /* binding */ validatePartition; },
/* harmony export */   "validateRegion": function() { return /* binding */ validateRegion; },
/* harmony export */   "validateAccountId": function() { return /* binding */ validateAccountId; },
/* harmony export */   "validateDNSHostLabel": function() { return /* binding */ validateDNSHostLabel; },
/* harmony export */   "getArnResources": function() { return /* binding */ getArnResources; },
/* harmony export */   "validateNoDualstack": function() { return /* binding */ validateNoDualstack; },
/* harmony export */   "validateNoFIPS": function() { return /* binding */ validateNoFIPS; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 54984);

var DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/;
var IP_ADDRESS_PATTERN = /(\d+\.){3}\d+/;
var DOTS_PATTERN = /\.\./;
var DOT_PATTERN = /\./;
var S3_HOSTNAME_PATTERN = /^(.+\.)?s3[.-]([a-z0-9-]+)\./;
var S3_US_EAST_1_ALTNAME_PATTERN = /^s3(-external-1)?\.amazonaws\.com$/;
var AWS_PARTITION_SUFFIX = "amazonaws.com";
var isBucketNameOptions = function isBucketNameOptions(options) {
  return typeof options.bucketName === "string";
};
/**
 * Get pseudo region from supplied region. For example, if supplied with `fips-us-west-2`, it returns `us-west-2`.
 * @internal
 */

var getPseudoRegion = function getPseudoRegion(region) {
  return isFipsRegion(region) ? region.replace(/fips-|-fips/, "") : region;
};
/**
 * Determines whether a given string is DNS compliant per the rules outlined by
 * S3. Length, capitaization, and leading dot restrictions are enforced by the
 * DOMAIN_PATTERN regular expression.
 * @internal
 *
 * @see https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html
 */

var isDnsCompatibleBucketName = function isDnsCompatibleBucketName(bucketName) {
  return DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);
};

var getRegionalSuffix = function getRegionalSuffix(hostname) {
  var parts = hostname.match(S3_HOSTNAME_PATTERN);
  return [parts[2], hostname.replace(new RegExp("^" + parts[0]), "")];
};

var getSuffix = function getSuffix(hostname) {
  return S3_US_EAST_1_ALTNAME_PATTERN.test(hostname) ? ["us-east-1", AWS_PARTITION_SUFFIX] : getRegionalSuffix(hostname);
};
/**
 * Infer region and hostname suffix from a complete hostname
 * @internal
 * @param hostname - Hostname
 * @returns [Region, Hostname suffix]
 */

var getSuffixForArnEndpoint = function getSuffixForArnEndpoint(hostname) {
  return S3_US_EAST_1_ALTNAME_PATTERN.test(hostname) ? [hostname.replace("." + AWS_PARTITION_SUFFIX, ""), AWS_PARTITION_SUFFIX] : getRegionalSuffix(hostname);
};
var validateArnEndpointOptions = function validateArnEndpointOptions(options) {
  if (options.pathStyleEndpoint) {
    throw new Error("Path-style S3 endpoint is not supported when bucket is an ARN");
  }

  if (options.accelerateEndpoint) {
    throw new Error("Accelerate endpoint is not supported when bucket is an ARN");
  }

  if (!options.tlsCompatible) {
    throw new Error("HTTPS is required when bucket is an ARN");
  }
};
var validateService = function validateService(service) {
  if (service !== "s3" && service !== "s3-outposts") {
    throw new Error("Expect 's3' or 's3-outposts' in ARN service component");
  }
};
var validateS3Service = function validateS3Service(service) {
  if (service !== "s3") {
    throw new Error("Expect 's3' in Accesspoint ARN service component");
  }
};
var validateOutpostService = function validateOutpostService(service) {
  if (service !== "s3-outposts") {
    throw new Error("Expect 's3-posts' in Outpost ARN service component");
  }
};
/**
 * Validate partition inferred from ARN is the same to `options.clientPartition`.
 * @internal
 */

var validatePartition = function validatePartition(partition, options) {
  if (partition !== options.clientPartition) {
    throw new Error("Partition in ARN is incompatible, got \"" + partition + "\" but expected \"" + options.clientPartition + "\"");
  }
};
/**
 * validate region value inferred from ARN. If `options.useArnRegion` is set, it validates the region is not a FIPS
 * region. If `options.useArnRegion` is unset, it validates the region is equal to `options.clientRegion` or
 * `options.clientSigningRegion`.
 * @internal
 */

var validateRegion = function validateRegion(region, options) {
  if (region === "") {
    throw new Error("ARN region is empty");
  }

  if (!options.useArnRegion && !isEqualRegions(region, options.clientRegion) && !isEqualRegions(region, options.clientSigningRegion)) {
    throw new Error("Region in ARN is incompatible, got " + region + " but expected " + options.clientRegion);
  }

  if (options.useArnRegion && isFipsRegion(region)) {
    throw new Error("Endpoint does not support FIPS region");
  }
};

var isFipsRegion = function isFipsRegion(region) {
  return region.startsWith("fips-") || region.endsWith("-fips");
};

var isEqualRegions = function isEqualRegions(regionA, regionB) {
  return regionA === regionB || getPseudoRegion(regionA) === regionB || regionA === getPseudoRegion(regionB);
};
/**
 * Validate an account ID
 * @internal
 */


var validateAccountId = function validateAccountId(accountId) {
  if (!/[0-9]{12}/.exec(accountId)) {
    throw new Error("Access point ARN accountID does not match regex '[0-9]{12}'");
  }
};
/**
 * Validate a host label according to https://tools.ietf.org/html/rfc3986#section-3.2.2
 * @internal
 */

var validateDNSHostLabel = function validateDNSHostLabel(label, options) {
  if (options === void 0) {
    options = {
      tlsCompatible: true
    };
  } // reference: https://tools.ietf.org/html/rfc3986#section-3.2.2


  if (label.length >= 64 || !/^[a-z0-9][a-z0-9.-]+[a-z0-9]$/.test(label) || /(\d+\.){3}\d+/.test(label) || /[.-]{2}/.test(label) || (options === null || options === void 0 ? void 0 : options.tlsCompatible) && DOT_PATTERN.test(label)) {
    throw new Error("Invalid DNS label " + label);
  }
};
/**
 * Validate and parse an Access Point ARN or Outposts ARN
 * @internal
 *
 * @param resource - The resource section of an ARN
 * @returns Access Point Name and optional Outpost ID.
 */

var getArnResources = function getArnResources(resource) {
  var delimiter = resource.includes(":") ? ":" : "/";

  var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(resource.split(delimiter)),
      resourceType = _a[0],
      rest = _a.slice(1);

  if (resourceType === "accesspoint") {
    // Parse accesspoint ARN
    if (rest.length !== 1 || rest[0] === "") {
      throw new Error("Access Point ARN should have one resource accesspoint" + delimiter + "{accesspointname}");
    }

    return {
      accesspointName: rest[0]
    };
  } else if (resourceType === "outpost") {
    // Parse outpost ARN
    if (!rest[0] || rest[1] !== "accesspoint" || !rest[2] || rest.length !== 3) {
      throw new Error("Outpost ARN should have resource outpost" + delimiter + "{outpostId}" + delimiter + "accesspoint" + delimiter + "{accesspointName}");
    }

    var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(rest, 3),
        outpostId = _b[0],
        _ = _b[1],
        accesspointName = _b[2];

    return {
      outpostId: outpostId,
      accesspointName: accesspointName
    };
  } else {
    throw new Error("ARN resource should begin with 'accesspoint" + delimiter + "' or 'outpost" + delimiter + "'");
  }
};
/**
 * Throw if dual stack configuration is set to true.
 * @internal
 */

var validateNoDualstack = function validateNoDualstack(dualstackEndpoint) {
  if (dualstackEndpoint) throw new Error("Dualstack endpoint is not supported with Outpost");
};
/**
 * Validate region is not appended or prepended with a `fips-`
 * @internal
 */

var validateNoFIPS = function validateNoFIPS(region) {
  if (isFipsRegion(region !== null && region !== void 0 ? region : "")) throw new Error("FIPS region is not supported with Outpost, got " + region);
};

/***/ }),

/***/ 8552:
/*!************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/configurations.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "resolveBucketEndpointConfig": function() { return /* binding */ resolveBucketEndpointConfig; },
/* harmony export */   "NODE_USE_ARN_REGION_ENV_NAME": function() { return /* binding */ NODE_USE_ARN_REGION_ENV_NAME; },
/* harmony export */   "NODE_USE_ARN_REGION_INI_NAME": function() { return /* binding */ NODE_USE_ARN_REGION_INI_NAME; },
/* harmony export */   "NODE_USE_ARN_REGION_CONFIG_OPTIONS": function() { return /* binding */ NODE_USE_ARN_REGION_CONFIG_OPTIONS; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 54984);

function resolveBucketEndpointConfig(input) {
  var _a = input.bucketEndpoint,
      bucketEndpoint = _a === void 0 ? false : _a,
      _b = input.forcePathStyle,
      forcePathStyle = _b === void 0 ? false : _b,
      _c = input.useAccelerateEndpoint,
      useAccelerateEndpoint = _c === void 0 ? false : _c,
      _d = input.useDualstackEndpoint,
      useDualstackEndpoint = _d === void 0 ? false : _d,
      _e = input.useArnRegion,
      useArnRegion = _e === void 0 ? false : _e;
  return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, input), {
    bucketEndpoint: bucketEndpoint,
    forcePathStyle: forcePathStyle,
    useAccelerateEndpoint: useAccelerateEndpoint,
    useDualstackEndpoint: useDualstackEndpoint,
    useArnRegion: typeof useArnRegion === "function" ? useArnRegion : function () {
      return Promise.resolve(useArnRegion);
    }
  });
}
var NODE_USE_ARN_REGION_ENV_NAME = "AWS_S3_USE_ARN_REGION";
var NODE_USE_ARN_REGION_INI_NAME = "s3_use_arn_region";
/**
 * Config to load useArnRegion from environment variables and shared INI files
 *
 * @api private
 */

var NODE_USE_ARN_REGION_CONFIG_OPTIONS = {
  environmentVariableSelector: function environmentVariableSelector(env) {
    if (!Object.prototype.hasOwnProperty.call(env, NODE_USE_ARN_REGION_ENV_NAME)) return undefined;
    if (env[NODE_USE_ARN_REGION_ENV_NAME] === "true") return true;
    if (env[NODE_USE_ARN_REGION_ENV_NAME] === "false") return false;
    throw new Error("Cannot load env " + NODE_USE_ARN_REGION_ENV_NAME + ". Expected \"true\" or \"false\", got " + env[NODE_USE_ARN_REGION_ENV_NAME] + ".");
  },
  configFileSelector: function configFileSelector(profile) {
    if (!Object.prototype.hasOwnProperty.call(profile, NODE_USE_ARN_REGION_INI_NAME)) return undefined;
    if (profile[NODE_USE_ARN_REGION_INI_NAME] === "true") return true;
    if (profile[NODE_USE_ARN_REGION_INI_NAME] === "false") return false;
    throw new Error("Cannot load shared config entry " + NODE_USE_ARN_REGION_INI_NAME + ". Expected \"true\" or \"false\", got " + profile[NODE_USE_ARN_REGION_INI_NAME] + ".");
  },
  default: false
};

/***/ }),

/***/ 58538:
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/index.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bucketEndpointMiddleware": function() { return /* reexport safe */ _bucketEndpointMiddleware__WEBPACK_IMPORTED_MODULE_0__.bucketEndpointMiddleware; },
/* harmony export */   "bucketEndpointMiddlewareOptions": function() { return /* reexport safe */ _bucketEndpointMiddleware__WEBPACK_IMPORTED_MODULE_0__.bucketEndpointMiddlewareOptions; },
/* harmony export */   "getBucketEndpointPlugin": function() { return /* reexport safe */ _bucketEndpointMiddleware__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin; },
/* harmony export */   "bucketHostname": function() { return /* reexport safe */ _bucketHostname__WEBPACK_IMPORTED_MODULE_1__.bucketHostname; },
/* harmony export */   "NODE_USE_ARN_REGION_CONFIG_OPTIONS": function() { return /* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_2__.NODE_USE_ARN_REGION_CONFIG_OPTIONS; },
/* harmony export */   "NODE_USE_ARN_REGION_ENV_NAME": function() { return /* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_2__.NODE_USE_ARN_REGION_ENV_NAME; },
/* harmony export */   "NODE_USE_ARN_REGION_INI_NAME": function() { return /* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_2__.NODE_USE_ARN_REGION_INI_NAME; },
/* harmony export */   "resolveBucketEndpointConfig": function() { return /* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_2__.resolveBucketEndpointConfig; },
/* harmony export */   "getArnResources": function() { return /* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.getArnResources; },
/* harmony export */   "getPseudoRegion": function() { return /* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.getPseudoRegion; },
/* harmony export */   "getSuffixForArnEndpoint": function() { return /* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.getSuffixForArnEndpoint; },
/* harmony export */   "validateOutpostService": function() { return /* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validateOutpostService; },
/* harmony export */   "validatePartition": function() { return /* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validatePartition; },
/* harmony export */   "validateAccountId": function() { return /* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validateAccountId; },
/* harmony export */   "validateRegion": function() { return /* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validateRegion; },
/* harmony export */   "validateDNSHostLabel": function() { return /* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validateDNSHostLabel; },
/* harmony export */   "validateNoDualstack": function() { return /* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validateNoDualstack; },
/* harmony export */   "validateNoFIPS": function() { return /* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validateNoFIPS; }
/* harmony export */ });
/* harmony import */ var _bucketEndpointMiddleware__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bucketEndpointMiddleware */ 87575);
/* harmony import */ var _bucketHostname__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bucketHostname */ 73414);
/* harmony import */ var _configurations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./configurations */ 8552);
/* harmony import */ var _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bucketHostnameUtils */ 76924);





/***/ }),

/***/ 62608:
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-expect-continue/dist/es/index.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addExpectContinueMiddleware": function() { return /* binding */ addExpectContinueMiddleware; },
/* harmony export */   "addExpectContinueMiddlewareOptions": function() { return /* binding */ addExpectContinueMiddlewareOptions; },
/* harmony export */   "getAddExpectContinuePlugin": function() { return /* binding */ getAddExpectContinuePlugin; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 50803);
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);


function addExpectContinueMiddleware(options) {
  var _this = this;

  return function (next) {
    return function (args) {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(_this, void 0, void 0, function () {
        var request;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
          request = args.request;

          if (_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(request) && request.body && options.runtime === "node") {
            request.headers = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, request.headers), {
              Expect: "100-continue"
            });
          }

          return [2
          /*return*/
          , next((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, args), {
            request: request
          }))];
        });
      });
    };
  };
}
var addExpectContinueMiddlewareOptions = {
  step: "build",
  tags: ["SET_EXPECT_HEADER", "EXPECT_HEADER"],
  name: "addExpectContinueMiddleware",
  override: true
};
var getAddExpectContinuePlugin = function getAddExpectContinuePlugin(options) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(addExpectContinueMiddleware(options), addExpectContinueMiddlewareOptions);
    }
  };
};

/***/ }),

/***/ 51862:
/*!******************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-sdk-s3/dist/es/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getValidateBucketNamePlugin": function() { return /* reexport safe */ _validate_bucket_name__WEBPACK_IMPORTED_MODULE_0__.getValidateBucketNamePlugin; },
/* harmony export */   "validateBucketNameMiddleware": function() { return /* reexport safe */ _validate_bucket_name__WEBPACK_IMPORTED_MODULE_0__.validateBucketNameMiddleware; },
/* harmony export */   "validateBucketNameMiddlewareOptions": function() { return /* reexport safe */ _validate_bucket_name__WEBPACK_IMPORTED_MODULE_0__.validateBucketNameMiddlewareOptions; },
/* harmony export */   "getUseRegionalEndpointPlugin": function() { return /* reexport safe */ _use_regional_endpoint__WEBPACK_IMPORTED_MODULE_1__.getUseRegionalEndpointPlugin; },
/* harmony export */   "useRegionalEndpointMiddleware": function() { return /* reexport safe */ _use_regional_endpoint__WEBPACK_IMPORTED_MODULE_1__.useRegionalEndpointMiddleware; },
/* harmony export */   "useRegionalEndpointMiddlewareOptions": function() { return /* reexport safe */ _use_regional_endpoint__WEBPACK_IMPORTED_MODULE_1__.useRegionalEndpointMiddlewareOptions; },
/* harmony export */   "getThrow200ExceptionsPlugin": function() { return /* reexport safe */ _throw_200_exceptions__WEBPACK_IMPORTED_MODULE_2__.getThrow200ExceptionsPlugin; },
/* harmony export */   "throw200ExceptionsMiddleware": function() { return /* reexport safe */ _throw_200_exceptions__WEBPACK_IMPORTED_MODULE_2__.throw200ExceptionsMiddleware; },
/* harmony export */   "throw200ExceptionsMiddlewareOptions": function() { return /* reexport safe */ _throw_200_exceptions__WEBPACK_IMPORTED_MODULE_2__.throw200ExceptionsMiddlewareOptions; }
/* harmony export */ });
/* harmony import */ var _validate_bucket_name__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate-bucket-name */ 14293);
/* harmony import */ var _use_regional_endpoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use-regional-endpoint */ 87101);
/* harmony import */ var _throw_200_exceptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./throw-200-exceptions */ 35214);




/***/ }),

/***/ 35214:
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-sdk-s3/dist/es/throw-200-exceptions.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "throw200ExceptionsMiddleware": function() { return /* binding */ throw200ExceptionsMiddleware; },
/* harmony export */   "throw200ExceptionsMiddlewareOptions": function() { return /* binding */ throw200ExceptionsMiddlewareOptions; },
/* harmony export */   "getThrow200ExceptionsPlugin": function() { return /* binding */ getThrow200ExceptionsPlugin; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 55185);
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);


/**
 * In case of an internal error/terminated connection, S3 operations may return 200 errors. CopyObject, UploadPartCopy,
 * CompleteMultipartUpload may return empty payload or payload with only xml Preamble.
 * @internal
 */

var throw200ExceptionsMiddleware = function throw200ExceptionsMiddleware(config) {
  return function (next) {
    return function (args) {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
        var result, response, statusCode, body, bodyBytes, bodyString, err;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
          switch (_a.label) {
            case 0:
              return [4
              /*yield*/
              , next(args)];

            case 1:
              result = _a.sent();
              response = result.response;
              if (!_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpResponse.isInstance(response)) return [2
              /*return*/
              , result];
              statusCode = response.statusCode, body = response.body;
              if (statusCode < 200 && statusCode >= 300) return [2
              /*return*/
              , result];
              return [4
              /*yield*/
              , collectBody(body, config)];

            case 2:
              bodyBytes = _a.sent();
              return [4
              /*yield*/
              , collectBodyString(bodyBytes, config)];

            case 3:
              bodyString = _a.sent();

              if (bodyBytes.length === 0) {
                err = new Error("S3 aborted request");
                err.name = "InternalError";
                throw err;
              }

              if (bodyString && bodyString.match("<Error>")) {
                // Set the error code to 4XX so that error deserializer can parse them
                response.statusCode = 400;
              } // Body stream is consumed and paused at this point. So replace the response.body to the collected bytes.
              // So that the deserializer can consume the body as normal.


              response.body = bodyBytes;
              return [2
              /*return*/
              , result];
          }
        });
      });
    };
  };
}; // Collect low-level response body stream to Uint8Array.

var collectBody = function collectBody(streamBody, context) {
  if (streamBody === void 0) {
    streamBody = new Uint8Array();
  }

  if (streamBody instanceof Uint8Array) {
    return Promise.resolve(streamBody);
  }

  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());
}; // Encode Uint8Array data into string with utf-8.


var collectBodyString = function collectBodyString(streamBody, context) {
  return collectBody(streamBody, context).then(function (body) {
    return context.utf8Encoder(body);
  });
};
/**
 * @internal
 */


var throw200ExceptionsMiddlewareOptions = {
  relation: "after",
  toMiddleware: "deserializerMiddleware",
  tags: ["THROW_200_EXCEPTIONS", "S3"],
  name: "throw200ExceptionsMiddleware",
  override: true
};
/**
 *
 * @internal
 */

var getThrow200ExceptionsPlugin = function getThrow200ExceptionsPlugin(config) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.addRelativeTo(throw200ExceptionsMiddleware(config), throw200ExceptionsMiddlewareOptions);
    }
  };
};

/***/ }),

/***/ 87101:
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-sdk-s3/dist/es/use-regional-endpoint.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useRegionalEndpointMiddleware": function() { return /* binding */ useRegionalEndpointMiddleware; },
/* harmony export */   "useRegionalEndpointMiddlewareOptions": function() { return /* binding */ useRegionalEndpointMiddlewareOptions; },
/* harmony export */   "getUseRegionalEndpointPlugin": function() { return /* binding */ getUseRegionalEndpointPlugin; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 55185);
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);


/**
 * @internal
 */

var useRegionalEndpointMiddleware = function useRegionalEndpointMiddleware(config) {
  return function (next) {
    return function (args) {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
        var request, _a;

        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_b) {
          switch (_b.label) {
            case 0:
              request = args.request;
              if (!_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(request) || config.isCustomEndpoint) return [2
              /*return*/
              , next((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, args))];
              if (!(request.hostname === "s3.amazonaws.com")) return [3
              /*break*/
              , 1];
              request.hostname = "s3.us-east-1.amazonaws.com";
              return [3
              /*break*/
              , 3];

            case 1:
              _a = "aws-global";
              return [4
              /*yield*/
              , config.region()];

            case 2:
              if (_a === _b.sent()) {
                request.hostname = "s3.amazonaws.com";
              }

              _b.label = 3;

            case 3:
              return [2
              /*return*/
              , next((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, args))];
          }
        });
      });
    };
  };
};
/**
 * @internal
 */

var useRegionalEndpointMiddlewareOptions = {
  step: "build",
  tags: ["USE_REGIONAL_ENDPOINT", "S3"],
  name: "useRegionalEndpointMiddleware",
  override: true
};
/**
 * @internal
 */

var getUseRegionalEndpointPlugin = function getUseRegionalEndpointPlugin(config) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(useRegionalEndpointMiddleware(config), useRegionalEndpointMiddlewareOptions);
    }
  };
};

/***/ }),

/***/ 14293:
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-sdk-s3/dist/es/validate-bucket-name.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "validateBucketNameMiddleware": function() { return /* binding */ validateBucketNameMiddleware; },
/* harmony export */   "validateBucketNameMiddlewareOptions": function() { return /* binding */ validateBucketNameMiddlewareOptions; },
/* harmony export */   "getValidateBucketNamePlugin": function() { return /* binding */ getValidateBucketNamePlugin; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 55185);
/* harmony import */ var _aws_sdk_util_arn_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-arn-parser */ 33481);


/**
 * @internal
 */

function validateBucketNameMiddleware() {
  var _this = this;

  return function (next) {
    return function (args) {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(_this, void 0, void 0, function () {
        var Bucket, err;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
          Bucket = args.input.Bucket;

          if (typeof Bucket === "string" && !(0,_aws_sdk_util_arn_parser__WEBPACK_IMPORTED_MODULE_0__.validate)(Bucket) && Bucket.indexOf("/") >= 0) {
            err = new Error("Bucket name shouldn't contain '/', received '" + Bucket + "'");
            err.name = "InvalidBucketName";
            throw err;
          }

          return [2
          /*return*/
          , next((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, args))];
        });
      });
    };
  };
}
/**
 * @internal
 */

var validateBucketNameMiddlewareOptions = {
  step: "initialize",
  tags: ["VALIDATE_BUCKET_NAME"],
  name: "validateBucketNameMiddleware",
  override: true
};
/**
 * @internal
 */
// eslint-disable-next-line @typescript-eslint/no-unused-vars

var getValidateBucketNamePlugin = function getValidateBucketNamePlugin(unused) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(validateBucketNameMiddleware(), validateBucketNameMiddlewareOptions);
    }
  };
};

/***/ }),

/***/ 40285:
/*!****************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-ssec/dist/es/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ssecMiddleware": function() { return /* binding */ ssecMiddleware; },
/* harmony export */   "ssecMiddlewareOptions": function() { return /* binding */ ssecMiddlewareOptions; },
/* harmony export */   "getSsecPlugin": function() { return /* binding */ getSsecPlugin; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 26280);

function ssecMiddleware(options) {
  var _this = this;

  return function (next) {
    return function (args) {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(_this, void 0, void 0, function () {
        var input, properties, properties_1, properties_1_1, prop, value, valueView, encoded, hash, _a, _b, _c, _d, e_1_1;

        var e_1, _e, _f;

        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_g) {
          switch (_g.label) {
            case 0:
              input = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, args.input);
              properties = [{
                target: "SSECustomerKey",
                hash: "SSECustomerKeyMD5"
              }, {
                target: "CopySourceSSECustomerKey",
                hash: "CopySourceSSECustomerKeyMD5"
              }];
              _g.label = 1;

            case 1:
              _g.trys.push([1, 6, 7, 8]);

              properties_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(properties), properties_1_1 = properties_1.next();
              _g.label = 2;

            case 2:
              if (!!properties_1_1.done) return [3
              /*break*/
              , 5];
              prop = properties_1_1.value;
              value = input[prop.target];
              if (!value) return [3
              /*break*/
              , 4];
              valueView = ArrayBuffer.isView(value) ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength) : typeof value === "string" ? options.utf8Decoder(value) : new Uint8Array(value);
              encoded = options.base64Encoder(valueView);
              hash = new options.md5();
              hash.update(valueView);
              _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, input)];
              _f = {}, _f[prop.target] = encoded;
              _b = prop.hash;
              _d = (_c = options).base64Encoder;
              return [4
              /*yield*/
              , hash.digest()];

            case 3:
              input = tslib__WEBPACK_IMPORTED_MODULE_0__.__assign.apply(void 0, _a.concat([(_f[_b] = _d.apply(_c, [_g.sent()]), _f)]));
              _g.label = 4;

            case 4:
              properties_1_1 = properties_1.next();
              return [3
              /*break*/
              , 2];

            case 5:
              return [3
              /*break*/
              , 8];

            case 6:
              e_1_1 = _g.sent();
              e_1 = {
                error: e_1_1
              };
              return [3
              /*break*/
              , 8];

            case 7:
              try {
                if (properties_1_1 && !properties_1_1.done && (_e = properties_1.return)) _e.call(properties_1);
              } finally {
                if (e_1) throw e_1.error;
              }

              return [7
              /*endfinally*/
              ];

            case 8:
              return [2
              /*return*/
              , next((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, args), {
                input: input
              }))];
          }
        });
      });
    };
  };
}
var ssecMiddlewareOptions = {
  name: "ssecMiddleware",
  step: "initialize",
  tags: ["SSE"],
  override: true
};
var getSsecPlugin = function getSsecPlugin(config) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);
    }
  };
};

/***/ }),

/***/ 24964:
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/s3-request-presigner/dist/es/constants.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UNSIGNED_PAYLOAD": function() { return /* binding */ UNSIGNED_PAYLOAD; },
/* harmony export */   "SHA256_HEADER": function() { return /* binding */ SHA256_HEADER; },
/* harmony export */   "ALGORITHM_QUERY_PARAM": function() { return /* binding */ ALGORITHM_QUERY_PARAM; },
/* harmony export */   "CREDENTIAL_QUERY_PARAM": function() { return /* binding */ CREDENTIAL_QUERY_PARAM; },
/* harmony export */   "AMZ_DATE_QUERY_PARAM": function() { return /* binding */ AMZ_DATE_QUERY_PARAM; },
/* harmony export */   "SIGNED_HEADERS_QUERY_PARAM": function() { return /* binding */ SIGNED_HEADERS_QUERY_PARAM; },
/* harmony export */   "EXPIRES_QUERY_PARAM": function() { return /* binding */ EXPIRES_QUERY_PARAM; },
/* harmony export */   "HOST_HEADER": function() { return /* binding */ HOST_HEADER; },
/* harmony export */   "ALGORITHM_IDENTIFIER": function() { return /* binding */ ALGORITHM_IDENTIFIER; }
/* harmony export */ });
var UNSIGNED_PAYLOAD = "UNSIGNED-PAYLOAD";
var SHA256_HEADER = "X-Amz-Content-Sha256";
var ALGORITHM_QUERY_PARAM = "X-Amz-Algorithm";
var CREDENTIAL_QUERY_PARAM = "X-Amz-Credential";
var AMZ_DATE_QUERY_PARAM = "X-Amz-Date";
var SIGNED_HEADERS_QUERY_PARAM = "X-Amz-SignedHeaders";
var EXPIRES_QUERY_PARAM = "X-Amz-Expires";
var HOST_HEADER = "host";
var ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256";

/***/ }),

/***/ 57044:
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/s3-request-presigner/dist/es/getSignedUrl.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getSignedUrl": function() { return /* binding */ getSignedUrl; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 9575);
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);
/* harmony import */ var _aws_sdk_util_format_url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/util-format-url */ 9385);
/* harmony import */ var _presigner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./presigner */ 97781);




var getSignedUrl = function getSignedUrl(client, command, options) {
  if (options === void 0) {
    options = {};
  }

  return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(void 0, void 0, void 0, function () {
    var s3Presigner, presignInterceptMiddleware, middlewareName, presigned, output;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          s3Presigner = new _presigner__WEBPACK_IMPORTED_MODULE_2__.S3RequestPresigner((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, client.config));

          presignInterceptMiddleware = function presignInterceptMiddleware(next, context) {
            return function (args) {
              return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(void 0, void 0, void 0, function () {
                var request, presigned;

                var _a, _b;

                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_c) {
                  switch (_c.label) {
                    case 0:
                      request = args.request;

                      if (!_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(request)) {
                        throw new Error("Request to be presigned is not an valid HTTP request.");
                      } // Retry information headers are not meaningful in presigned URLs


                      delete request.headers["amz-sdk-invocation-id"];
                      delete request.headers["amz-sdk-request"];
                      return [4
                      /*yield*/
                      , s3Presigner.presign(request, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, options), {
                        signingRegion: (_a = options.signingRegion) !== null && _a !== void 0 ? _a : context["signing_region"],
                        signingService: (_b = options.signingService) !== null && _b !== void 0 ? _b : context["signing_service"]
                      }))];

                    case 1:
                      presigned = _c.sent();
                      return [2
                      /*return*/
                      , {
                        // Intercept the middleware stack by returning fake response
                        response: {},
                        output: {
                          $metadata: {
                            httpStatusCode: 200
                          },
                          presigned: presigned
                        }
                      }];
                  }
                });
              });
            };
          };

          middlewareName = "presignInterceptMiddleware";
          client.middlewareStack.addRelativeTo(presignInterceptMiddleware, {
            name: middlewareName,
            relation: "before",
            toMiddleware: "awsAuthMiddleware",
            override: true
          });
          _a.label = 1;

        case 1:
          _a.trys.push([1,, 3, 4]);

          return [4
          /*yield*/
          , client.send(command)];

        case 2:
          output = _a.sent(); //@ts-ignore the output is faked, so it's not actually OutputType

          presigned = output.presigned;
          return [3
          /*break*/
          , 4];

        case 3:
          client.middlewareStack.remove(middlewareName);
          return [7
          /*endfinally*/
          ];

        case 4:
          return [2
          /*return*/
          , (0,_aws_sdk_util_format_url__WEBPACK_IMPORTED_MODULE_1__.formatUrl)(presigned)];
      }
    });
  });
};

/***/ }),

/***/ 83474:
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-sdk/s3-request-presigner/dist/es/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "S3RequestPresigner": function() { return /* reexport safe */ _presigner__WEBPACK_IMPORTED_MODULE_0__.S3RequestPresigner; },
/* harmony export */   "getSignedUrl": function() { return /* reexport safe */ _getSignedUrl__WEBPACK_IMPORTED_MODULE_1__.getSignedUrl; }
/* harmony export */ });
/* harmony import */ var _presigner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./presigner */ 97781);
/* harmony import */ var _getSignedUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getSignedUrl */ 57044);



/***/ }),

/***/ 97781:
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/s3-request-presigner/dist/es/presigner.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "S3RequestPresigner": function() { return /* binding */ S3RequestPresigner; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 9575);
/* harmony import */ var _aws_sdk_signature_v4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/signature-v4 */ 59586);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ 24964);




var S3RequestPresigner = function () {
  function S3RequestPresigner(options) {
    var resolvedOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({
      // Allow `signingName` because we want to support usecase of supply client's resolved config
      // directly. Where service equals signingName.
      service: options.signingName || options.service || "s3",
      uriEscapePath: options.uriEscapePath || false
    }, options);

    this.signer = new _aws_sdk_signature_v4__WEBPACK_IMPORTED_MODULE_0__.SignatureV4(resolvedOptions);
  }

  S3RequestPresigner.prototype.presign = function (requestToSign, _a) {
    if (_a === void 0) {
      _a = {};
    }

    var _b = _a.unsignableHeaders,
        unsignableHeaders = _b === void 0 ? new Set() : _b,
        _c = _a.unhoistableHeaders,
        unhoistableHeaders = _c === void 0 ? new Set() : _c,
        options = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(_a, ["unsignableHeaders", "unhoistableHeaders"]);

    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function () {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_d) {
        unsignableHeaders.add("content-type"); // S3 requires SSE headers to be signed in headers instead of query
        // See: https://github.com/aws/aws-sdk-js-v3/issues/1576

        Object.keys(requestToSign.headers).map(function (header) {
          return header.toLowerCase();
        }).filter(function (header) {
          return header.startsWith("x-amz-server-side-encryption");
        }).forEach(function (header) {
          unhoistableHeaders.add(header);
        });
        requestToSign.headers[_constants__WEBPACK_IMPORTED_MODULE_1__.SHA256_HEADER] = _constants__WEBPACK_IMPORTED_MODULE_1__.UNSIGNED_PAYLOAD;

        if (!requestToSign.headers["host"]) {
          requestToSign.headers.host = requestToSign.hostname;
        }

        return [2
        /*return*/
        , this.signer.presign(requestToSign, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({
          expiresIn: 900,
          unsignableHeaders: unsignableHeaders,
          unhoistableHeaders: unhoistableHeaders
        }, options))];
      });
    });
  };

  return S3RequestPresigner;
}();



/***/ }),

/***/ 33481:
/*!****************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-arn-parser/dist/es/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "validate": function() { return /* binding */ validate; },
/* harmony export */   "parse": function() { return /* binding */ parse; },
/* harmony export */   "build": function() { return /* binding */ build; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 42780);

/**
 * Validate whether a string is an ARN.
 */

var validate = function validate(str) {
  return typeof str === "string" && str.indexOf("arn:") === 0 && str.split(":").length >= 6;
};
/**
 * Parse an ARN string into structure with partition, service, region, accountId and resource values
 */

var parse = function parse(arn) {
  var segments = arn.split(":");
  if (segments.length < 6 || segments[0] !== "arn") throw new Error("Malformed ARN");

  var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(segments),
      //Skip "arn" literal
  partition = _a[1],
      service = _a[2],
      region = _a[3],
      accountId = _a[4],
      resource = _a.slice(5);

  return {
    partition: partition,
    service: service,
    region: region,
    accountId: accountId,
    resource: resource.join(":")
  };
};
/**
 * Build an ARN with service, partition, region, accountId, and resources strings
 */

var build = function build(arnObject) {
  var _a = arnObject.partition,
      partition = _a === void 0 ? "aws" : _a,
      service = arnObject.service,
      region = arnObject.region,
      accountId = arnObject.accountId,
      resource = arnObject.resource;

  if ([service, region, accountId, resource].some(function (segment) {
    return typeof segment !== "string";
  })) {
    throw new Error("Input ARN object is invalid");
  }

  return "arn:" + partition + ":" + service + ":" + region + ":" + accountId + ":" + resource;
};

/***/ }),

/***/ 21823:
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-create-request/dist/es/index.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createRequest": function() { return /* binding */ createRequest; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 41815);

function createRequest(client, command) {
  return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function () {
    var interceptMiddleware, clientStack, handler;

    var _this = this;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          interceptMiddleware = function interceptMiddleware(next) {
            return function (args) {
              return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(_this, void 0, void 0, function () {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_a) {
                  return [2
                  /*return*/
                  , {
                    output: {
                      request: args.request
                    },
                    response: undefined
                  }];
                });
              });
            };
          };

          clientStack = client.middlewareStack.clone(); // @ts-ignore: add middleware to the last of 'build' step

          clientStack.add(interceptMiddleware, {
            step: "build",
            priority: "low"
          });
          handler = command.resolveMiddleware(clientStack, client.config, undefined);
          return [4
          /*yield*/
          , handler(command).then(function (output) {
            return output.output.request;
          })];

        case 1:
          // @ts-ignore
          return [2
          /*return*/
          , _a.sent()];
      }
    });
  });
}

/***/ }),

/***/ 9385:
/*!****************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-format-url/dist/es/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatUrl": function() { return /* binding */ formatUrl; }
/* harmony export */ });
/* harmony import */ var _aws_sdk_querystring_builder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/querystring-builder */ 16949);

function formatUrl(request) {
  var port = request.port,
      query = request.query;
  var protocol = request.protocol,
      path = request.path,
      hostname = request.hostname;

  if (protocol && protocol.substr(-1) !== ":") {
    protocol += ":";
  }

  if (port) {
    hostname += ":" + port;
  }

  if (path && path.charAt(0) !== "/") {
    path = "/" + path;
  }

  var queryString = query ? (0,_aws_sdk_querystring_builder__WEBPACK_IMPORTED_MODULE_0__.buildQueryString)(query) : "";

  if (queryString && queryString[0] !== "?") {
    queryString = "?" + queryString;
  }

  return protocol + "//" + hostname + path + queryString;
}

/***/ }),

/***/ 70948:
/*!**************************************************************!*\
  !*** ./node_modules/@aws-sdk/xml-builder/dist/es/XmlNode.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "XmlNode": function() { return /* binding */ XmlNode; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 24745);
/* harmony import */ var _escape_attribute__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./escape-attribute */ 50520);


/**
 * Represents an XML node.
 */

var XmlNode = function () {
  function XmlNode(name, children) {
    if (children === void 0) {
      children = [];
    }

    this.name = name;
    this.children = children;
    this.attributes = {};
  }

  XmlNode.prototype.withName = function (name) {
    this.name = name;
    return this;
  };

  XmlNode.prototype.addAttribute = function (name, value) {
    this.attributes[name] = value;
    return this;
  };

  XmlNode.prototype.addChildNode = function (child) {
    this.children.push(child);
    return this;
  };

  XmlNode.prototype.removeAttribute = function (name) {
    delete this.attributes[name];
    return this;
  };

  XmlNode.prototype.toString = function () {
    var e_1, _a;

    var hasChildren = Boolean(this.children.length);
    var xmlText = "<" + this.name; // add attributes

    var attributes = this.attributes;

    try {
      for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {
        var attributeName = _c.value;
        var attribute = attributes[attributeName];

        if (typeof attribute !== "undefined" && attribute !== null) {
          xmlText += " " + attributeName + "=\"" + (0,_escape_attribute__WEBPACK_IMPORTED_MODULE_0__.escapeAttribute)("" + attribute) + "\"";
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    return xmlText += !hasChildren ? "/>" : ">" + this.children.map(function (c) {
      return c.toString();
    }).join("") + "</" + this.name + ">";
  };

  return XmlNode;
}();



/***/ }),

/***/ 43776:
/*!**************************************************************!*\
  !*** ./node_modules/@aws-sdk/xml-builder/dist/es/XmlText.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "XmlText": function() { return /* binding */ XmlText; }
/* harmony export */ });
/* harmony import */ var _escape_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./escape-element */ 90816);

/**
 * Represents an XML text value.
 */

var XmlText = function () {
  function XmlText(value) {
    this.value = value;
  }

  XmlText.prototype.toString = function () {
    return (0,_escape_element__WEBPACK_IMPORTED_MODULE_0__.escapeElement)("" + this.value);
  };

  return XmlText;
}();



/***/ }),

/***/ 50520:
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/xml-builder/dist/es/escape-attribute.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "escapeAttribute": function() { return /* binding */ escapeAttribute; }
/* harmony export */ });
/**
 * Escapes characters that can not be in an XML attribute.
 */
function escapeAttribute(value) {
  return value.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
}

/***/ }),

/***/ 90816:
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-sdk/xml-builder/dist/es/escape-element.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "escapeElement": function() { return /* binding */ escapeElement; }
/* harmony export */ });
/**
 * Escapes characters that can not be in an XML element.
 */
function escapeElement(value) {
  return value.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}

/***/ }),

/***/ 67003:
/*!************************************************************!*\
  !*** ./node_modules/@aws-sdk/xml-builder/dist/es/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "XmlNode": function() { return /* reexport safe */ _XmlNode__WEBPACK_IMPORTED_MODULE_0__.XmlNode; },
/* harmony export */   "XmlText": function() { return /* reexport safe */ _XmlText__WEBPACK_IMPORTED_MODULE_1__.XmlText; }
/* harmony export */ });
/* harmony import */ var _XmlNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./XmlNode */ 70948);
/* harmony import */ var _XmlText__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XmlText */ 43776);



/***/ }),

/***/ 87508:
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ (function(module) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var R = typeof Reflect === 'object' ? Reflect : null;
var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {
  return Function.prototype.apply.call(target, receiver, args);
};
var ReflectOwnKeys;

if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys;
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
};

function EventEmitter() {
  EventEmitter.init.call(this);
}

module.exports = EventEmitter;
module.exports.once = once; // Backwards-compat with node 0.10.x

EventEmitter.EventEmitter = EventEmitter;
EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.

var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function get() {
    return defaultMaxListeners;
  },
  set: function set(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }

    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function () {
  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}; // Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.


EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }

  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];

  for (var i = 1; i < arguments.length; i++) {
    args.push(arguments[i]);
  }

  var doError = type === 'error';
  var events = this._events;
  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.

  if (doError) {
    var er;
    if (args.length > 0) er = args[0];

    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    } // At least give some kind of context to the user


    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];
  if (handler === undefined) return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);

    for (var i = 0; i < len; ++i) {
      ReflectApply(listeners[i], this, args);
    }
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;
  checkListener(listener);
  events = target._events;

  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object

      events = target._events;
    }

    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    } // Check for listener leak


    m = _getMaxListeners(target);

    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true; // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax

      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener = function prependListener(type, listener) {
  return _addListener(this, type, listener, true);
};

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0) return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = {
    fired: false,
    wrapFn: undefined,
    target: target,
    type: type,
    listener: listener
  };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
  checkListener(listener);
  this.prependListener(type, _onceWrap(this, type, listener));
  return this;
}; // Emits a 'removeListener' event if and only if the listener was removed.


EventEmitter.prototype.removeListener = function removeListener(type, listener) {
  var list, events, position, i, originalListener;
  checkListener(listener);
  events = this._events;
  if (events === undefined) return this;
  list = events[type];
  if (list === undefined) return this;

  if (list === listener || list.listener === listener) {
    if (--this._eventsCount === 0) this._events = Object.create(null);else {
      delete events[type];
      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);
    }
  } else if (typeof list !== 'function') {
    position = -1;

    for (i = list.length - 1; i >= 0; i--) {
      if (list[i] === listener || list[i].listener === listener) {
        originalListener = list[i].listener;
        position = i;
        break;
      }
    }

    if (position < 0) return this;
    if (position === 0) list.shift();else {
      spliceOne(list, position);
    }
    if (list.length === 1) events[type] = list[0];
    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);
  }

  return this;
};

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
  var listeners, events, i;
  events = this._events;
  if (events === undefined) return this; // not listening for removeListener, no need to emit

  if (events.removeListener === undefined) {
    if (arguments.length === 0) {
      this._events = Object.create(null);
      this._eventsCount = 0;
    } else if (events[type] !== undefined) {
      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];
    }

    return this;
  } // emit removeListener for all listeners on all events


  if (arguments.length === 0) {
    var keys = Object.keys(events);
    var key;

    for (i = 0; i < keys.length; ++i) {
      key = keys[i];
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }

    this.removeAllListeners('removeListener');
    this._events = Object.create(null);
    this._eventsCount = 0;
    return this;
  }

  listeners = events[type];

  if (typeof listeners === 'function') {
    this.removeListener(type, listeners);
  } else if (listeners !== undefined) {
    // LIFO order
    for (i = listeners.length - 1; i >= 0; i--) {
      this.removeListener(type, listeners[i]);
    }
  }

  return this;
};

function _listeners(target, type, unwrap) {
  var events = target._events;
  if (events === undefined) return [];
  var evlistener = events[type];
  if (evlistener === undefined) return [];
  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];
  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function (emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;

function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);

  for (var i = 0; i < n; ++i) {
    copy[i] = arr[i];
  }

  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++) {
    list[index] = list[index + 1];
  }

  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);

  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }

  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }

      resolve([].slice.call(arguments));
    }

    ;
    eventTargetAgnosticAddListener(emitter, name, resolver, {
      once: true
    });

    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, {
        once: true
      });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }

      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}

/***/ }),

/***/ 12350:
/*!******************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/json2xml.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
 //parse Empty Node as self closing node

var buildOptions = __webpack_require__(/*! ./util */ 30989).buildOptions;

var defaultOptions = {
  attributeNamePrefix: '@_',
  attrNodeName: false,
  textNodeName: '#text',
  ignoreAttributes: true,
  cdataTagName: false,
  cdataPositionChar: '\\c',
  format: false,
  indentBy: '  ',
  supressEmptyNode: false,
  tagValueProcessor: function tagValueProcessor(a) {
    return a;
  },
  attrValueProcessor: function attrValueProcessor(a) {
    return a;
  }
};
var props = ['attributeNamePrefix', 'attrNodeName', 'textNodeName', 'ignoreAttributes', 'cdataTagName', 'cdataPositionChar', 'format', 'indentBy', 'supressEmptyNode', 'tagValueProcessor', 'attrValueProcessor'];

function Parser(options) {
  this.options = buildOptions(options, defaultOptions, props);

  if (this.options.ignoreAttributes || this.options.attrNodeName) {
    this.isAttribute = function () {
      return false;
    };
  } else {
    this.attrPrefixLen = this.options.attributeNamePrefix.length;
    this.isAttribute = isAttribute;
  }

  if (this.options.cdataTagName) {
    this.isCDATA = isCDATA;
  } else {
    this.isCDATA = function () {
      return false;
    };
  }

  this.replaceCDATAstr = replaceCDATAstr;
  this.replaceCDATAarr = replaceCDATAarr;

  if (this.options.format) {
    this.indentate = indentate;
    this.tagEndChar = '>\n';
    this.newLine = '\n';
  } else {
    this.indentate = function () {
      return '';
    };

    this.tagEndChar = '>';
    this.newLine = '';
  }

  if (this.options.supressEmptyNode) {
    this.buildTextNode = buildEmptyTextNode;
    this.buildObjNode = buildEmptyObjNode;
  } else {
    this.buildTextNode = buildTextValNode;
    this.buildObjNode = buildObjectNode;
  }

  this.buildTextValNode = buildTextValNode;
  this.buildObjectNode = buildObjectNode;
}

Parser.prototype.parse = function (jObj) {
  return this.j2x(jObj, 0).val;
};

Parser.prototype.j2x = function (jObj, level) {
  var attrStr = '';
  var val = '';
  var keys = Object.keys(jObj);
  var len = keys.length;

  for (var i = 0; i < len; i++) {
    var key = keys[i];

    if (typeof jObj[key] === 'undefined') {// supress undefined node
    } else if (jObj[key] === null) {
      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;
    } else if (jObj[key] instanceof Date) {
      val += this.buildTextNode(jObj[key], key, '', level);
    } else if (typeof jObj[key] !== 'object') {
      //premitive type
      var attr = this.isAttribute(key);

      if (attr) {
        attrStr += ' ' + attr + '="' + this.options.attrValueProcessor('' + jObj[key]) + '"';
      } else if (this.isCDATA(key)) {
        if (jObj[this.options.textNodeName]) {
          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);
        } else {
          val += this.replaceCDATAstr('', jObj[key]);
        }
      } else {
        //tag value
        if (key === this.options.textNodeName) {
          if (jObj[this.options.cdataTagName]) {//value will added while processing cdata
          } else {
            val += this.options.tagValueProcessor('' + jObj[key]);
          }
        } else {
          val += this.buildTextNode(jObj[key], key, '', level);
        }
      }
    } else if (Array.isArray(jObj[key])) {
      //repeated nodes
      if (this.isCDATA(key)) {
        val += this.indentate(level);

        if (jObj[this.options.textNodeName]) {
          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);
        } else {
          val += this.replaceCDATAarr('', jObj[key]);
        }
      } else {
        //nested nodes
        var arrLen = jObj[key].length;

        for (var j = 0; j < arrLen; j++) {
          var item = jObj[key][j];

          if (typeof item === 'undefined') {// supress undefined node
          } else if (item === null) {
            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;
          } else if (typeof item === 'object') {
            var result = this.j2x(item, level + 1);
            val += this.buildObjNode(result.val, key, result.attrStr, level);
          } else {
            val += this.buildTextNode(item, key, '', level);
          }
        }
      }
    } else {
      //nested node
      if (this.options.attrNodeName && key === this.options.attrNodeName) {
        var Ks = Object.keys(jObj[key]);
        var L = Ks.length;

        for (var _j = 0; _j < L; _j++) {
          attrStr += ' ' + Ks[_j] + '="' + this.options.attrValueProcessor('' + jObj[key][Ks[_j]]) + '"';
        }
      } else {
        var _result = this.j2x(jObj[key], level + 1);

        val += this.buildObjNode(_result.val, key, _result.attrStr, level);
      }
    }
  }

  return {
    attrStr: attrStr,
    val: val
  };
};

function replaceCDATAstr(str, cdata) {
  str = this.options.tagValueProcessor('' + str);

  if (this.options.cdataPositionChar === '' || str === '') {
    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;
  } else {
    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);
  }
}

function replaceCDATAarr(str, cdata) {
  str = this.options.tagValueProcessor('' + str);

  if (this.options.cdataPositionChar === '' || str === '') {
    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;
  } else {
    for (var v in cdata) {
      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');
    }

    return str + this.newLine;
  }
}

function buildObjectNode(val, key, attrStr, level) {
  if (attrStr && !val.includes('<')) {
    return this.indentate(level) + '<' + key + attrStr + '>' + val + //+ this.newLine
    // + this.indentate(level)
    '</' + key + this.tagEndChar;
  } else {
    return this.indentate(level) + '<' + key + attrStr + this.tagEndChar + val + //+ this.newLine
    this.indentate(level) + '</' + key + this.tagEndChar;
  }
}

function buildEmptyObjNode(val, key, attrStr, level) {
  if (val !== '') {
    return this.buildObjectNode(val, key, attrStr, level);
  } else {
    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar; //+ this.newLine
  }
}

function buildTextValNode(val, key, attrStr, level) {
  return this.indentate(level) + '<' + key + attrStr + '>' + this.options.tagValueProcessor(val) + '</' + key + this.tagEndChar;
}

function buildEmptyTextNode(val, key, attrStr, level) {
  if (val !== '') {
    return this.buildTextValNode(val, key, attrStr, level);
  } else {
    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;
  }
}

function indentate(level) {
  return this.options.indentBy.repeat(level);
}

function isAttribute(name
/*, options*/
) {
  if (name.startsWith(this.options.attributeNamePrefix)) {
    return name.substr(this.attrPrefixLen);
  } else {
    return false;
  }
}

function isCDATA(name) {
  return name === this.options.cdataTagName;
} //formatting
//indentation
//\n after each closing or self closing tag


module.exports = Parser;

/***/ }),

/***/ 77692:
/*!******************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/nimndata.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var char = function char(a) {
  return String.fromCharCode(a);
};

var chars = {
  nilChar: char(176),
  missingChar: char(201),
  nilPremitive: char(175),
  missingPremitive: char(200),
  emptyChar: char(178),
  emptyValue: char(177),
  //empty Premitive
  boundryChar: char(179),
  objStart: char(198),
  arrStart: char(204),
  arrayEnd: char(185)
};
var charsArr = [chars.nilChar, chars.nilPremitive, chars.missingChar, chars.missingPremitive, chars.boundryChar, chars.emptyChar, chars.emptyValue, chars.arrayEnd, chars.objStart, chars.arrStart];

var _e = function _e(node, e_schema, options) {
  if (typeof e_schema === 'string') {
    //premitive
    if (node && node[0] && node[0].val !== undefined) {
      return getValue(node[0].val, e_schema);
    } else {
      return getValue(node, e_schema);
    }
  } else {
    var hasValidData = hasData(node);

    if (hasValidData === true) {
      var str = '';

      if (Array.isArray(e_schema)) {
        //attributes can't be repeated. hence check in children tags only
        str += chars.arrStart;
        var itemSchema = e_schema[0]; //var itemSchemaType = itemSchema;

        var arr_len = node.length;

        if (typeof itemSchema === 'string') {
          for (var arr_i = 0; arr_i < arr_len; arr_i++) {
            var r = getValue(node[arr_i].val, itemSchema);
            str = processValue(str, r);
          }
        } else {
          for (var _arr_i = 0; _arr_i < arr_len; _arr_i++) {
            var _r = _e(node[_arr_i], itemSchema, options);

            str = processValue(str, _r);
          }
        }

        str += chars.arrayEnd; //indicates that next item is not array item
      } else {
        //object
        str += chars.objStart;
        var keys = Object.keys(e_schema);

        if (Array.isArray(node)) {
          node = node[0];
        }

        for (var i in keys) {
          var key = keys[i]; //a property defined in schema can be present either in attrsMap or children tags
          //options.textNodeName will not present in both maps, take it's value from val
          //options.attrNodeName will be present in attrsMap

          var _r2 = void 0;

          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {
            _r2 = _e(node.attrsMap[key], e_schema[key], options);
          } else if (key === options.textNodeName) {
            _r2 = _e(node.val, e_schema[key], options);
          } else {
            _r2 = _e(node.child[key], e_schema[key], options);
          }

          str = processValue(str, _r2);
        }
      }

      return str;
    } else {
      return hasValidData;
    }
  }
};

var getValue = function getValue(a
/*, type*/
) {
  switch (a) {
    case undefined:
      return chars.missingPremitive;

    case null:
      return chars.nilPremitive;

    case '':
      return chars.emptyValue;

    default:
      return a;
  }
};

var processValue = function processValue(str, r) {
  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {
    str += chars.boundryChar;
  }

  return str + r;
};

var isAppChar = function isAppChar(ch) {
  return charsArr.indexOf(ch) !== -1;
};

function hasData(jObj) {
  if (jObj === undefined) {
    return chars.missingChar;
  } else if (jObj === null) {
    return chars.nilChar;
  } else if (jObj.child && Object.keys(jObj.child).length === 0 && (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)) {
    return chars.emptyChar;
  } else {
    return true;
  }
}

var x2j = __webpack_require__(/*! ./xmlstr2xmlnode */ 10521);

var buildOptions = __webpack_require__(/*! ./util */ 30989).buildOptions;

var convert2nimn = function convert2nimn(node, e_schema, options) {
  options = buildOptions(options, x2j.defaultOptions, x2j.props);
  return _e(node, e_schema, options);
};

exports.convert2nimn = convert2nimn;

/***/ }),

/***/ 5616:
/*!*******************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/node2json.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var util = __webpack_require__(/*! ./util */ 30989);

var convertToJson = function convertToJson(node, options, parentTagName) {
  var jObj = {}; // when no child node or attr is present

  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {
    return util.isExist(node.val) ? node.val : '';
  } // otherwise create a textnode if node has some text


  if (util.isExist(node.val) && !(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {
    var asArray = util.isTagNameInArrayMode(node.tagname, options.arrayMode, parentTagName);
    jObj[options.textNodeName] = asArray ? [node.val] : node.val;
  }

  util.merge(jObj, node.attrsMap, options.arrayMode);
  var keys = Object.keys(node.child);

  for (var index = 0; index < keys.length; index++) {
    var tagName = keys[index];

    if (node.child[tagName] && node.child[tagName].length > 1) {
      jObj[tagName] = [];

      for (var tag in node.child[tagName]) {
        if (node.child[tagName].hasOwnProperty(tag)) {
          jObj[tagName].push(convertToJson(node.child[tagName][tag], options, tagName));
        }
      }
    } else {
      var result = convertToJson(node.child[tagName][0], options, tagName);

      var _asArray = options.arrayMode === true && typeof result === 'object' || util.isTagNameInArrayMode(tagName, options.arrayMode, parentTagName);

      jObj[tagName] = _asArray ? [result] : result;
    }
  } //add value


  return jObj;
};

exports.convertToJson = convertToJson;

/***/ }),

/***/ 40269:
/*!***********************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/node2json_str.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var util = __webpack_require__(/*! ./util */ 30989);

var buildOptions = __webpack_require__(/*! ./util */ 30989).buildOptions;

var x2j = __webpack_require__(/*! ./xmlstr2xmlnode */ 10521); //TODO: do it later


var convertToJsonString = function convertToJsonString(node, options) {
  options = buildOptions(options, x2j.defaultOptions, x2j.props);
  options.indentBy = options.indentBy || '';
  return _cToJsonStr(node, options, 0);
};

var _cToJsonStr = function _cToJsonStr(node, options, level) {
  var jObj = '{'; //traver through all the children

  var keys = Object.keys(node.child);

  for (var index = 0; index < keys.length; index++) {
    var tagname = keys[index];

    if (node.child[tagname] && node.child[tagname].length > 1) {
      jObj += '"' + tagname + '" : [ ';

      for (var tag in node.child[tagname]) {
        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';
      }

      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last
    } else {
      jObj += '"' + tagname + '" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';
    }
  }

  util.merge(jObj, node.attrsMap); //add attrsMap as new children

  if (util.isEmptyObject(jObj)) {
    return util.isExist(node.val) ? node.val : '';
  } else {
    if (util.isExist(node.val)) {
      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {
        jObj += '"' + options.textNodeName + '" : ' + stringval(node.val);
      }
    }
  } //add value


  if (jObj[jObj.length - 1] === ',') {
    jObj = jObj.substr(0, jObj.length - 2);
  }

  return jObj + '}';
};

function stringval(v) {
  if (v === true || v === false || !isNaN(v)) {
    return v;
  } else {
    return '"' + v + '"';
  }
}

function indentate(options, level) {
  return options.indentBy.repeat(level);
}

exports.convertToJsonString = convertToJsonString;

/***/ }),

/***/ 78642:
/*!****************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/parser.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var nodeToJson = __webpack_require__(/*! ./node2json */ 5616);

var xmlToNodeobj = __webpack_require__(/*! ./xmlstr2xmlnode */ 10521);

var x2xmlnode = __webpack_require__(/*! ./xmlstr2xmlnode */ 10521);

var buildOptions = __webpack_require__(/*! ./util */ 30989).buildOptions;

var validator = __webpack_require__(/*! ./validator */ 29371);

exports.parse = function (xmlData) {
  var givenOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var validationOption = arguments.length > 2 ? arguments[2] : undefined;

  if (validationOption) {
    if (validationOption === true) validationOption = {};
    var result = validator.validate(xmlData, validationOption);

    if (result !== true) {
      throw Error(result.err.msg);
    }
  }

  if (givenOptions.parseTrueNumberOnly && givenOptions.parseNodeValue !== false && !givenOptions.numParseOptions) {
    givenOptions.numParseOptions = {
      leadingZeros: false
    };
  }

  var options = buildOptions(givenOptions, x2xmlnode.defaultOptions, x2xmlnode.props);
  var traversableObj = xmlToNodeobj.getTraversalObj(xmlData, options); //print(traversableObj, "  ");

  return nodeToJson.convertToJson(traversableObj, options);
};

exports.convertTonimn = __webpack_require__(/*! ./nimndata */ 77692).convert2nimn;
exports.getTraversalObj = xmlToNodeobj.getTraversalObj;
exports.convertToJson = nodeToJson.convertToJson;
exports.convertToJsonString = __webpack_require__(/*! ./node2json_str */ 40269).convertToJsonString;
exports.validate = validator.validate;
exports.j2xParser = __webpack_require__(/*! ./json2xml */ 12350);

exports.parseToNimn = function (xmlData, schema, options) {
  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);
};

function print(xmlNode, indentation) {
  if (xmlNode) {
    console.log(indentation + "{");
    console.log(indentation + "  \"tagName\": \"" + xmlNode.tagname + "\", ");

    if (xmlNode.parent) {
      console.log(indentation + "  \"parent\": \"" + xmlNode.parent.tagname + "\", ");
    }

    console.log(indentation + "  \"val\": \"" + xmlNode.val + "\", ");
    console.log(indentation + "  \"attrs\": " + JSON.stringify(xmlNode.attrsMap, null, 4) + ", ");

    if (xmlNode.child) {
      console.log(indentation + "\"child\": {");
      var indentation2 = indentation + indentation;
      Object.keys(xmlNode.child).forEach(function (key) {
        var node = xmlNode.child[key];

        if (Array.isArray(node)) {
          console.log(indentation + "\"" + key + "\" :[");
          node.forEach(function (item, index) {
            //console.log(indentation + " \""+index+"\" : [")
            print(item, indentation2);
          });
          console.log(indentation + "],");
        } else {
          console.log(indentation + " \"" + key + "\" : {");
          print(node, indentation2);
          console.log(indentation + "},");
        }
      });
      console.log(indentation + "},");
    }

    console.log(indentation + "},");
  }
}

/***/ }),

/***/ 30989:
/*!**************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/util.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";


var nameStartChar = ":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
var nameChar = nameStartChar + "\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
var nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*';
var regexName = new RegExp('^' + nameRegexp + '$');

var getAllMatches = function getAllMatches(string, regex) {
  var matches = [];
  var match = regex.exec(string);

  while (match) {
    var allmatches = [];
    var len = match.length;

    for (var index = 0; index < len; index++) {
      allmatches.push(match[index]);
    }

    matches.push(allmatches);
    match = regex.exec(string);
  }

  return matches;
};

var isName = function isName(string) {
  var match = regexName.exec(string);
  return !(match === null || typeof match === 'undefined');
};

exports.isExist = function (v) {
  return typeof v !== 'undefined';
};

exports.isEmptyObject = function (obj) {
  return Object.keys(obj).length === 0;
};
/**
 * Copy all the properties of a into b.
 * @param {*} target
 * @param {*} a
 */


exports.merge = function (target, a, arrayMode) {
  if (a) {
    var keys = Object.keys(a); // will return an array of own properties

    var len = keys.length; //don't make it inline

    for (var i = 0; i < len; i++) {
      if (arrayMode === 'strict') {
        target[keys[i]] = [a[keys[i]]];
      } else {
        target[keys[i]] = a[keys[i]];
      }
    }
  }
};
/* exports.merge =function (b,a){
  return Object.assign(b,a);
} */


exports.getValue = function (v) {
  if (exports.isExist(v)) {
    return v;
  } else {
    return '';
  }
}; // const fakeCall = function(a) {return a;};
// const fakeCallNoReturn = function() {};


exports.buildOptions = function (options, defaultOptions, props) {
  var newOptions = {};

  if (!options) {
    return defaultOptions; //if there are not options
  }

  for (var i = 0; i < props.length; i++) {
    if (options[props[i]] !== undefined) {
      newOptions[props[i]] = options[props[i]];
    } else {
      newOptions[props[i]] = defaultOptions[props[i]];
    }
  }

  return newOptions;
};
/**
 * Check if a tag name should be treated as array
 *
 * @param tagName the node tagname
 * @param arrayMode the array mode option
 * @param parentTagName the parent tag name
 * @returns {boolean} true if node should be parsed as array
 */


exports.isTagNameInArrayMode = function (tagName, arrayMode, parentTagName) {
  if (arrayMode === false) {
    return false;
  } else if (arrayMode instanceof RegExp) {
    return arrayMode.test(tagName);
  } else if (typeof arrayMode === 'function') {
    return !!arrayMode(tagName, parentTagName);
  }

  return arrayMode === "strict";
};

exports.isName = isName;
exports.getAllMatches = getAllMatches;
exports.nameRegexp = nameRegexp;

/***/ }),

/***/ 29371:
/*!*******************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/validator.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var util = __webpack_require__(/*! ./util */ 30989);

var defaultOptions = {
  allowBooleanAttributes: false //A tag can have attributes without any value

};
var props = ['allowBooleanAttributes']; //const tagsPattern = new RegExp("<\\/?([\\w:\\-_\.]+)\\s*\/?>","g");

exports.validate = function (xmlData, options) {
  options = util.buildOptions(options, defaultOptions, props); //xmlData = xmlData.replace(/(\r\n|\n|\r)/gm,"");//make it single line
  //xmlData = xmlData.replace(/(^\s*<\?xml.*?\?>)/g,"");//Remove XML starting tag
  //xmlData = xmlData.replace(/(<!DOCTYPE[\s\w\"\.\/\-\:]+(\[.*\])*\s*>)/g,"");//Remove DOCTYPE

  var tags = [];
  var tagFound = false; //indicates that the root tag has been closed (aka. depth 0 has been reached)

  var reachedRoot = false;

  if (xmlData[0] === "\uFEFF") {
    // check for byte order mark (BOM)
    xmlData = xmlData.substr(1);
  }

  for (var i = 0; i < xmlData.length; i++) {
    if (xmlData[i] === '<' && xmlData[i + 1] === '?') {
      i += 2;
      i = readPI(xmlData, i);
      if (i.err) return i;
    } else if (xmlData[i] === '<') {
      //starting of tag
      //read until you reach to '>' avoiding any '>' in attribute value
      i++;

      if (xmlData[i] === '!') {
        i = readCommentAndCDATA(xmlData, i);
        continue;
      } else {
        var closingTag = false;

        if (xmlData[i] === '/') {
          //closing tag
          closingTag = true;
          i++;
        } //read tagname


        var tagName = '';

        for (; i < xmlData.length && xmlData[i] !== '>' && xmlData[i] !== ' ' && xmlData[i] !== '\t' && xmlData[i] !== '\n' && xmlData[i] !== '\r'; i++) {
          tagName += xmlData[i];
        }

        tagName = tagName.trim(); //console.log(tagName);

        if (tagName[tagName.length - 1] === '/') {
          //self closing tag without attributes
          tagName = tagName.substring(0, tagName.length - 1); //continue;

          i--;
        }

        if (!validateTagName(tagName)) {
          var msg = void 0;

          if (tagName.trim().length === 0) {
            msg = "There is an unnecessary space between tag name and backward slash '</ ..'.";
          } else {
            msg = "Tag '" + tagName + "' is an invalid name.";
          }

          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));
        }

        var result = readAttributeStr(xmlData, i);

        if (result === false) {
          return getErrorObject('InvalidAttr', "Attributes for '" + tagName + "' have open quote.", getLineNumberForPosition(xmlData, i));
        }

        var attrStr = result.value;
        i = result.index;

        if (attrStr[attrStr.length - 1] === '/') {
          //self closing tag
          attrStr = attrStr.substring(0, attrStr.length - 1);
          var isValid = validateAttributeString(attrStr, options);

          if (isValid === true) {
            tagFound = true; //continue; //text may presents after self closing tag
          } else {
            //the result from the nested function returns the position of the error within the attribute
            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute
            //this gives us the absolute index in the entire xml, which we can use to find the line at last
            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));
          }
        } else if (closingTag) {
          if (!result.tagClosed) {
            return getErrorObject('InvalidTag', "Closing tag '" + tagName + "' doesn't have proper closing.", getLineNumberForPosition(xmlData, i));
          } else if (attrStr.trim().length > 0) {
            return getErrorObject('InvalidTag', "Closing tag '" + tagName + "' can't have attributes or invalid starting.", getLineNumberForPosition(xmlData, i));
          } else {
            var otg = tags.pop();

            if (tagName !== otg) {
              return getErrorObject('InvalidTag', "Closing tag '" + otg + "' is expected inplace of '" + tagName + "'.", getLineNumberForPosition(xmlData, i));
            } //when there are no more tags, we reached the root level.


            if (tags.length == 0) {
              reachedRoot = true;
            }
          }
        } else {
          var _isValid = validateAttributeString(attrStr, options);

          if (_isValid !== true) {
            //the result from the nested function returns the position of the error within the attribute
            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute
            //this gives us the absolute index in the entire xml, which we can use to find the line at last
            return getErrorObject(_isValid.err.code, _isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + _isValid.err.line));
          } //if the root level has been reached before ...


          if (reachedRoot === true) {
            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));
          } else {
            tags.push(tagName);
          }

          tagFound = true;
        } //skip tag text value
        //It may include comments and CDATA value


        for (i++; i < xmlData.length; i++) {
          if (xmlData[i] === '<') {
            if (xmlData[i + 1] === '!') {
              //comment or CADATA
              i++;
              i = readCommentAndCDATA(xmlData, i);
              continue;
            } else if (xmlData[i + 1] === '?') {
              i = readPI(xmlData, ++i);
              if (i.err) return i;
            } else {
              break;
            }
          } else if (xmlData[i] === '&') {
            var afterAmp = validateAmpersand(xmlData, i);
            if (afterAmp == -1) return getErrorObject('InvalidChar', "char '&' is not expected.", getLineNumberForPosition(xmlData, i));
            i = afterAmp;
          }
        } //end of reading tag text value


        if (xmlData[i] === '<') {
          i--;
        }
      }
    } else {
      if (xmlData[i] === ' ' || xmlData[i] === '\t' || xmlData[i] === '\n' || xmlData[i] === '\r') {
        continue;
      }

      return getErrorObject('InvalidChar', "char '" + xmlData[i] + "' is not expected.", getLineNumberForPosition(xmlData, i));
    }
  }

  if (!tagFound) {
    return getErrorObject('InvalidXml', 'Start tag expected.', 1);
  } else if (tags.length > 0) {
    return getErrorObject('InvalidXml', "Invalid '" + JSON.stringify(tags, null, 4).replace(/\r?\n/g, '') + "' found.", 1);
  }

  return true;
};
/**
 * Read Processing insstructions and skip
 * @param {*} xmlData
 * @param {*} i
 */


function readPI(xmlData, i) {
  var start = i;

  for (; i < xmlData.length; i++) {
    if (xmlData[i] == '?' || xmlData[i] == ' ') {
      //tagname
      var tagname = xmlData.substr(start, i - start);

      if (i > 5 && tagname === 'xml') {
        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));
      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {
        //check if valid attribut string
        i++;
        break;
      } else {
        continue;
      }
    }
  }

  return i;
}

function readCommentAndCDATA(xmlData, i) {
  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {
    //comment
    for (i += 3; i < xmlData.length; i++) {
      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {
        i += 2;
        break;
      }
    }
  } else if (xmlData.length > i + 8 && xmlData[i + 1] === 'D' && xmlData[i + 2] === 'O' && xmlData[i + 3] === 'C' && xmlData[i + 4] === 'T' && xmlData[i + 5] === 'Y' && xmlData[i + 6] === 'P' && xmlData[i + 7] === 'E') {
    var angleBracketsCount = 1;

    for (i += 8; i < xmlData.length; i++) {
      if (xmlData[i] === '<') {
        angleBracketsCount++;
      } else if (xmlData[i] === '>') {
        angleBracketsCount--;

        if (angleBracketsCount === 0) {
          break;
        }
      }
    }
  } else if (xmlData.length > i + 9 && xmlData[i + 1] === '[' && xmlData[i + 2] === 'C' && xmlData[i + 3] === 'D' && xmlData[i + 4] === 'A' && xmlData[i + 5] === 'T' && xmlData[i + 6] === 'A' && xmlData[i + 7] === '[') {
    for (i += 8; i < xmlData.length; i++) {
      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {
        i += 2;
        break;
      }
    }
  }

  return i;
}

var doubleQuote = '"';
var singleQuote = "'";
/**
 * Keep reading xmlData until '<' is found outside the attribute value.
 * @param {string} xmlData
 * @param {number} i
 */

function readAttributeStr(xmlData, i) {
  var attrStr = '';
  var startChar = '';
  var tagClosed = false;

  for (; i < xmlData.length; i++) {
    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {
      if (startChar === '') {
        startChar = xmlData[i];
      } else if (startChar !== xmlData[i]) {
        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa
        continue;
      } else {
        startChar = '';
      }
    } else if (xmlData[i] === '>') {
      if (startChar === '') {
        tagClosed = true;
        break;
      }
    }

    attrStr += xmlData[i];
  }

  if (startChar !== '') {
    return false;
  }

  return {
    value: attrStr,
    index: i,
    tagClosed: tagClosed
  };
}
/**
 * Select all the attributes whether valid or invalid.
 */


var validAttrStrRegxp = new RegExp('(\\s*)([^\\s=]+)(\\s*=)?(\\s*([\'"])(([\\s\\S])*?)\\5)?', 'g'); //attr, ="sd", a="amit's", a="sd"b="saf", ab  cd=""

function validateAttributeString(attrStr, options) {
  //console.log("start:"+attrStr+":end");
  //if(attrStr.trim().length === 0) return true; //empty string
  var matches = util.getAllMatches(attrStr, validAttrStrRegxp);
  var attrNames = {};

  for (var i = 0; i < matches.length; i++) {
    if (matches[i][1].length === 0) {
      //nospace before attribute name: a="sd"b="saf"
      return getErrorObject('InvalidAttr', "Attribute '" + matches[i][2] + "' has no space in starting.", getPositionFromMatch(attrStr, matches[i][0]));
    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {
      //independent attribute: ab
      return getErrorObject('InvalidAttr', "boolean attribute '" + matches[i][2] + "' is not allowed.", getPositionFromMatch(attrStr, matches[i][0]));
    }
    /* else if(matches[i][6] === undefined){//attribute without value: ab=
                    return { err: { code:"InvalidAttr",msg:"attribute " + matches[i][2] + " has no value assigned."}};
                } */


    var attrName = matches[i][2];

    if (!validateAttrName(attrName)) {
      return getErrorObject('InvalidAttr', "Attribute '" + attrName + "' is an invalid name.", getPositionFromMatch(attrStr, matches[i][0]));
    }

    if (!attrNames.hasOwnProperty(attrName)) {
      //check for duplicate attribute.
      attrNames[attrName] = 1;
    } else {
      return getErrorObject('InvalidAttr', "Attribute '" + attrName + "' is repeated.", getPositionFromMatch(attrStr, matches[i][0]));
    }
  }

  return true;
}

function validateNumberAmpersand(xmlData, i) {
  var re = /\d/;

  if (xmlData[i] === 'x') {
    i++;
    re = /[\da-fA-F]/;
  }

  for (; i < xmlData.length; i++) {
    if (xmlData[i] === ';') return i;
    if (!xmlData[i].match(re)) break;
  }

  return -1;
}

function validateAmpersand(xmlData, i) {
  // https://www.w3.org/TR/xml/#dt-charref
  i++;
  if (xmlData[i] === ';') return -1;

  if (xmlData[i] === '#') {
    i++;
    return validateNumberAmpersand(xmlData, i);
  }

  var count = 0;

  for (; i < xmlData.length; i++, count++) {
    if (xmlData[i].match(/\w/) && count < 20) continue;
    if (xmlData[i] === ';') break;
    return -1;
  }

  return i;
}

function getErrorObject(code, message, lineNumber) {
  return {
    err: {
      code: code,
      msg: message,
      line: lineNumber
    }
  };
}

function validateAttrName(attrName) {
  return util.isName(attrName);
} // const startsWithXML = /^xml/i;


function validateTagName(tagname) {
  return util.isName(tagname)
  /* && !tagname.match(startsWithXML) */
  ;
} //this function returns the line number for the character at the given index


function getLineNumberForPosition(xmlData, index) {
  var lines = xmlData.substring(0, index).split(/\r?\n/);
  return lines.length;
} //this function returns the position of the last character of match within attrStr


function getPositionFromMatch(attrStr, match) {
  return attrStr.indexOf(match) + match.length;
}

/***/ }),

/***/ 96367:
/*!*****************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/xmlNode.js ***!
  \*****************************************************/
/***/ (function(module) {

"use strict";


module.exports = function (tagname, parent, val) {
  this.tagname = tagname;
  this.parent = parent;
  this.child = {}; //child tags

  this.attrsMap = {}; //attributes map

  this.val = val; //text only

  this.addChild = function (child) {
    if (Array.isArray(this.child[child.tagname])) {
      //already presents
      this.child[child.tagname].push(child);
    } else {
      this.child[child.tagname] = [child];
    }
  };
};

/***/ }),

/***/ 10521:
/*!************************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var util = __webpack_require__(/*! ./util */ 30989);

var buildOptions = __webpack_require__(/*! ./util */ 30989).buildOptions;

var xmlNode = __webpack_require__(/*! ./xmlNode */ 96367);

var toNumber = __webpack_require__(/*! strnum */ 36139);

var regx = '<((!\\[CDATA\\[([\\s\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\/)(NAME)\\s*>))([^<]*)'.replace(/NAME/g, util.nameRegexp); //const tagsRegx = new RegExp("<(\\/?[\\w:\\-\._]+)([^>]*)>(\\s*"+cdataRegx+")*([^<]+)?","g");
//const tagsRegx = new RegExp("<(\\/?)((\\w*:)?([\\w:\\-\._]+))([^>]*)>([^<]*)("+cdataRegx+"([^<]*))*([^<]+)?","g");
//polyfill

if (!Number.parseInt && window.parseInt) {
  Number.parseInt = window.parseInt;
}

if (!Number.parseFloat && window.parseFloat) {
  Number.parseFloat = window.parseFloat;
}

var defaultOptions = {
  attributeNamePrefix: '@_',
  attrNodeName: false,
  textNodeName: '#text',
  ignoreAttributes: true,
  ignoreNameSpace: false,
  allowBooleanAttributes: false,
  //a tag can have attributes without any value
  //ignoreRootElement : false,
  parseNodeValue: true,
  parseAttributeValue: false,
  arrayMode: false,
  trimValues: true,
  //Trim string values of tag and attributes
  cdataTagName: false,
  cdataPositionChar: '\\c',
  numParseOptions: {
    hex: true,
    leadingZeros: true
  },
  tagValueProcessor: function tagValueProcessor(a, tagName) {
    return a;
  },
  attrValueProcessor: function attrValueProcessor(a, attrName) {
    return a;
  },
  stopNodes: [] //decodeStrict: false,

};
exports.defaultOptions = defaultOptions;
var props = ['attributeNamePrefix', 'attrNodeName', 'textNodeName', 'ignoreAttributes', 'ignoreNameSpace', 'allowBooleanAttributes', 'parseNodeValue', 'parseAttributeValue', 'arrayMode', 'trimValues', 'cdataTagName', 'cdataPositionChar', 'tagValueProcessor', 'attrValueProcessor', 'parseTrueNumberOnly', 'numParseOptions', 'stopNodes'];
exports.props = props;
/**
 * Trim -> valueProcessor -> parse value
 * @param {string} tagName
 * @param {string} val
 * @param {object} options
 */

function processTagValue(tagName, val, options) {
  if (val) {
    if (options.trimValues) {
      val = val.trim();
    }

    val = options.tagValueProcessor(val, tagName);
    val = parseValue(val, options.parseNodeValue, options.numParseOptions);
  }

  return val;
}

function resolveNameSpace(tagname, options) {
  if (options.ignoreNameSpace) {
    var tags = tagname.split(':');
    var prefix = tagname.charAt(0) === '/' ? '/' : '';

    if (tags[0] === 'xmlns') {
      return '';
    }

    if (tags.length === 2) {
      tagname = prefix + tags[1];
    }
  }

  return tagname;
}

function parseValue(val, shouldParse, options) {
  if (shouldParse && typeof val === 'string') {
    //console.log(options)
    var newval = val.trim();
    if (newval === 'true') return true;else if (newval === 'false') return false;else return toNumber(val, options);
  } else {
    if (util.isExist(val)) {
      return val;
    } else {
      return '';
    }
  }
} //TODO: change regex to capture NS
//const attrsRegx = new RegExp("([\\w\\-\\.\\:]+)\\s*=\\s*(['\"])((.|\n)*?)\\2","gm");


var attrsRegx = new RegExp('([^\\s=]+)\\s*(=\\s*([\'"])(.*?)\\3)?', 'g');

function buildAttributesMap(attrStr, options) {
  if (!options.ignoreAttributes && typeof attrStr === 'string') {
    attrStr = attrStr.replace(/\r?\n/g, ' '); //attrStr = attrStr || attrStr.trim();

    var matches = util.getAllMatches(attrStr, attrsRegx);
    var len = matches.length; //don't make it inline

    var attrs = {};

    for (var i = 0; i < len; i++) {
      var attrName = resolveNameSpace(matches[i][1], options);

      if (attrName.length) {
        if (matches[i][4] !== undefined) {
          if (options.trimValues) {
            matches[i][4] = matches[i][4].trim();
          }

          matches[i][4] = options.attrValueProcessor(matches[i][4], attrName);
          attrs[options.attributeNamePrefix + attrName] = parseValue(matches[i][4], options.parseAttributeValue, options.numParseOptions);
        } else if (options.allowBooleanAttributes) {
          attrs[options.attributeNamePrefix + attrName] = true;
        }
      }
    }

    if (!Object.keys(attrs).length) {
      return;
    }

    if (options.attrNodeName) {
      var attrCollection = {};
      attrCollection[options.attrNodeName] = attrs;
      return attrCollection;
    }

    return attrs;
  }
}

var getTraversalObj = function getTraversalObj(xmlData, options) {
  xmlData = xmlData.replace(/\r\n?/g, "\n");
  options = buildOptions(options, defaultOptions, props);
  var xmlObj = new xmlNode('!xml');
  var currentNode = xmlObj;
  var textData = ""; //function match(xmlData){

  for (var i = 0; i < xmlData.length; i++) {
    var ch = xmlData[i];

    if (ch === '<') {
      if (xmlData[i + 1] === '/') {
        //Closing Tag
        var closeIndex = findClosingIndex(xmlData, ">", i, "Closing Tag is not closed.");
        var tagName = xmlData.substring(i + 2, closeIndex).trim();

        if (options.ignoreNameSpace) {
          var colonIndex = tagName.indexOf(":");

          if (colonIndex !== -1) {
            tagName = tagName.substr(colonIndex + 1);
          }
        }
        /* if (currentNode.parent) {
          currentNode.parent.val = util.getValue(currentNode.parent.val) + '' + processTagValue2(tagName, textData , options);
        } */


        if (currentNode) {
          if (currentNode.val) {
            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(tagName, textData, options);
          } else {
            currentNode.val = processTagValue(tagName, textData, options);
          }
        }

        if (options.stopNodes.length && options.stopNodes.includes(currentNode.tagname)) {
          currentNode.child = [];

          if (currentNode.attrsMap == undefined) {
            currentNode.attrsMap = {};
          }

          currentNode.val = xmlData.substr(currentNode.startIndex + 1, i - currentNode.startIndex - 1);
        }

        currentNode = currentNode.parent;
        textData = "";
        i = closeIndex;
      } else if (xmlData[i + 1] === '?') {
        i = findClosingIndex(xmlData, "?>", i, "Pi Tag is not closed.");
      } else if (xmlData.substr(i + 1, 3) === '!--') {
        i = findClosingIndex(xmlData, "-->", i, "Comment is not closed.");
      } else if (xmlData.substr(i + 1, 2) === '!D') {
        var _closeIndex = findClosingIndex(xmlData, ">", i, "DOCTYPE is not closed.");

        var tagExp = xmlData.substring(i, _closeIndex);

        if (tagExp.indexOf("[") >= 0) {
          i = xmlData.indexOf("]>", i) + 1;
        } else {
          i = _closeIndex;
        }
      } else if (xmlData.substr(i + 1, 2) === '![') {
        var _closeIndex2 = findClosingIndex(xmlData, "]]>", i, "CDATA is not closed.") - 2;

        var _tagExp = xmlData.substring(i + 9, _closeIndex2); //considerations
        //1. CDATA will always have parent node
        //2. A tag with CDATA is not a leaf node so it's value would be string type.


        if (textData) {
          currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(currentNode.tagname, textData, options);
          textData = "";
        }

        if (options.cdataTagName) {
          //add cdata node
          var childNode = new xmlNode(options.cdataTagName, currentNode, _tagExp);
          currentNode.addChild(childNode); //for backtracking

          currentNode.val = util.getValue(currentNode.val) + options.cdataPositionChar; //add rest value to parent node

          if (_tagExp) {
            childNode.val = _tagExp;
          }
        } else {
          currentNode.val = (currentNode.val || '') + (_tagExp || '');
        }

        i = _closeIndex2 + 2;
      } else {
        //Opening tag
        var result = closingIndexForOpeningTag(xmlData, i + 1);
        var _tagExp2 = result.data;
        var _closeIndex3 = result.index;

        var separatorIndex = _tagExp2.indexOf(" ");

        var _tagName = _tagExp2;
        var shouldBuildAttributesMap = true;

        if (separatorIndex !== -1) {
          _tagName = _tagExp2.substr(0, separatorIndex).replace(/\s\s*$/, '');
          _tagExp2 = _tagExp2.substr(separatorIndex + 1);
        }

        if (options.ignoreNameSpace) {
          var _colonIndex = _tagName.indexOf(":");

          if (_colonIndex !== -1) {
            _tagName = _tagName.substr(_colonIndex + 1);
            shouldBuildAttributesMap = _tagName !== result.data.substr(_colonIndex + 1);
          }
        } //save text to parent node


        if (currentNode && textData) {
          if (currentNode.tagname !== '!xml') {
            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(currentNode.tagname, textData, options);
          }
        }

        if (_tagExp2.length > 0 && _tagExp2.lastIndexOf("/") === _tagExp2.length - 1) {
          //selfClosing tag
          if (_tagName[_tagName.length - 1] === "/") {
            //remove trailing '/'
            _tagName = _tagName.substr(0, _tagName.length - 1);
            _tagExp2 = _tagName;
          } else {
            _tagExp2 = _tagExp2.substr(0, _tagExp2.length - 1);
          }

          var _childNode = new xmlNode(_tagName, currentNode, '');

          if (_tagName !== _tagExp2) {
            _childNode.attrsMap = buildAttributesMap(_tagExp2, options);
          }

          currentNode.addChild(_childNode);
        } else {
          //opening tag
          var _childNode2 = new xmlNode(_tagName, currentNode);

          if (options.stopNodes.length && options.stopNodes.includes(_childNode2.tagname)) {
            _childNode2.startIndex = _closeIndex3;
          }

          if (_tagName !== _tagExp2 && shouldBuildAttributesMap) {
            _childNode2.attrsMap = buildAttributesMap(_tagExp2, options);
          }

          currentNode.addChild(_childNode2);
          currentNode = _childNode2;
        }

        textData = "";
        i = _closeIndex3;
      }
    } else {
      textData += xmlData[i];
    }
  }

  return xmlObj;
};

function closingIndexForOpeningTag(data, i) {
  var attrBoundary;
  var tagExp = "";

  for (var index = i; index < data.length; index++) {
    var ch = data[index];

    if (attrBoundary) {
      if (ch === attrBoundary) attrBoundary = ""; //reset
    } else if (ch === '"' || ch === "'") {
      attrBoundary = ch;
    } else if (ch === '>') {
      return {
        data: tagExp,
        index: index
      };
    } else if (ch === '\t') {
      ch = " ";
    }

    tagExp += ch;
  }
}

function findClosingIndex(xmlData, str, i, errMsg) {
  var closingIndex = xmlData.indexOf(str, i);

  if (closingIndex === -1) {
    throw new Error(errMsg);
  } else {
    return closingIndex + str.length - 1;
  }
}

exports.getTraversalObj = getTraversalObj;

/***/ }),

/***/ 36139:
/*!***************************************!*\
  !*** ./node_modules/strnum/strnum.js ***!
  \***************************************/
/***/ (function(module) {

var hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;
var numRegex = /^([\-\+])?(0*)(\.[0-9]+([eE]\-?[0-9]+)?|[0-9]+(\.[0-9]+([eE]\-?[0-9]+)?)?)$/; // const octRegex = /0x[a-z0-9]+/;
// const binRegex = /0x[a-z0-9]+/;

var consider = {
  hex: true,
  leadingZeros: true,
  decimalPoint: "\." //skipLike: /regex/

};

function toNumber(str) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  // const options = Object.assign({}, consider);
  // if(opt.leadingZeros === false){
  //     options.leadingZeros = false;
  // }else if(opt.hex === false){
  //     options.hex = false;
  // }
  options = Object.assign({}, consider, options);
  if (!str || typeof str !== "string") return str;
  var trimmedStr = str.trim();
  if (options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;else if (options.hex && hexRegex.test(trimmedStr)) {
    return Number.parseInt(trimmedStr, 16); // } else if (options.parseOct && octRegex.test(str)) {
    //     return Number.parseInt(val, 8);
    // }else if (options.parseBin && binRegex.test(str)) {
    //     return Number.parseInt(val, 2);
  } else {
    //separate negative sign, leading zeros, and rest number
    var match = numRegex.exec(trimmedStr);

    if (match) {
      var negative = match[1];
      var leadingZeros = match[2];
      var num = match[3]; //complete num

      var eNotation = match[4] || match[6];
      if (leadingZeros.length === 1 && num[0] === ".") return Number(str);else if (!options.leadingZeros && leadingZeros.length > 0) return str;else return Number(trimmedStr);
    } else {
      //non-numeric string
      return str;
    }
  }
}

module.exports = toNumber;

/***/ }),

/***/ 31098:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 6389:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 54648:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 48583:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 38461:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 825:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 51029:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 54984:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 50803:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 55185:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 26280:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 9575:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 42780:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 41815:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 24745:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 46122:
/*!**************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/package.json ***!
  \**************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"@aws-sdk/client-s3","description":"AWS SDK for JavaScript S3 Client for Node.js, Browser and React Native","version":"3.6.1","scripts":{"clean":"yarn remove-definitions && yarn remove-dist && yarn remove-documentation","build-documentation":"yarn remove-documentation && typedoc ./","prepublishOnly":"yarn build","pretest":"yarn build:cjs","remove-definitions":"rimraf ./types","remove-dist":"rimraf ./dist","remove-documentation":"rimraf ./docs","test:unit":"mocha **/cjs/**/*.spec.js","test:e2e":"mocha **/cjs/**/*.ispec.js && karma start karma.conf.js","test":"yarn test:unit","build:cjs":"tsc -p tsconfig.json","build:es":"tsc -p tsconfig.es.json","build":"yarn build:cjs && yarn build:es","postbuild":"downlevel-dts types types/ts3.4"},"main":"./dist/cjs/index.js","types":"./types/index.d.ts","module":"./dist/es/index.js","browser":{"./runtimeConfig":"./runtimeConfig.browser"},"react-native":{"./runtimeConfig":"./runtimeConfig.native"},"sideEffects":false,"dependencies":{"@aws-crypto/sha256-browser":"^1.0.0","@aws-crypto/sha256-js":"^1.0.0","@aws-sdk/config-resolver":"3.6.1","@aws-sdk/credential-provider-node":"3.6.1","@aws-sdk/eventstream-serde-browser":"3.6.1","@aws-sdk/eventstream-serde-config-resolver":"3.6.1","@aws-sdk/eventstream-serde-node":"3.6.1","@aws-sdk/fetch-http-handler":"3.6.1","@aws-sdk/hash-blob-browser":"3.6.1","@aws-sdk/hash-node":"3.6.1","@aws-sdk/hash-stream-node":"3.6.1","@aws-sdk/invalid-dependency":"3.6.1","@aws-sdk/md5-js":"3.6.1","@aws-sdk/middleware-apply-body-checksum":"3.6.1","@aws-sdk/middleware-bucket-endpoint":"3.6.1","@aws-sdk/middleware-content-length":"3.6.1","@aws-sdk/middleware-expect-continue":"3.6.1","@aws-sdk/middleware-host-header":"3.6.1","@aws-sdk/middleware-location-constraint":"3.6.1","@aws-sdk/middleware-logger":"3.6.1","@aws-sdk/middleware-retry":"3.6.1","@aws-sdk/middleware-sdk-s3":"3.6.1","@aws-sdk/middleware-serde":"3.6.1","@aws-sdk/middleware-signing":"3.6.1","@aws-sdk/middleware-ssec":"3.6.1","@aws-sdk/middleware-stack":"3.6.1","@aws-sdk/middleware-user-agent":"3.6.1","@aws-sdk/node-config-provider":"3.6.1","@aws-sdk/node-http-handler":"3.6.1","@aws-sdk/protocol-http":"3.6.1","@aws-sdk/smithy-client":"3.6.1","@aws-sdk/types":"3.6.1","@aws-sdk/url-parser":"3.6.1","@aws-sdk/url-parser-native":"3.6.1","@aws-sdk/util-base64-browser":"3.6.1","@aws-sdk/util-base64-node":"3.6.1","@aws-sdk/util-body-length-browser":"3.6.1","@aws-sdk/util-body-length-node":"3.6.1","@aws-sdk/util-user-agent-browser":"3.6.1","@aws-sdk/util-user-agent-node":"3.6.1","@aws-sdk/util-utf8-browser":"3.6.1","@aws-sdk/util-utf8-node":"3.6.1","@aws-sdk/util-waiter":"3.6.1","@aws-sdk/xml-builder":"3.6.1","fast-xml-parser":"^3.16.0","tslib":"^2.0.0"},"devDependencies":{"@aws-sdk/client-documentation-generator":"3.6.1","@types/chai":"^4.2.11","@types/mocha":"^8.0.4","@types/node":"^12.7.5","downlevel-dts":"0.7.0","jest":"^26.1.0","rimraf":"^3.0.0","typedoc":"^0.19.2","typescript":"~4.1.2"},"engines":{"node":">=10.0.0"},"typesVersions":{"<4.0":{"types/*":["types/ts3.4/*"]}},"author":{"name":"AWS SDK for JavaScript Team","url":"https://aws.amazon.com/javascript/"},"license":"Apache-2.0","homepage":"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-s3","repository":{"type":"git","url":"https://github.com/aws/aws-sdk-js-v3.git","directory":"clients/client-s3"}}');

/***/ })

}]);
//# sourceMappingURL=default-node_modules_aws-amplify_ui-components_dist_esm_storage-helpers-1afafead_js.js.map