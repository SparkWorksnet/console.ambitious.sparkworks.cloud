{"version":3,"file":"node_modules_aws-amplify_ui-components_dist_esm_amplify-authenticator_entry_js.js","mappings":"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","sources":["./node_modules/@aws-amplify/ui-components/dist/esm/amplify-authenticator.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-83f2275b.js';\nimport { Logger, Hub } from '@aws-amplify/core';\nimport { A as AuthState } from './auth-types-78df304e.js';\nimport { appendToCognitoUserAgent, Auth } from '@aws-amplify/auth';\nimport './Translations-c833f663.js';\nimport { T as TOAST_AUTH_ERROR_EVENT, U as UI_AUTH_CHANNEL, A as AUTH_CHANNEL, N as NO_AUTH_MODULE_FOUND } from './constants-c8ecaa24.js';\nimport { d as dispatchAuthStateChangeEvent, o as onAuthUIStateChange } from './helpers-9703fe65.js';\nimport { c as checkContact } from './auth-helpers-475f7fa4.js';\n\nconst authSlotNames = {\n    [AuthState.SignIn]: 'sign-in',\n    [AuthState.ConfirmSignIn]: 'confirm-sign-in',\n    [AuthState.SignUp]: 'sign-up',\n    [AuthState.ConfirmSignUp]: 'confirm-sign-up',\n    [AuthState.ForgotPassword]: 'forgot-password',\n    [AuthState.ResetPassword]: 'require-new-password',\n    [AuthState.VerifyContact]: 'verify-contact',\n    [AuthState.TOTPSetup]: 'totp-setup',\n    [AuthState.Loading]: 'loading',\n};\n\nconst amplifyAuthenticatorCss = \":host{--background-color:var(--amplify-background-color);--width:28.75rem;--min-width:20rem;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;--box-shadow:1px 1px 4px 0 rgba(0, 0, 0, 0.15);--border-radius:6px;--padding:35px 40px;--margin-bottom:20px;--container-height:100vh;--container-display:flex;--container-justify:center;--container-align:center}.auth-container{display:var(--container-display);-ms-flex-pack:var(--container-justify);justify-content:var(--container-justify);-ms-flex-align:var(--container-align);align-items:var(--container-align);min-height:var(--container-height)}\";\n\nconst logger = new Logger('Authenticator');\nconst AmplifyAuthenticator = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Initial starting state of the Authenticator component. E.g. If `signup` is passed the default component is set to AmplifySignUp */\n        this.initialAuthState = AuthState.SignIn;\n        /** Callback for Authenticator state machine changes */\n        this.handleAuthStateChange = () => { };\n        /** Hide amplify-toast for auth errors */\n        this.hideToast = false;\n        this.authState = AuthState.Loading;\n        this.toastMessage = '';\n        this.handleExternalAuthEvent = ({ payload }) => {\n            switch (payload.event) {\n                case 'cognitoHostedUI':\n                case 'signIn':\n                    checkContact(payload.data, dispatchAuthStateChangeEvent);\n                    break;\n                case 'cognitoHostedUI_failure':\n                case 'parsingUrl_failure':\n                case 'signOut':\n                case 'customGreetingSignOut':\n                    return dispatchAuthStateChangeEvent(this.initialAuthState);\n            }\n        };\n        this.handleToastEvent = ({ payload }) => {\n            switch (payload.event) {\n                case TOAST_AUTH_ERROR_EVENT:\n                    if (payload.message)\n                        this.toastMessage = payload.message;\n                    break;\n            }\n        };\n    }\n    async componentWillLoad() {\n        onAuthUIStateChange((authState, authData) => {\n            this.onAuthStateChange(authState, authData);\n            this.toastMessage = '';\n        });\n        if (!this.hideToast)\n            Hub.listen(UI_AUTH_CHANNEL, this.handleToastEvent);\n        Hub.listen(AUTH_CHANNEL, this.handleExternalAuthEvent);\n        appendToCognitoUserAgent('amplify-authenticator');\n        await this.checkUser();\n    }\n    async checkUser() {\n        if (!Auth || typeof Auth.currentAuthenticatedUser !== 'function') {\n            throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n        return Auth.currentAuthenticatedUser()\n            .then(user => {\n            dispatchAuthStateChangeEvent(AuthState.SignedIn, user);\n        })\n            .catch(() => {\n            dispatchAuthStateChangeEvent(this.initialAuthState);\n        });\n    }\n    async onAuthStateChange(nextAuthState, data) {\n        if (nextAuthState === undefined)\n            return logger.error('nextAuthState cannot be undefined');\n        logger.info('Inside onAuthStateChange Method current authState:', this.authState);\n        if (nextAuthState === AuthState.SignedOut) {\n            this.authState = this.initialAuthState;\n        }\n        else {\n            this.authState = nextAuthState;\n        }\n        this.authData = data;\n        if (this.authData)\n            logger.log('Auth Data was set:', this.authData);\n        if (this.authState === nextAuthState) {\n            this.handleAuthStateChange(this.authState, this.authData);\n            logger.info(`authState has been updated to ${this.authState}`);\n        }\n    }\n    // Returns the auth component corresponding to the given authState.\n    getAuthComponent(authState) {\n        switch (authState) {\n            case AuthState.SignIn:\n                return (h(\"amplify-sign-in\", { federated: this.federated, usernameAlias: this.usernameAlias }));\n            case AuthState.ConfirmSignIn:\n                return h(\"amplify-confirm-sign-in\", { user: this.authData });\n            case AuthState.SignUp:\n                return h(\"amplify-sign-up\", { usernameAlias: this.usernameAlias });\n            case AuthState.ConfirmSignUp:\n                return (h(\"amplify-confirm-sign-up\", { user: this.authData, usernameAlias: this.usernameAlias }));\n            case AuthState.ForgotPassword:\n                return h(\"amplify-forgot-password\", { usernameAlias: this.usernameAlias });\n            case AuthState.ResetPassword:\n                return h(\"amplify-require-new-password\", { user: this.authData });\n            case AuthState.VerifyContact:\n                return h(\"amplify-verify-contact\", { user: this.authData });\n            case AuthState.TOTPSetup:\n                return h(\"amplify-totp-setup\", { user: this.authData });\n            case AuthState.Loading:\n                return h(\"div\", null, \"Loading...\");\n            default:\n                throw new Error(`Unhandled auth state: ${authState}`);\n        }\n    }\n    // Returns a slot containing the Auth component corresponding to the given authState\n    getSlotWithAuthComponent(authState) {\n        const authComponent = this.getAuthComponent(authState);\n        const slotName = authSlotNames[authState];\n        const slotIsEmpty = this.el.querySelector(`[slot=\"${slotName}\"]`) === null; // true if no element has been inserted to the slot\n        /**\n         * Connect the inner auth component to DOM only if the slot hasn't been overwritten. This prevents\n         * the overwritten component from calling its lifecycle methods.\n         */\n        return h(\"slot\", { name: slotName }, slotIsEmpty && authComponent);\n    }\n    disconnectedCallback() {\n        Hub.remove(AUTH_CHANNEL, this.handleExternalAuthEvent);\n        if (!this.hideToast)\n            Hub.remove(UI_AUTH_CHANNEL, this.handleToastEvent);\n        return onAuthUIStateChange;\n    }\n    render() {\n        return (h(Host, null, !this.hideToast && this.toastMessage && (h(\"amplify-toast\", { message: this.toastMessage, handleClose: () => {\n                this.toastMessage = '';\n            }, \"data-test\": \"authenticator-error\" })), this.authState === AuthState.SignedIn ? ([h(\"slot\", { name: \"greetings\" }), h(\"slot\", null)]) : (h(\"div\", { class: \"auth-container\" }, this.getSlotWithAuthComponent(this.authState)))));\n    }\n    get el() { return getElement(this); }\n};\nAmplifyAuthenticator.style = amplifyAuthenticatorCss;\n\nexport { AmplifyAuthenticator as amplify_authenticator };\n"],"names":["r","registerInstance","h","H","Host","g","getElement","Logger","Hub","A","AuthState","appendToCognitoUserAgent","Auth","T","TOAST_AUTH_ERROR_EVENT","U","UI_AUTH_CHANNEL","AUTH_CHANNEL","N","NO_AUTH_MODULE_FOUND","d","dispatchAuthStateChangeEvent","o","onAuthUIStateChange","c","checkContact","authSlotNames","SignIn","ConfirmSignIn","SignUp","ConfirmSignUp","ForgotPassword","ResetPassword","VerifyContact","TOTPSetup","Loading","amplifyAuthenticatorCss","logger","AmplifyAuthenticator","hostRef","initialAuthState","handleAuthStateChange","hideToast","authState","toastMessage","handleExternalAuthEvent","payload","event","data","handleToastEvent","message","authData","onAuthStateChange","listen","checkUser","currentAuthenticatedUser","Error","then","user","SignedIn","catch","nextAuthState","undefined","error","info","SignedOut","log","federated","usernameAlias","authComponent","getAuthComponent","slotName","slotIsEmpty","el","querySelector","name","remove","handleClose","class","getSlotWithAuthComponent","style","amplify_authenticator"],"sourceRoot":"webpack:///"}