{"version":3,"file":"node_modules_aws-amplify_ui-components_dist_esm_amplify-s3-image-picker_entry_js.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMiB,MAAM,GAAG,IAAIZ,6DAAJ,CAAW,eAAX,CAAf;;AACA,IAAMa,oBAAoB;AACtB,gCAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjBlB,IAAAA,qDAAgB,CAAC,IAAD,EAAOkB,OAAP,CAAhB;AACA;;AACA,SAAKC,WAAL,GAAmB,qBAAnB;AACA;;AACA,SAAKC,KAAL,GAAab,gEAAb;AACA;;AACA,SAAKe,WAAL,GAAmBb,2EAAnB;AACA;;AACA,SAAKe,UAAL,GAAkBf,0EAAlB;AACA;;AACA,SAAKiB,eAAL,GAAuBjB,sFAAvB;AACA;;AACA,SAAKmB,UAAL,GAAkBnB,iFAAlB;;AACA,SAAKqB,UAAL;AAAA,uVAAkB,iBAAOC,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAC6C,KAD7C,CACNC,IADM,EACNA,IADM,2BACC,EADD,eACKZ,KADL,GAC6C,KAD7C,CACKA,KADL,EACYa,KADZ,GAC6C,KAD7C,CACYA,KADZ,EACmBC,UADnB,GAC6C,KAD7C,CACmBA,UADnB,EAC+BC,SAD/B,GAC6C,KAD7C,CAC+BA,SAD/B;AAERC,gBAAAA,GAFQ,GAEFJ,IAAI,GAAGrB,+DAAO,CAACoB,IAAD,EAAOI,SAAP,CAFZ;AAAA;AAAA;AAAA,uBAIJtB,+DAAgB,CAACuB,GAAD,EAAML,IAAN,EAAYX,KAAZ,EAAmBa,KAAnB,EAA0BF,IAAI,CAAC,MAAD,CAA9B,EAAwCf,MAAxC,CAJZ;;AAAA;AAAA;AAAA,uBAKOD,+DAAgB,CAACqB,GAAD,EAAMhB,KAAN,EAAaa,KAAb,EAAoBC,UAApB,EAAgClB,MAAhC,CALvB;;AAAA;AAKV,qBAAI,CAACqB,GALK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQVrB,gBAAAA,MAAM,CAACsB,KAAP;AARU,sBASJ,IAAIC,KAAJ,aATI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB;;AAAA;AAAA;AAAA;AAAA;AAYH;;AA3BqB;AAAA;AAAA,WA4BtB,kBAAS;AACL,aAAQtC,qDAAC,CAACE,iDAAD,EAAO,IAAP,EAAaF,qDAAC,CAAC,MAAD,EAAS;AAAEuC,QAAAA,IAAI,EAAE;AAAR,OAAT,EAAmCvC,qDAAC,CAAC,sBAAD,EAAyB;AAAEwC,QAAAA,UAAU,EAAE,KAAKJ,GAAnB;AAAwBK,QAAAA,WAAW,EAAE,KAAKZ,UAA1C;AAAsDR,QAAAA,WAAW,EAAEjB,wDAAA,CAAS,KAAKiB,WAAd,CAAnE;AAA+FE,QAAAA,UAAU,EAAEnB,wDAAA,CAAS,KAAKmB,UAAd,CAA3G;AAAsIE,QAAAA,eAAe,EAAErB,wDAAA,CAAS,KAAKqB,eAAd,CAAvJ;AAAuLE,QAAAA,UAAU,EAAEvB,wDAAA,CAAS,KAAKuB,UAAd;AAAnM,OAAzB,CAApC,CAAd,CAAT;AACH;AA9BqB;;AAAA;AAAA,GAA1B","sources":["./node_modules/@aws-amplify/ui-components/dist/esm/amplify-s3-image-picker.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-83f2275b.js';\nimport { Logger, I18n } from '@aws-amplify/core';\nimport { A as AccessLevel } from './storage-types-f257c0f2.js';\nimport '@aws-amplify/auth';\nimport { T as Translations } from './Translations-c833f663.js';\nimport './constants-c8ecaa24.js';\nimport '@aws-amplify/storage';\nimport { c as calcKey, p as putStorageObject, g as getStorageObject } from './storage-helpers-1afafead.js';\n\nconst logger = new Logger('S3ImagePicker');\nconst AmplifyS3ImagePicker = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** The content type header used when uploading to S3 */\n        this.contentType = 'binary/octet-stream';\n        /** The access level of the image */\n        this.level = AccessLevel.Public;\n        /** Title string value */\n        this.headerTitle = Translations.IMAGE_PICKER_TITLE;\n        /** Header Hint value in string */\n        this.headerHint = Translations.IMAGE_PICKER_HINT;\n        /** Placeholder hint that goes under the placeholder image */\n        this.placeholderHint = Translations.IMAGE_PICKER_PLACEHOLDER_HINT;\n        /** Upload Button Text as string */\n        this.buttonText = Translations.IMAGE_PICKER_BUTTON_TEXT;\n        this.handlePick = async (file) => {\n            const { path = '', level, track, identityId, fileToKey } = this;\n            const key = path + calcKey(file, fileToKey);\n            try {\n                await putStorageObject(key, file, level, track, file['type'], logger);\n                this.src = await getStorageObject(key, level, track, identityId, logger);\n            }\n            catch (error) {\n                logger.error(error);\n                throw new Error(error);\n            }\n        };\n    }\n    render() {\n        return (h(Host, null, h(\"slot\", { name: \"photo-picker\" }, h(\"amplify-photo-picker\", { previewSrc: this.src, handleClick: this.handlePick, headerTitle: I18n.get(this.headerTitle), headerHint: I18n.get(this.headerHint), placeholderHint: I18n.get(this.placeholderHint), buttonText: I18n.get(this.buttonText) }))));\n    }\n};\n\nexport { AmplifyS3ImagePicker as amplify_s3_image_picker };\n"],"names":["r","registerInstance","h","H","Host","Logger","I18n","A","AccessLevel","T","Translations","c","calcKey","p","putStorageObject","g","getStorageObject","logger","AmplifyS3ImagePicker","hostRef","contentType","level","Public","headerTitle","IMAGE_PICKER_TITLE","headerHint","IMAGE_PICKER_HINT","placeholderHint","IMAGE_PICKER_PLACEHOLDER_HINT","buttonText","IMAGE_PICKER_BUTTON_TEXT","handlePick","file","path","track","identityId","fileToKey","key","src","error","Error","name","previewSrc","handleClick","get","amplify_s3_image_picker"],"sourceRoot":"webpack:///"}