{"version":3,"file":"node_modules_aws-amplify_ui-components_dist_esm_amplify-s3-image_entry_js.js","mappings":"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","sources":["./node_modules/@aws-amplify/ui-components/dist/esm/amplify-s3-image.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-83f2275b.js';\nimport { Logger } from '@aws-amplify/core';\nimport { A as AccessLevel } from './storage-types-f257c0f2.js';\nimport './constants-c8ecaa24.js';\nimport '@aws-amplify/storage';\nimport { p as putStorageObject, g as getStorageObject } from './storage-helpers-1afafead.js';\n\nconst amplifyS3ImageCss = \":host{height:inherit;width:inherit;--height:inherit;--width:inherit}img{height:var(--height);width:var(--width)}\";\n\nconst logger = new Logger('S3Image');\nconst AmplifyS3Image = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** The content type header used when uploading to S3 */\n        this.contentType = 'binary/octet-stream';\n        /** The access level of the image */\n        this.level = AccessLevel.Public;\n    }\n    async watchHandler() {\n        await this.load();\n    }\n    async componentWillLoad() {\n        await this.load();\n    }\n    async load() {\n        const { imgKey, path, body, contentType, level, track, identityId } = this;\n        if (!imgKey && !path) {\n            logger.debug('empty imgKey and path');\n            return;\n        }\n        const key = imgKey || path;\n        logger.debug('loading ' + key + '...');\n        try {\n            if (body) {\n                await putStorageObject(imgKey, body, level, track, contentType, logger);\n            }\n            this.src = await getStorageObject(key, level, track, identityId, logger);\n        }\n        catch (err) {\n            logger.debug(err);\n            throw new Error(err);\n        }\n    }\n    render() {\n        return (h(Host, null, this.src && (h(\"img\", Object.assign({ src: this.src, alt: this.alt, onLoad: this.handleOnLoad, onError: this.handleOnError }, this.imgProps)))));\n    }\n    static get watchers() { return {\n        \"body\": [\"watchHandler\"]\n    }; }\n};\nAmplifyS3Image.style = amplifyS3ImageCss;\n\nexport { AmplifyS3Image as amplify_s3_image };\n"],"names":["r","registerInstance","h","H","Host","Logger","A","AccessLevel","p","putStorageObject","g","getStorageObject","amplifyS3ImageCss","logger","AmplifyS3Image","hostRef","contentType","level","Public","load","imgKey","path","body","track","identityId","debug","key","src","Error","Object","assign","alt","onLoad","handleOnLoad","onError","handleOnError","imgProps","style","amplify_s3_image"],"sourceRoot":"webpack:///"}